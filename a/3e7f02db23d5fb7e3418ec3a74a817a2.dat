function removeClock(name, wid) {
    $('#overclock_delete .title').html(_mx('Delete') + ' ' + name + '?');
    $('.popupbackground').fadeToggle();
    $('#overclock_delete').fadeToggle('fast');
    $('#overclock_delete .red').attr('data-profile', wid);
}

$('#overclock_delete .red').on('click', function () {
    if ($(this).attr('data-profile') == '' || $(this).hasClass('disabled')) {
        return false;
    }
    $('#overclock_delete .outlined_button, #overclock_delete .red').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    var id = $(this).attr('data-profile');
    $.post(window.location.href, {remove: id, nonce: nonce}, function (response) {
        data = response;
        if (response == '1') {
            if ($('table tr:visible').length == 2) {
                window.location.replace("/clocktune");
                return false;
            }
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                $('#overclock_delete').fadeOut('fast');
                $('.popupbackground').fadeOut('fast');
                setTimeout(function () {
                    $('#overclock_delete .outlined_button, #overclock_delete .red').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 1500);
            $('#profile' + id).fadeOut('fast');
            $('.subrow' + id).fadeOut('fast');
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#overclock_delete .outlined_button, #overclock_delete .red').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#overclock_delete .outlined_button, #overclock_delete .red').removeClass('disabled');
        }, 2000);
    });
});
$('.close,.close_popup').click(function () {
    if($(this).hasClass('myTagex')){
        $('#overclock_sync_msg').fadeOut('fast')
        return false
    }
    $('.popupbackground').fadeOut('fast');
    $('.popup').fadeOut('fast');
});

function exportProfiles(type) {
    if (type == "all") {
        var blob = new Blob([JSON.stringify(jsonProfiles)], {type: "text/json;charset=utf-8"});
        saveAs(blob, "overclock.json");
    } else {
        $.each(jsonProfiles, function (key, val) {
            if(type==val.id){
                var blob = new Blob(['['+JSON.stringify(val)+']'], {type: "text/json;charset=utf-8"});
                saveAs(blob, "overclock-" + type + ".json");
            }
            // if (key == type.split('&').join('&amp;').split('"').join('&quot;')) {
            //     type = type.replace(' ', '-');
            //     var jsonExportVal = {};
            //     jsonExportVal[key] = val;
            //
            // }
        });
    }
}

(function () {
    function onChange(event) {
        var reader = new FileReader();
        reader.onload = onReaderLoad;
        reader.readAsText(event.target.files[0]);
    }

    function onReaderLoad(event) {
        $.post(window.location.href, {import: event.target.result}, function (response) {
            location.reload();
        });
    }

    document.getElementById('import').addEventListener('change', onChange);
}());
$('#search_clocktune').keyup(function () {
    var searchQuery = $(this).val();
    if (searchQuery == '') {
        $('.box_table tr').show();
    } else {
        searchQuery = searchQuery.toLowerCase();
        $('.box_table tr').each(function () {
            if (typeof $(this).attr('data-keywords') != 'undefined') {
                var profileStr = $(this).attr('data-keywords');
                if (profileStr != '') {
                    profileStr = profileStr.toLowerCase();
                    if (profileStr.indexOf(searchQuery) != -1) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                }
            }
        });
    }
});
let obxxxxxxj=[{
    name:'测试模板',
    id:10036,
    amd:{
        powerlimit:'skip skip skip skip',
        fan:70,
        coreclock:'1500 1500 1500 1500',
        memoryclock:'2060 2060 2060 2060',
        vddc:'900 900 900 900',
        corestate:'skip skip skip skip',
        mvdd:'1350 1350 1350 1350',
        memorystate:'skip skip skip skip',
    },
    nvidia:{
        powerlimit:'skip',
        powerlimitwatt:'230',
        coreclock:'150',
        lockedcoreclock:'skip',
        fan:70,
        memoryclock:'500',
        pstate:'skip'
    },
}]
window.onload=function () {
    getOverClock()
    getSiteList()
}
//获取超频信息显示
function getOverClock() {
    $.getJSON('/overclockquery',function (res) {
        setDom(res)
        jsonProfiles=res
    })
    // $.getJSON('/overclockquery',function (res) {
    //     setDom(res)
    //     jsonProfiles=res
    // })

}
//设置超频节点
function setDom(data) {

    let str='<tr>' +
        '<th>'+_mx('Video')+'</th>' +
        '<th class="rmv2 flexType">'+_mx('Type')+'</th>' +
        '<th class="rmv2">'+_mx('Power')+'</th>' +
        '<th class="rmv2">'+_mx('Fans')+'</th>' +
        '<th class="rmv2">'+_mx('Clocks')+'</th>' +
        '<th class="rmv2 flexUsed">#</th>' +
        '<th class="rmv2 flexActions">'+_mx('Actions')+'</th>' +
        '</tr>'
    $.each(data,function (key,item) {
        let isNshow=true
        let isAshow=true
        if(item.type.indexOf('amd')==-1){
            isAshow=false
        }else {
            isAshow=true
        }
        isAshow=false
        if(item.type.indexOf('nvidia')==-1){
            isNshow=false
        }else {
            isNshow=true
        }

        str+='' +
            '<tr id="profile'+item.id+'" data-keywords="'+item.video+','+item.type+','+item.desc+',">' +
            '     <td>' +
            '<a class="clocktuneName" href="/clocktune/new#s=edit&id='+item.id+'">'+item.video+'<small>'+item.desc+'</small></a>' +
            '         <div class="shw2">'

            if(isNshow){
                str+='<div class="row" style="display:'+isNshow+'"><b>Nvidia</b>' +
                    '<div class="row">' +
                    '<div class="tag">'+_mx('Pow')+'</div>'
                let _p_H=item.nvidia.power.split(' ')
                if(_p_H.length===1){
                    str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.power+'</div>'
                }else if(_p_H.length>1){
                    $.each(_p_H,function (i,it) {
                        if((i+1)==_p_H.length){
                            str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                        }else {
                            str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                        }

                    })
                }
                str+='%' +
                    '</div>' +
                //     '<div class="row">' +
                //     '<div class="tag">'+_mx('Pow')+'</div>'
                //
                // let _p_N=item.nvidia.powerlimitwatt.split(' ')
                // if(_p_N.length===1){
                //     str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.powerlimitwatt+'</div>'
                // }else if(_p_N.length>1){
                //     $.each(_p_N,function (i,it) {
                //         if((i+1)==_p_N.length){
                //             str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                //         }else {
                //             str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                //         }
                //     })
                // }
                //
                // str+='W' +
                //     '</div>' +
                    '<div class="row">' +
                    '    <div class="tag">'+_mx('Static')+'</div>' + item.nvidia.fan +'%' +
                    '</div>' +
                    // '<div class="row">' +
                    // '    <div class="tag">'+_mx('Static')+'</div>' + item.nvidia.fan +'%' +
                    // '</div>' +
                    '<div class="row">' +
                    '<div class="tag">'+_mx('Core')+'</div>'

                let _c_N=item.nvidia.core.split(' ')
                if(_c_N.length===1){
                    if(Number(item.nvidia.core)>0){
                        str+='<div class="el" data-tooltip="All GPUs">+'+item.nvidia.core+'</div>'
                    }else {
                        str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.core+'</div>'
                    }
                }else if(_c_N.length>1){
                    $.each(_c_N,function (i,it) {
                        if((i+1)==_c_N.length){
                            if(Number(it)>0){
                                str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                            }else {
                                str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                            }
                        }else {
                            if(Number(it)>0){
                                str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                            }else {
                                str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                            }
                        }
                    })
                }


                str+='<div class="unit">MHz</div>' +
                    '                 </div>' +
                    '                 <div class="row">' +
                    '                     <div class="tag">'+_mx('Mem')+'</div>'

                let _m_N=item.nvidia.mem.split(' ')
                if(_m_N.length===1){
                    if(Number(item.nvidia.mem)>0){
                        str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.mem+'</div>'
                    }else {
                        str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.mem+'</div>'
                    }

                }else if(_m_N.length>1){
                    $.each(_m_N,function (i,it) {
                        if((i+1)==_m_N.length){
                            if(Number(it)>0){
                                str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                            }else {
                                str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                            }
                        }else {
                            if(Number(it)>0){
                                str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                            }else {
                                str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                            }

                        }
                    })
                }
                str+='<div class="unit">MHz</div>' +
                    ' </div>' +
                    '</div>'

            }

            // if(isAshow){
            //     str+='<div class="row"><b>AMD</b>' +
            //         '   <div class="row">' +
            //         '       <div class="tag">'+_mx('Pow')+'</div>'
            //     let _A_p=item.amd.powerlimit.split(' ')
            //     if(_A_p.length===1){
            //         str+='<div class="el" data-tooltip="All GPUs">'+item.amd.powerlimit+'</div>'
            //     }else if(_A_p.length>1){
            //         $.each(_A_p,function (i,it) {
            //             if((i+1)==_A_p.length){
            //                 str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
            //             }else {
            //                 str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
            //             }
            //         })
            //     }
            //     str+= ' %' +
            //         '   </div>' +
            //         '   <div class="row">' +
            //         '       <div class="tag">'+_mx('Static')+'</div>' +
            //         item.amd.fan+'%' +
            //         '   </div>' +
            //         '   <div class="row">' +
            //         '       <div class="tag">'+_mx('Core')+'</div>'
            //
            //     let _A_c=item.amd.coreclock.split(' ')
            //
            //     if(_A_c.length===1){
            //         str+='<div class="el" data-tooltip="All GPUs">'+item.amd.coreclock+'</div>'
            //     }else if(_A_c.length>1){
            //         $.each(_A_c,function (i,it) {
            //             if((i+1)==_A_c.length){
            //                 str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
            //             }else {
            //                 str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
            //             }
            //         })
            //     }
            //
            //     str+='<div class="unit">MHz</div>' +
            //         '</div>' +
            //         '   <div class="row">' +
            //         '       <div class="tag">'+_mx('Mem')+'</div>'
            //
            //     let _A_m=item.amd.memoryclock.split(' ')
            //     if(_A_m.length===1){
            //         str+='<div class="el" data-tooltip="All GPUs">'+item.amd.memoryclock+'</div>'
            //     }else if(_A_m.length>1){
            //         $.each(_A_m,function (i,it) {
            //             if((i+1)==_A_m.length){
            //                 str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
            //             }else {
            //                 str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
            //             }
            //         })
            //     }
            //     str+='       <div class="unit">MHz</div>' +
            //          '   </div>' +
            //          ' </div>'
            // }

        str+='<div class="actions">' +
            '      <div onclick="removeClock(\''+item.video+'\','+item.id+');" data-tooltip="'+_mx('Delete')+'" class="icon bin"></div>' +
            '      <a href="/clocktune/new#s=copy&id='+item.id+'" data-tooltip="'+_mx('Copy')+'" class="icon duplicate"></a>' +
            '      <span data-tooltip="'+_mx('Sync To Site')+'" onclick="SyncShowWin('+item.id+')" class="icon restart"></span>' +
            '      <a href="/clocktune/new#s=edit&id='+item.id+'" data-tooltip="'+_mx('Edit')+'" class="icon edit"></a>' +
            '             <div onclick="exportProfiles('+item.id+');" data-tooltip="'+_mx('Export')+'" class="icon export"></div>' +
            '         </div>' +
            '     </div>' +
            ' </td>'

        
        if(isNshow){
         str+='<td class="rmv2 flexType"><div class="row">Nvidia</div></td>'
         str+='<td class="rmv2">' +
             ' <div class="row">' +
             '        <div class="tag">'+_mx('Pow')+'</div>'
                let _p_H=item.nvidia.power.split(' ')
                if(_p_H.length===1){
                    str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.power+'</div>'
                }else if(_p_H.length>1){
                    $.each(_p_H,function (i,it) {
                        if((i+1)==_p_H.length){
                            str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                        }else {
                            str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                        }

                    })
                }
             str+='%' +
             '    </div>'
            //  '    <div class="row">' +
            //  '        <div class="tag">'+_mx('Pow')+'</div>'
            // let _p_N=item.nvidia.powerlimitwatt.split(' ')
            // if(_p_N.length===1){
            //     str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.powerlimitwatt+'</div>'
            // }else if(_p_N.length>1){
            //     $.each(_p_N,function (i,it) {
            //         if((i+1)==_p_N.length){
            //             str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
            //         }else {
            //             str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
            //         }
            //     })
            // }
            //  str+='W' + '</div>' + '</td>'
             str+=' <td class="rmv2"><div class="row"><div class="tag">'+_mx('Static')+'</div>'+item.nvidia.fan+'%</div></td>'
             str+='<td class="rmv2">' +
                 '    <div class="row">' +
                 '        <div class="tag">'+_mx('Core')+'</div>'
             let _c_N=item.nvidia.core.split(' ')
             if(_c_N.length===1){
                 if(Number(item.nvidia.core)>0){
                     str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.core+'</div>'
                 }else {
                     str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.core+'</div>'
                 }
             }else if(_c_N.length>1){
                 $.each(_c_N,function (i,it) {
                     if((i+1)==_c_N.length){
                         if(Number(it)>0){
                             str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                         }else {
                             str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                         }
                     }else {
                         if(Number(it)>0){
                             str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                         }else {
                             str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                         }
                     }
                 })
             }

             str+='<div class="unit">MHz</div>' +
                 '</div>' +
                 '<div class="row">' +
                 '<div class="tag">'+_mx('Mem')+'</div>'
                let _m_N=item.nvidia.mem.split(' ')
                if(_m_N.length===1){
                    if(Number(item.nvidia.mem)>0){
                        str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.mem+'</div>'
                    }else {
                        str+='<div class="el" data-tooltip="All GPUs">'+item.nvidia.mem+'</div>'
                    }

                }else if(_m_N.length>1){
                    $.each(_m_N,function (i,it) {
                        if((i+1)==_m_N.length){
                            if(Number(it)>0){
                                str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                            }else {
                                str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                            }
                        }else {
                            if(Number(it)>0){
                                str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                            }else {
                                str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                            }

                        }
                    })
                }
          str+='<div class="unit">MHz</div></div></td>'

        }

        if(isAshow&&!isNshow){
         str+='<td class="rmv2 flexType"><div class="row">AMD</div></td>'
         str+='<td class="rmv2 borderTop">' +
             '     <div class="row">' +
             '         <div class="tag">'+_mx('Pow')+'</div>'
            let _A_p=item.amd.powerlimit.split(' ')
            if(_A_p.length===1){
                str+='<div class="el" data-tooltip="All GPUs">'+item.amd.powerlimit+'</div>'
            }else if(_A_p.length>1){
                $.each(_A_p,function (i,it) {
                    if((i+1)==_A_p.length){
                        str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                    }else {
                        str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                    }
                })
            }
             str+='%</div></td>'
             str+='<td class="rmv2 borderTop"><div class="row"><div class="tag">'+_mx('Static')+'</div>'+item.amd.fan+'%</div></td>'
             str+='<td class="rmv2 borderTop">' +
                 '    <div class="row">' +
                 '        <div class="tag">'+_mx('Core')+'</div>'
                let _A_c=item.amd.coreclock.split(' ')

                if(_A_c.length===1){
                    str+='<div class="el" data-tooltip="All GPUs">'+item.amd.coreclock+'</div>'
                }else if(_A_c.length>1){
                    $.each(_A_c,function (i,it) {
                        if((i+1)==_A_c.length){
                            str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                        }else {
                            str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                        }
                    })
                }
                 str+='<div class="unit">MHz</div></div><div class="row"> <div class="tag">'+_mx('Mem')+'</div>'
                let _A_m=item.amd.memoryclock.split(' ')
                if(_A_m.length===1){
                    str+='<div class="el" data-tooltip="All GPUs">'+item.amd.memoryclock+'</div>'
                }else if(_A_m.length>1){
                    $.each(_A_m,function (i,it) {
                        if((i+1)==_A_m.length){
                            str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                        }else {
                            str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                        }
                    })
                }
                 str+='<div class="unit">MHz</div></div></td>'
        }
        str+='<td class="rmv2 flexUsed"><div class="used_none">-</div>' +
            '    </td>' +
            '    <td class="rmv2 flexActions">' +
            '        <div onclick="removeClock(\''+item.video+'\','+item.id+');" data-tooltip="'+_mx('Delete')+'" class="icon bin"></div>' +
            '        <a href="/clocktune/new#s=copy&id='+item.id+'" data-tooltip="'+_mx('Copy')+'" class="icon duplicate"></a>' +
            '        <span data-tooltip="'+_mx('Sync To Site')+'" onclick="SyncShowWin('+item.id+')" class="icon restart"></span>' +
            '        <a href="/clocktune/new#s=edit&id='+item.id+'" data-tooltip="'+_mx('Edit')+'" class="icon edit"></a>' +
            '        <div onclick="exportProfiles('+item.id+');" data-tooltip="'+_mx('Export')+'" class="icon export"></div>' +
            '    </td>' +
            '</tr>'
        if (isAshow&&isNshow){
            str+='<tr class="subrow rmv2 subrow'+item.id+'" data-keywords="'+item.video+','+item.type+','+item.desc+',">' +
                '    <td class="rmv2"></td>' +
                '    <td class="rmv2 borderTop flexType">' +
                '        <div class="row">AMD</div>' +
                '    </td>' +
                '    <td class="rmv2 borderTop">' +
                '        <div class="row">' +
                '            <div class="tag">'+_mx('Pow')+'</div>'
                let _A_p=item.amd.powerlimit.split(' ')
                if(_A_p.length===1){
                    str+='<div class="el" data-tooltip="All GPUs">'+item.amd.powerlimit+'</div>'
                }else if(_A_p.length>1){
                    $.each(_A_p,function (i,it) {
                        if((i+1)==_A_p.length){
                            str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                        }else {
                            str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                        }
                    })
                }
            str+='            %' +
                '        </div>' +
                '    </td>' +
                '    <td class="rmv2 borderTop">' +
                '        <div class="row">' +
                '            <div class="tag">'+_mx('Static')+'</div>' +
                '            '+item.amd.fan+'%' +
                '        </div>' +
                '    </td>' +
                '    <td class="rmv2 borderTop">' +
                '        <div class="row">' +
                '            <div class="tag">'+_mx('Core')+'</div>'
                let _A_c=item.amd.coreclock.split(' ')
                if(_A_c.length===1){
                    str+='<div class="el" data-tooltip="All GPUs">'+item.amd.coreclock+'</div>'
                }else if(_A_c.length>1){
                    $.each(_A_c,function (i,it) {
                        if((i+1)==_A_c.length){
                            str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                        }else {
                            str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                        }
                    })
                }
                str+='<div class="unit">MHz</div>' +
                '        </div>' +
                '        <div class="row">' +
                '            <div class="tag">'+_mx('Mem')+'</div>'
                let _A_m=item.amd.memoryclock.split(' ')
                if(_A_m.length===1){
                    str+='<div class="el" data-tooltip="All GPUs">'+item.amd.memoryclock+'</div>'
                }else if(_A_m.length>1){
                    $.each(_A_m,function (i,it) {
                        if((i+1)==_A_m.length){
                            str+='<div class="el" data-tooltip="GPU #'+i+'+">'+it+'</div>'
                        }else {
                            str+='<div class="el" data-tooltip="GPU #'+i+'">'+it+'</div>'
                        }
                    })
                }
                str+='<div class="unit">MHz</div>' +
                '        </div>' +
                '    </td>' +
                '    <td class="rmv2"></td>' +
                '    <td class="rmv2"></td>' +
                '</tr>'
        }
    })
    $('#myOverClickList').html(str)
}

let siteDataList=[]
let selectSiteId=[]

function getSiteList() {
    $.post('/query?site',function (res) {
        siteDataList=res.SITE
        setSiteListDom(siteDataList)
    })
}
//设置下拉dom
function setSiteListDom(data,ids,se) {
    if(ids==undefined){
        ids=[]
    }else {
        selectSiteId=ids
    }
    if(se==undefined){
        se=''
    }
    let str=''
    let _st=''
    $.each(data,function (i,it) {
        if(se.trim()==''||(it.name.indexOf(se.trim())!=-1)) {
            if(ids.indexOf(it.id)==-1){
                str+='<div class="row" id="chek'+it.id+'" data-id="'+it.id+'" data-name="'+it.name+'">' +
                    '     <div class="checkbox"></div>' +
                    '     <div class="mytext">'+it.name+'</div>' +
                    '</div>'
            }else {
                str+='<div class="row" id="chek'+it.id+'" data-id="'+it.id+'" data-name="'+it.name+'">' +
                    '     <div class="checkbox selected"></div>' +
                    '     <div class="mytext">'+it.name+'</div>' +
                    '</div>'
                _st+='<div onclick="clearTag(this,\'chek'+it.id+'\')" class="myTag" id="my'+it.id+'" data-id="'+it.id+'">'+it.name+'<small class="closx">x</small></div>'
            }
        }
    })
    $('#tagsList').html(_st)
    $('#target_site').html(str)
    $('#my_select_target_menu #target_site .row').on('click',function () {
        if(!$(this).find('.checkbox').hasClass('selected')){
            $(this).find('.checkbox').addClass('selected')
            $('#tagsList').append('<div onclick="clearTag(this,\''+$(this).attr('id')+'\')" class="myTag" id="my'+$(this).attr('data-id')+'" data-id="'+$(this).attr('data-id')+'">'+$(this).attr('data-name')+'<small class="closx">x</small></div>')

        }else {
            $(this).find('.checkbox').removeClass('selected')
            document.getElementById('my'+$(this).attr('data-id')).remove()
        }
    })

}

$('#tagsList').on('click',function () {
    let display =$('#my_select_target_menu').css('display');
    if (display=='none'){
        $('#my_select_target_menu').show()
    }else {
        $('#my_select_target_menu').hide()
    }
})

function clearTag(e,id){
    console.log('mythis',e)
    $('#my_select_target_menu').hide()
    $('#'+id).find('.checkbox').removeClass('selected')
    e.remove()
    e.stopPropagation();
}

$(document).click(function (e) {
    let mx=e.target
    if(!$(mx).is("#my_select_target_menu *")&&!$(mx).is('#my_select_target *')){
        $('#my_select_target_menu').hide()
    }
})

function mySelectAll() {
    let m=[]
    $.each(siteDataList,function (i,it) {
        m.push(it.id)
    })
    setSiteListDom(siteDataList,m)
}

$('.popupbackground').on('click',function () {
    if(this.style.display!='none'){
        keyWinClose()
    }
})
//关闭Key窗口
function  keyWinClose(){
    setSiteListDom(siteDataList)
    $('#tagsList').val('')
    $('.popupbackground').fadeOut()
    $('#keyName').val('')
    $('#keyRemarks').val('')
    selectSiteId=[]
}

function SyncShowWin(id) {
    $('#keyAdd').show()
    $('#keyAdd').attr('my-data-id',id)
    $('.popupbackground').fadeToggle()
}
//同步到网吧
function saveSync(e) {
    if($(e).hasClass('disabled')){
        return false;
    }
    $('#overclock_sync_msg .outlined_button, #overclock_sync_msg .red').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    let listTag=document.getElementsByClassName('myTag')
    let sites=[]
    $.each(listTag,function (i,it) {
        sites.push($(it).attr('data-id'))
    })
    $.post('预留Url',{sites:sites,overclockId:$('#keyAdd').attr('my-data-id')},function (res) {

    })
}

function saveSyncMsg() {
    let listTag=document.getElementsByClassName('myTag')
    if(listTag.length==0){
        $('#myError').show()
        $('#myError').html('Site Not Null')
        return false
    }else {
        $('#myError').hide()
        $('#myError').html('Error')
    }
    $('#overclock_sync_msg').show()
}