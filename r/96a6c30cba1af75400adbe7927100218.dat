var tagStart, tagEnd, tagArea, tagSelected, inputTag;
optionsValues = jQuery.parseJSON(optionsValues);

var clientsListFrame = new PerfectScrollbar('#clientsListFrame', {
	wheelSpeed: 1,
	wheelPropagation: false,
	minScrollbarLength: 20,
	suppressScrollX: true
});

var coinsListFrame = new PerfectScrollbar('#coinsListFrame', {
	wheelSpeed: 1,
	wheelPropagation: false,
	minScrollbarLength: 20,
	suppressScrollX: true
});

clientsListFrame.update();
coinsListFrame.update();

var ps = [];
var f = 0;
$('.config_dropdown .frame').each(function(){
	ps[f] = new PerfectScrollbar($(this)[0], {
		wheelSpeed: 1,
		wheelPropagation: false,
		minScrollbarLength: 20,
		suppressScrollX: true
	});
	f++;
});

var psOptions = new PerfectScrollbar('#options .frame', {
	wheelSpeed: 1,
	wheelPropagation: false,
	minScrollbarLength: 20,
	suppressScrollX: true
}); 

$('.textarea').on("keydown click", function(event){
	
	// Check if area disabled
	if($(this).attr('contenteditable')!='true'){ return false; }
	
	// Self-close tag
	c = event.keyCode || event.which;
	
	if(c == 57 && typeof inputTag !== 'undefined' && inputTag != ''){
		inputTag += ')';
		addTag();
		return false;
	}

	// Move up/down
	if((c == 38 || c == 40 || c == 13) && $("#options .frame").html()!=''){
		
		// If enter
		if(c == 13 && $('#options').find('.selected').length > 0){
			addTag();
			return false;
		}

		// Get tag index
		if($('#options').find('.selected').length > 0){ 
		
			var tagIndex = parseInt($('#options').find('.selected').index()); 
			$('#options').find('.selected').removeClass('selected');
			
			// Up/Down
			if(c == 38){
				if(tagIndex>0){
					$('#options li').eq(tagIndex-1).addClass('selected');
				}else{
					$('#options li').eq($("#options > .frame > li").length-1).addClass('selected');
				}
			}else if(c == 40){
				if(tagIndex < $("#options  > .frame > li").length-1){
					$('#options li').eq(tagIndex+1).addClass('selected');
				}else{
					$('#options li').eq(0).addClass('selected');
				}
			}			
			
		}else{
			$('#options li').eq(0).addClass('selected');
		}
		
		tagSelected = $('#options').find('.selected').attr('data-tag');
		
		return false;
	}
	
	$("#options").removeClass('display');
	$('.add_new_element .message_err').hide();
	$("#options .frame").html("");
		tagStart = '';
		tagEnd = '';
		tagArea = $(this).attr('id');
	var insideTag = false;
		inputTag = '';
	var inputContent = $('#' + tagArea).html();
		inputContent = inputContent.split('');
	var leftPosition, topPosition;

	if(c != 56 && c != 8 && c != 46){

		// Get offset
		var target = document.createTextNode("\u0001");
		document.getSelection().getRangeAt(0).insertNode(target);
		var inputCaretPos = $('#' + tagArea).html().indexOf("\u0001"); target.parentNode.removeChild(target);	
		var inputPosStart = inputCaretPos;	
		var inputPosEnd = 0;

		for(i = inputPosStart-1; i >= 0; i--){
			if(inputContent[i] == ')'){
				break;
			}

			if(inputContent[i] == '('){
				
				// Calculate new left and top px,
				$org = $('#' + tagArea),
				$el = $org.clone();

				var html = '<span id="tempNode">\u0001</span>';
				$el.html($el.html().substr(0, i) + html + $el.html().substr(i));
				
				var x = $org.offset().left,
					y = $org.offset().top,
					width = $org.outerWidth() - 22,
					height = $org.outerHeight() - 22;

				$el.css({ 'position': 'absolute', 'top': y, 'left': x, 'width': width, 'height': height, 'opacity': 0 });
				$org.before($el);

				var $span = $el.find('#tempNode');
				var offset = $span.offset(),
					char_x = offset.left - $(this).scrollLeft(),
					char_y = offset.top - $(this).scrollTop();
				$('span.cursor').css({'left': char_x,'top': char_y});

				var insidePos = $span.position();
				var topPosition = y + insidePos.top;
				var leftPosition = x + insidePos.left;
				
				$el.remove();   	
				inputPosStart = i;
				insideTag = true;

				break;
			}
		}

		if(insideTag){
			insideTag = false;
			
			// Check if inside tag
			for(i = inputPosStart+1; i < inputContent.length; i++){
				if(inputContent[i] == '('){
					insideTag = false;
					break;
				}

				if(inputContent[i] == ')'){					
					inputPosEnd = i+1;
					insideTag = true;
					break;
				}
			}
		}

		if(insideTag){
			inputTag = $('#' + tagArea).html().substring(inputPosStart, inputPosEnd-1);
		}else{
			inputTag = $('#' + tagArea).html().substring(inputPosStart, inputCaretPos);
		}
		
		// Save positions
		tagStart = inputPosStart;
		tagEnd = inputPosEnd;	
	
	}
	
	if(inputTag!='' && tagArea!=''){
		
		inputTag = inputTag.toUpperCase();
		
		if(inputTag.charAt(0) == '(' && inputTag.length > 2){
			var top = topPosition + 5;
			var left = leftPosition;

			$('#options').css({top: top, left: left});

			var optionsClick = 0;

			$.each(options,function(index){
				var selectedClass = '';
				if((options[index].includes("POOL:") && inputTag.includes("POOL:")) || (options[index].includes("WALLET:") && inputTag.includes("WALLET:")) || (options[index].includes("MODE:") && inputTag.includes("MODE:"))){
					
					if(options[index].indexOf(':') > -1){
						var optionName = options[index].split(":")[1].slice(0, -1);
					}else{
						var optionName = options[index];
					}

					if(options[index]==inputTag + ')'){
						selectedClass = ' selected';
					}

					if((options[index].includes("POOL:") && inputTag.includes("POOL:")) || (options[index].includes("WALLET:") && inputTag.includes("WALLET:"))){
						var valStr = optionsValues[options[index]];
						if((options[index].includes("WALLET:") && inputTag.includes("WALLET:"))){
							if(valStr.length>12){
								valStr = valStr.substr(0,8) + '...' + valStr.substr(valStr.length-4,4);
							}
						}
						$("#options .frame").append('<li data-tag="' + options[index] + '" class="config_tag' + selectedClass + '">' + optionName + '<small data-address="' + optionsValues[options[index]] + '">' + valStr + '</small><div class="icon edit addressEditButton"></div></li>');
					}else{
						$("#options .frame").append('<li data-tag="' + options[index] + '" class="config_tag' + selectedClass + '">' + optionName + '</li>');
					}
					
					optionsClick++;

				}
			});
			
			if(optionsClick!=0){
				
				resetAddressEditButton();
				
				$("#options .search_box input").val('');
				$("#options .frame li").show();
				$("#options").addClass('display');
				$("#options .add_new_element").hide();

				if(inputTag.includes("POOL:")){
					$("#addNewPool").show();
				}
				
				if(inputTag.includes("WALLET:")){
					$("#addNewWallet").show();
				}
				
				$("#options .search_box input").focus();
				psOptions.update();

			}

		}		
	}
});

// Add tag
function addTag(){

	$("#options").removeClass('display');
	$('.popupbackground_empty').hide();
	$("#options .frame").html("");

	var str = $('#' + tagArea).html();
	var preStr = str.substring(0, tagStart);
	
	// If partial tag
	if(tagEnd==0){ tagEnd = tagStart + inputTag.length; }
	var postStr = str.substring(tagEnd, str.length);
	
	// Check if valid tag
	if((typeof tagSelected === 'undefined' || tagSelected.trim() == '') && typeof inputTag !== 'undefined' && inputTag.trim() != ''){
		// Find tag in array from inputTag
		$.each(options,function(index){
			if(options[index] == inputTag.toUpperCase()){
				tagSelected = inputTag.toUpperCase();
			}
		});
	}

	// Replace valid tag
	if(typeof tagSelected !== 'undefined' && tagSelected.trim() != ''){
		
		// Check if between tags
		if(str.substr(tagEnd, 7)=='</mark>'){
			var result = preStr + tagSelected + '</mark>' + str.substring(tagEnd+7, str.length); 
		}else if(str.substr(tagEnd, 8)==')</mark>'){
			var result = preStr + tagSelected + '</mark>' + str.substring(tagEnd+8, str.length); 
		}else{
			if(tagClick){
				var result = (preStr + '<mark class="tag">' + tagSelected + '</mark>' + str.substring(tagEnd+1, str.length)).replace('<mark class="tag"><mark class="tag">','<mark class="tag">').replace('<mark class="tag undefined"><mark class="tag">','<mark class="tag">').replace('<mark class="tag"><mark class="tag undefined">','<mark class="tag undefined">').replace('</mark></mark>','</mark>');  
			}else{
				var result = (preStr + '<mark class="tag">' + tagSelected + '</mark>' + str.substring(tagEnd-1, str.length)).replace('<mark class="tag"><mark class="tag">','<mark class="tag">').replace('<mark class="tag undefined"><mark class="tag">','<mark class="tag">').replace('<mark class="tag"><mark class="tag undefined">','<mark class="tag undefined">').replace('</mark></mark>','</mark>');  
			}
		}
		
		// Reset
		tagSelected = '';
		inputTag = '';
		tagStart = 0;
		tagEnd = 0;
		tagClick = false;
		
		$('#' + tagArea).html(result);
		checkForUndefined();
	}
}



// Click config tag
var tagClick = false;
$(document.body).on('click', '.config_tag' ,function(){
	tagSelected = $(this).attr('data-tag');
	tagClick = true;
	addTag();
});

// Reset config from system
function resetConf(clientId){
	$.post('/config', { reset: clientId }, function(response) {
		if(response!='0'){
			$('#' + clientId).html(response.replace( /\n/g, '<br \\>' ));
			checkForUndefined();
		}
	});
}

$('#clients').change(function(){
	var clientId = $(this).val();
	$('.textarea').attr('id',clientId);
	$('.reset_button').attr('onclick',"resetConf('" + clientId + "')");
	resetConf(clientId);
});

// Save changes
var tempLock=true
$('.buttons > .green').click(function(){
	// Start loading animation

	

	// updateClient[defaultClient] = $clData.find('.textarea').html().replace('&#8291;','').replace('\u200b','').replace('  ',' ');
	
	// Check for simple config
	// if(typeof $clData.find('#automaticConfig') != 'undefined' && $clData.find('#automaticConfig').is(":visible")){
	// 	var aCoin = $clData.find('.aCoin').find('.row').attr('data-coin');
	// 	var aAlgo = $clData.find('.aCoin').find('.row').attr('data-algo');
	// 	var aPool = $clData.find('.aPool').find('.row').attr('value');
	// 	var aWallet = $clData.find('.aWallet').find('.row').attr('value');
	// 	var aPass = $clData.find('.aPass').val(); if(aPass==''){ aPass = 'x'; }
	// 	updateClient[defaultClient] = {"coin":aCoin,"algo":aAlgo,"pool":aPool,"wallet":aWallet,"pass":aPass};
	// }
	// Apply changes
	var nonce = $('#nonce').val();

	let name=$('#profileName').val()
	let coinName=$('#automaticConfig .aCoin .config_selected_option .row').attr('data-algo')
	let coinId=$('#automaticConfig .aCoin .config_selected_option .row').attr('value')
	// let overClockingId=$('#default_oc_profile').val()
	// let overClockingName=$("#default_oc_profile").find("option:selected").text()
	let poolId=	$('#automaticConfig .aPool .config_selected_option .row').attr('data-my-id')
	let poolName=$('#automaticConfig .aPool .config_selected_option .row').attr('my-data-name')
	let walletId=$('#automaticConfig .aWallet .config_selected_option .row').attr('data-my-id')
	let walletName=$('#automaticConfig .aWallet .config_selected_option .row').attr('my-data-name')
	let password = $('.aPass').val()
	if(name.replace(/(^\s*)|(\s*$)/g, "").length===0){
		$('#errInfo').html('Please name your template.')
		$('#errInfo').show()
		return false
	}else {
		$('#errInfo').html('')
		$('#errInfo').hide()
	}
	// if (coinName.replace(/(^\s*)|(\s*$)/g, "").length===0){
	// 	$('#errInfo').html('Please name your template.')
	// 	$('#errInfo').show()
	// }
	// if (poolName.replace(/(^\s*)|(\s*$)/g, "").length===0){
	// 	$('#errInfo').html('Please name your template.')
	// 	$('#errInfo').show()
	// }
	// if (walletName.replace(/(^\s*)|(\s*$)/g, "").length===0){
	// 	$('#errInfo').html('Please name your template.')
	// 	$('#errInfo').show()
	// }

	let obj={}
	var $this = $(this);
	if($(this).hasClass('disabled')){
		return false;
	}
	$(this).addClass('disabled');
	$('.checkmark').hide();
	$('.circle-loader').removeClass('load-complete');
	$('.circle-loader, .message_err, .message_suc').hide();
	$('.circle-loader').show();
	if(getQueryVariable('s')=='add'){
		 obj={
			a:'set',
			name:name,
			coinName:coinName,
			coinId:coinId,
			// overClockingId:overClockingId,
			// overClockingName:overClockingName,
			poolId:poolId,
			poolName:poolName,
			walletId:walletId,
			walletName:walletName,
			password:password
		}
	}
	else if(getQueryVariable('s')=='edit'){
		obj={
			a:'set',
			id:getQueryVariable('id'),
			name:name,
			coinName:coinName,
			coinId:coinId,
			// overClockingId:overClockingId,
			// overClockingName:overClockingName,
			poolId:poolId,
			poolName:poolName,
			walletId:walletId,
			walletName:walletName,
			password:password
		}
	}else {
		obj={
			a:'set',
			name:name,
			coinName:coinName,
			coinId:coinId,
			// overClockingId:overClockingId,
			// overClockingName:overClockingName,
			poolId:poolId,
			poolName:poolName,
			walletId:walletId,
			walletName:walletName,
			password:password
		}
	}

	addTemp(obj)
	// $.post(window.location.href, { name: profileName, client: defaultClient, clocktune: defaultOcProfile, data: updateClient, nonce: nonce }, function(response) {
	// 	if(response=='1'){
	// 		$('.circle-loader').addClass('load-complete');
	// 		$('.notification_row').addClass('finished');
	// 		$('.checkmark').show();
	// 		$('.button').removeClass('disabled');
	// 		$('.message_suc').show();
	// 	}else{
	// 		if(response>0){ window.location.href = '/config-templates/' + response; }else{
	// 			$('.circle-loader').hide();
	// 			$('.notification_row').addClass('finished');
	// 			$this.removeClass('disabled');
	// 			$('.message_err').html(response).show();
	// 		}
	// 	}
	// });
});

// Auto generate config
function getConfig(client){

	var $this = $('#client_' + client);
	var aCoin = $this.find('.aCoin').find('[data-coin]').data('coin');
	var aAlgo = $this.find('.aCoin').find('[data-algo]').data('algo');
	var aPool = $this.find('.aPool .row').attr('value');
	var aWallet = $this.find('.aWallet .row').attr('value');
	var aPass = $this.find('.aPass').val();
	var tempClient = {};
	    tempClient[client] = {"coin":aCoin,"algo":aAlgo,"pool":aPool,"wallet":aWallet,"pass":aPass};

	// Apply changes
	var nonce = $('#nonce').val();
	$.post(window.location.href, { generateConfig:tempClient, nonce:nonce }, function(response) {
		if(response!=''){
			$this.closest("[class*=client_box]").find('.automatic_config').html(response).show();
			$this.closest("[class*=client_box]").find('.row_config_generated').show();
		}else{
			$this.closest("[class*=client_box]").find('.row_config_generated').hide();
		}
	});
	
}

// $('.aPass').keyup(function(){
// 	// getConfig($(this).closest('.client_box').data('client'));
// });

$('.row_config_generated .edit').click(function(){
	$(this).closest("[class*=client_box]").find(".textarea").html($(this).closest("[class*=client_box]").find('.automatic_config').html()); 
	$(this).closest("[class*=client_box]").find("[data-mode='automaticConfig']").removeClass('selected'); 
	$(this).closest("[class*=client_box]").find("[data-mode='customConfig']").addClass('selected'); 
	$(this).closest("[class*=client_box]").find('#automaticConfig').hide();
	$(this).closest("[class*=client_box]").find('#customConfig').show();
	checkForUndefined();
});
	
// Set undefined tags (red mark)
function checkForUndefined(){
	$('.textarea').each(function(){
		
		// Check for pool tags
		if($(this).text().indexOf('(POOL:') !== -1){
			var regExp = /\((POOL:[^\s)]+)\)/g;
			var textField = $(this);
			$(this).text().match(regExp).forEach(function(element,index){
				if($.inArray(element, options) === -1){
					textField.html(function(index,html){
						return html.replace('<mark class="tag">' + element + '</mark>','<mark class="tag undefined">' + element + '</mark>');
					});
				}else{
					textField.html(function(index,html){
						return html.replace('<mark class="tag undefined">' + element + '</mark>','<mark class="tag">' + element + '</mark>');
					});
				}
			});
		}
		
		// Check for wallet tags
		if($(this).text().indexOf('(WALLET:') !== -1){
			var regExp = /\((WALLET:[^\s)]+)\)/g;
			var textField = $(this);
			$(this).text().match(regExp).forEach(function(element,index){
				if($.inArray(element, options) === -1){
					textField.html(function(index,html){
						return html.replace('<mark class="tag">' + element + '</mark>','<mark class="tag undefined">' + element + '</mark>');
					});
				}else{
					textField.html(function(index,html){
						return html.replace('<mark class="tag undefined">' + element + '</mark>','<mark class="tag">' + element + '</mark>');
					});
				}	
			});
		}

		// Format
		if($(this).html().indexOf('<mark class="tag') !== -1){
			var regExp = /\<mark(.*?)<\/mark>+/g;
			var textField = $(this);
			$(this).html().match(regExp).forEach(function(element,index){
				
				if(element.indexOf(">(") < 0 || element.indexOf(")<") < 0){
					
					textField.html(function(index,html){
						return html.replace(element,$(element).text());
					});
					
				}else if(element.indexOf("(POOL:") < 0 && element.indexOf("(WALLET:") < 0 && element.indexOf("(AUTO)") < 0 && element.indexOf("(WORKER)") < 0 && element.indexOf("(MODE:") < 0 && element.indexOf("(EMAIL)") < 0){
					
					textField.html(function(index,html){
						return html.replace(element,$(element).text());
					});
					
				}else if(element.indexOf(">(") > -1 && element.indexOf(")<") > -1){
					
					var elementTag = $(element).text();
						elementTag = elementTag.replace(/[^a-z0-9:\-\_]/gi, '').toUpperCase();

					if(element.indexOf("undefined") > -1){
						elementTag = '<mark class="tag undefined">(' + elementTag + ')</mark>';
					}else{
						elementTag = '<mark class="tag">(' + elementTag + ')</mark>';
					}

					textField.html(function(index,html){
						return html.replace(element,elementTag);
					});
					
				}else{
					
					textField.html(function(index,html){
						var elementTag = $(element).text();
						if(element.indexOf("undefined") > -1){
							elementTag = '<mark class="tag undefined">' + elementTag + '</mark>';
						}else{
							elementTag = '<mark class="tag">' + elementTag + '</mark>';
						}
						return html.replace(element,elementTag);
					});
					
				}
				
			});
		}
		
	});
}
checkForUndefined();

var cell = document.querySelectorAll('div[contenteditable]');
for(var i=0;i<cell.length;i++){
    cell[i].addEventListener("paste", function(e) {
		e.preventDefault();
		var text = e.clipboardData.getData("text/plain");

			
		// Check for pool tags
		if(text.indexOf('(POOL:') !== -1){
			var regExp = /\((POOL:[^\s)]+)\)/g;
			text.match(regExp).forEach(function(element,index){
				if($.inArray(element, options) === -1){
					text = text.replace(element,'<mark class="tag undefined">' + element + '</mark>');
				}else{
					text = text.replace(element,'<mark class="tag">' + element + '</mark>');
				}
			});
		}

		// Check for wallet tags
		if(text.indexOf('(WALLET:') !== -1){
			var regExp = /\((WALLET:[^\s)]+)\)/g;
			text.match(regExp).forEach(function(element,index){
				if($.inArray(element, options) === -1){
					text = text.replace(element,'<mark class="tag undefined">' + element + '</mark>');
				}else{
					text = text.replace(element,'<mark class="tag">' + element + '</mark>');
				}	
			});
		}
	
		// Check for others
		if(text.indexOf('(WORKER)') !== -1){
			var regExp = /\((WORKER)\)/g;
			text.match(regExp).forEach(function(element,index){
				text = text.replace(element,'<mark class="tag">' + element + '</mark>');	
			});
		}
		if(text.indexOf('(AUTO)') !== -1){
			var regExp = /\((AUTO)\)/g;
			text.match(regExp).forEach(function(element,index){
				text = text.replace(element,'<mark class="tag">' + element + '</mark>');	
			});
		}
		if(text.indexOf('(EMAIL)') !== -1){
			var regExp = /\((EMAIL)\)/g;
			text.match(regExp).forEach(function(element,index){
				text = text.replace(element,'<mark class="tag">' + element + '</mark>');	
			});
		}		
		if(text.indexOf('(MODE:DUAL)') !== -1){
			var regExp = /\((MODE:DUAL)\)/g;
			text.match(regExp).forEach(function(element,index){
				text = text.replace(element,'<mark class="tag">' + element + '</mark>');	
			});
		}		
		if(text.indexOf('(MODE:SINGLE)') !== -1){
			var regExp = /\((MODE:SINGLE)\)/g;
			text.match(regExp).forEach(function(element,index){
				text = text.replace(element,'<mark class="tag">' + element + '</mark>');	
			});
		}
		
		document.execCommand("insertHTML", false, text);
		
  });
}

var firstOpenClients = true;
// Open clients dropdown
$('#defaultConfigSelect .selected_option').on('click', function(){
	$('.icons_dropdown > .icon img').attr('src','');
	if(firstOpenClients){
		$(".icons_dropdown .icon").each(function(){
			var $img = $(this).find('img');
			var icon = $img.data('icon');
			$img.attr('src',$img.attr('src').replace('no.png',icon+'.png'));
		});
		firstOpenClients = false;
	}
	
	var shown = 0;
	if($(this).parent().children('.select_dropdown').hasClass('display')){
		shown = 1;
	}
	$('.select_dropdown').removeClass('display');
	if(shown==0){
		$(this).parent().children('.select_dropdown').addClass('display');
		$('#filterCoin').focus();
	}
	clientsListFrame.update();
});

// Close clients dropdown
$(document).mousedown(function(e){
	var elMain = $(e.target).closest('.select_dropdown');
	var elParent = $(e.target).closest('#defaultConfigSelect .selected_option');
    if (elMain.length==0 && elParent.length==0){
        $(".select_dropdown").removeClass('display');
    }

	var elOptions = $(e.target).closest('#options');
    if (elOptions.length==0 && !$('.tag').is(e.target)){
        $("#options").removeClass('display');
    }
});

// Open coins dropdown on clients
$('.coin_element .selected_coin').on('click', function(){
	var shown = 0;
	if($(this).parent().children('.icons_dropdown').hasClass('display')){
		shown = 1;
	}
	$('.icons_dropdown').removeClass('display');
	if(shown==0){
		$(this).parent().children('.icons_dropdown').addClass('display');
	}
	coinsListFrame.update();
});

// Close coins dropdown on clients
$(document).mousedown(function(e){
	var elMain = $(e.target).closest('.icons_dropdown');
	var elParent = $(e.target).closest('.coin_element .selected_coin');
    if (elMain.length==0 && elParent.length==0){
        $(".icons_dropdown").removeClass('display');
    }
});

// Focus coin filtering
$('#filterCoin').on('focus',function(){
	$(this).parent().parent().addClass('focus');
});
$(document).mousedown(function(e){
	var elMain = $(e.target).closest('.coin_element');
    if (elMain.length==0){
        $(".coin_element").removeClass('focus');
    }
});

$(document).ready(function(){
	$(".config_dropdown .image").each(function(){
		var $img = $(this).find('img');
		var icon = $img.data('icon');
		$img.attr('src',$img.attr('src').replace('no.png',icon+'.png'));
	});
});

// Open simple editor dropdowns
$('.config_selected_option').on('click', function(){
	var shown = 0;
	if($(this).parent().children('.config_dropdown').hasClass('display')){
		shown = 1;
	}
	$('.config_dropdown').removeClass('display');
	if(shown==0){
		
		$(this).parent().children('.config_dropdown').children('.search_box').children('input').val('');
		$(this).parent().children('.config_dropdown').children('.frame').children('.row').show();
		$(this).parent().children('.config_dropdown').children('.frame').children('.subgroup').show();

		$(this).parent().children('.config_dropdown').addClass('display');
		$(this).parent().children('.config_dropdown').children('.search_box').children('input').focus();
	}
	for(var i=0; i<f; i++){
		ps[i].update();
	}
	resetAddressEditButton();
});

// Close simple editor dropdowns
$(document).mousedown(function(e){
	var elMain = $(e.target).closest('.config_dropdown');
	var elParent = $(e.target).closest('.config_selected_option');
    if (elMain.length==0 && elParent.length==0){
        $(".config_dropdown").removeClass('display');
    }
});

var filterCoin = ''; var filterAlgo = '';
// On change of mining client, show correct boxes
$('#filterType,#filterSystem').on('change', function(){
	var filterType = $('#filterType').val();
	var filterSystem = $('#filterSystem').val();
	var filterClient = $('#filterClient').val().toUpperCase();
	$("#clientsListFrame > .tr[data-client]").hide();
	$("#clientsListFrame > .tr").each(function(){
		if(typeof $(this).data('type') != 'undefined' && ($(this).data('type').indexOf(filterType) >=0 || ($(this).data('type')=='' && filterType!='asic')) && $(this).data('system').indexOf(filterSystem) >= 0 && $(this).data('client').indexOf(filterClient) >= 0 && ($(this).data('algo').indexOf(';' + filterAlgo + ';') >= 0 || $(this).data('algo')==';;;')){
			$(this).show();
			clientsListFrame.update();
		}
	});
});

var filterPool = '';
$('#coinsListFrame .row').click(function(){
	filterCoin = $(this).find('.ticker').html(); $('#filterCoin').val(filterCoin);
	filterAlgo = $(this).find('.algo').html();
	filterPool = $(this).find('.ticker[data-pool]').data('pool');
	var filterIcon = $(this).find('.icon').html(); $('.selected_coin .icon').html(filterIcon).removeClass('noimage');
	var filterType = $('#filterType').val();
	var filterSystem = $('#filterSystem').val();
	var filterClient = $('#filterClient').val().toUpperCase();
	$('.icons_dropdown').removeClass('display');
	$("#clientsListFrame > .tr[data-client]").hide();
	$("#clientsListFrame > .tr").each(function(){
		if(typeof $(this).data('type') != 'undefined' && ($(this).data('type').indexOf(filterType) >=0 || ($(this).data('type')=='' && filterType!='asic')) && $(this).data('system').indexOf(filterSystem) >= 0 && $(this).data('client').indexOf(filterClient) >= 0 && ($(this).data('algo').indexOf(';' + filterAlgo + ';') >= 0 || $(this).data('algo')==';;;')){
			$(this).show();
			clientsListFrame.update();
		}
	});
});

$('#filterCoin').keyup(function(e){
	var keyword = $(this).val().toLowerCase();
	$('.icons_dropdown').addClass('display');
	$("#coinsListFrame > .row").hide();
	$("#coinsListFrame > .row").each(function(){
		if(typeof $(this).data('filter') != 'undefined' && $(this).data('filter').toLowerCase().indexOf(keyword) >=0){
			$(this).show();
			coinsListFrame.update();
		}
	});

	$('.selected_coin .icon').addClass('noimage').html('');
	filterCoin = keyword;
	filterAlgo = '';
	filterPool = '';
	
	if(keyword=='' || $('#coinsListFrame > .row:visible').length > 1){
		// No match
		$("#clientsListFrame > .tr").show();
		clientsListFrame.update();
	}else{
		// Exact match
		if(e.keyCode!=46 && e.keyCode != 8 && $('#coinsListFrame > .row:visible').length==1){
			$('#coinsListFrame > .row:visible').trigger("click");
		}
	}
});

$('#filterClient').keyup(function(){
	var filterType = $('#filterType').val();
	var filterSystem = $('#filterSystem').val();
	var filterClient = $('#filterClient').val().toUpperCase();
	$("#clientsListFrame > .tr[data-client]").hide();
	$("#clientsListFrame > .tr").each(function(){
		if(typeof $(this).data('type') != 'undefined' && ($(this).data('type').indexOf(filterType) >=0 || ($(this).data('type')=='' && filterType!='asic')) && $(this).data('system').indexOf(filterSystem) >= 0 && $(this).data('client').indexOf(filterClient) >= 0 && ($(this).data('algo').indexOf(';' + filterAlgo + ';') >= 0 || $(this).data('algo')==';;;')){
			$(this).show();
			clientsListFrame.update();
		}
	});
});

$('#clientsListFrame > [data-client]').click(function(){
	selectedMiningClient = $(this).data('client');
	$('#defaultConfig').html(selectedMiningClient);
	$('#defaultConfigSelect .select_dropdown').removeClass('display'); 
	$('#defaultConfigSelect .selected_option b').html(selectedMiningClient);
	$('#defaultConfigSelect .selected_option .tags').html('');
	$(this).find('.tag').each(function() {
		if($('#defaultConfigSelect .selected_option .tags').html().indexOf($(this).html()) < 0){
			$(this).clone().appendTo('#defaultConfigSelect .selected_option .tags');
		}
	});
	
	$('.client_box').hide();
	$('.client_box').addClass('disabled');
	$('.client_box').children('.checkbox').removeClass('selected');
	$('.client_box').children('.checkbox').attr('data-tooltip',_('Excluded from update'));
	$('.client_box').children('.editbox').children('.textarea').attr('contenteditable','false');
	$('#client_' + selectedMiningClient).show();
	$('#client_' + selectedMiningClient).removeClass('disabled');
	$('#client_' + selectedMiningClient).children('.checkbox').addClass('selected');
	$('#client_' + selectedMiningClient).children('.checkbox').attr('data-tooltip',_('Included in update'));
	$('#' + selectedMiningClient).attr('contenteditable','true');
	
	// Check if simple config and attach the coin
	if(filterAlgo!=''){
		var $configField = $('.box').find('.client_box[data-client="' + selectedMiningClient + '"]');
		if($configField.find('[data-mode="automaticConfig"]').hasClass('selected')){
			
			// Pass
			var fCoin = filterCoin.replace(/[^a-z0-9]/gi, ''); var fAlgo = ''; var fPool = '';
			if(filterCoin.indexOf(' - ') >= 0 && filterCoin.indexOf('NiceHash') < 0){
				$configField.find('.aPass').val('c=BTC');
				fCoin = 'BTC';
				fAlgo = filterCoin.split(' - ');
				fAlgo = fAlgo[0].replace(/[^a-z0-9]/gi, '').toUpperCase();
				fPool = filterPool;
				$configField.find('.aPool #poolTag').val(fAlgo);
			}else{
				$configField.find('.aPass').val('x');
				$configField.find('.aPool #poolTag').val(filterCoin);
				if(filterCoin.indexOf('NiceHash') >= 0){
					fCoin = 'BTC';
					$configField.find('.aPool #poolTag').val(filterCoin.split(' - ')[0].replace(/[^a-z0-9]/gi, '').toUpperCase());
				}
			}
			
			// Coin
			$configField.find('.aCoin .config_dropdown').find('[data-coin]').each(function(){
				if(filterCoin == $(this).data('coin') && filterAlgo == $(this).data('algo')){
					var $selectedCoin = $configField.find('.aCoin .config_selected_option .row');
					$selectedCoin.replaceWith('<div class="row" value="' + $(this).attr('value') + '" data-algo="' + $(this).data('algo') + '" data-coin="' + $(this).data('coin') + '"><div class="image">' + $(this).find('.image').html() + '</div><div class="text"><b>' + $(this).find('b').html() + '</b><small>' + $(this).find('small').html() + '</small></div></div>');

					return false;
				}
			});
			
			// Pool
			$configField.find('.aPool .config_dropdown').find('.row').each(function(){
				if((fAlgo!='' && fAlgo == $(this).find('b').html() && ($(this).find('small').html().toLowerCase().indexOf(fPool.toLowerCase())>=0)) || (fAlgo=='' && filterCoin == $(this).find('b').html())){
					var $selectedPool = $configField.find('.aPool .config_selected_option .row');
					if($(this).find('small').html().indexOf('//')>=0){
						var tempPool = $(this).find('small').html().split('//')[1];
					}else{ var tempPool = $(this).find('small').html(); }
					tempPool = truncate(tempPool, 30);
					$selectedPool.replaceWith('<div class="row" value="(POOL:' + $(this).find('b').html() + ')"><div class="text"><b>' + $(this).find('b').html() + '</b><small>' + tempPool + '</small></div></div>');
					$configField.find('.aPool #poolTag').val('');
					
					return false;
				}
			});	

			// Wallet
			$configField.find('.aWallet #walletTag').val(fCoin);
			$configField.find('.aWallet .config_dropdown').find('.row').each(function(){
				if(fCoin == $(this).find('b').html()){
					var $selectedWallet = $configField.find('.aWallet .config_selected_option .row');
					$selectedWallet.replaceWith('<div class="row" value="(WALLET:' + $(this).find('b').html() + ')"><div class="text"><b>' + $(this).find('b').html() + '</b><small>' + $(this).find('small').html() + '</small></div></div>');
					$configField.find('.aWallet #walletTag').val('');

					return false;
				}
			});
	
		}
	}
	
	getConfig(selectedMiningClient);
});

function resetAddressEditButton(){
	addressEditButton = 0;
	$('.input_area_with_tag').children('input').val('');
	$('.input_area').children('input').val('');
}

// Select coin/algo


// Select pool


// Select wallet


// Change modes
$('.edit_box .tabs .tab').click(function(){
	var mode = $(this).data('mode');
	if(mode=='automaticConfig'){
		$(this).closest('.row').find("[data-mode='customConfig']").removeClass('selected'); 
		$(this).addClass('selected');
		$(this).closest('.row').find('#customConfig').hide();
		$(this).closest('.row').find('#automaticConfig').show();
	}else{
		$(this).closest('.row').find("[data-mode='automaticConfig']").removeClass('selected'); 
		$(this).addClass('selected');
		$(this).closest('.row').find('#automaticConfig').hide();
		$(this).closest('.row').find('#customConfig').show();
	}
	
	var d = new Date();
	d.setTime(d.getTime() + 24*60*60*1000*365);
	var expires = "expires="+ d.toLocaleTimeString();
	var client = $(this).parents('.client_box').data('client').toLowerCase();
	document.cookie = "cmode-" + client + "=" + mode + ";" + expires + ";path=/";
});

// Search/filter on advance config - Options
$(document.body).on('keyup', '.optionsFilterField' ,function(){
	var filterValue = $(this).val().toLowerCase();
	$(this).parent().parent().children('.frame').children('.partner').remove();
	
	if(filterValue==''){
		$(this).parent().parent().children('.frame').children('.config_tag').show();
	}else{
		
		// Search by db
		if($(this).parents('#options').find('#addNewPool').is(":visible")){
			var poolListHtml = $(this).parent().parent().children('.frame');
			$.post('/config', { searchPools: filterValue }, function(response) {
				if(response!='0'){
					altSearch = $.parseJSON(response);
					var altResults = altSearch.length; var altLoop = 0; var altHtml = '';
					$.each(altSearch, function(index, value) {
						++altLoop;
						altHtml += '<li onclick="newPoolAdvanced(\'' + value.coin + '\',\'' + value.address + '\',this);" class="partner config_tag">' + value.coin + '<small>' + value.address + '</small></li>';
						
						if(altResults==altLoop){
							poolListHtml.append(altHtml);
						}
					});	
					
					psOptions.update();
				}
			});	
		}
		
		$(this).parent().parent().children('.frame').children('.config_tag').each(function(){
			var rowTag = $(this).attr('data-tag').toLowerCase();
			var rowValue = $(this).children('small').html().toLowerCase();
			if(rowTag.indexOf(filterValue)==-1 && rowValue.indexOf(filterValue)==-1){
				$(this).hide();
			}else{
				$(this).show();
			}
		});
	}
	psOptions.update();
});

// Search/filter on simple config - Coins
$(document.body).on('keyup', '.coinNameFilterField' ,function(){
	var filterValue = $(this).val().toLowerCase();
	if(filterValue==''){
		$(this).parent().parent().children('.frame').children('.subgroup').show();
		$(this).parent().parent().children('.frame').children('.row').show();
	}else{
		$(this).parent().parent().children('.frame').children('.subgroup').hide();
		$(this).parent().parent().children('.frame').children('.row').each(function(){
			var rowAlgo = $(this).attr('data-algo').toLowerCase();
			var rowCoin = $(this).attr('data-coin').toLowerCase();
			if(rowAlgo.indexOf(filterValue)==-1 && rowCoin.indexOf(filterValue)==-1){
				$(this).hide();
			}else{
				$(this).show();
			}
		});
	}
	for(var i=0; i<f; i++){
		ps[i].update();
	}
});

// Search/filter on simple config - Pools
$(document.body).on('keyup', '.poolNameFilterField' ,function(){
	var filterValue = $(this).val().toLowerCase();
	$(this).parent().parent().children('.frame').children('.partner').remove();
	if(filterValue==''){
		$(this).parent().parent().children('.frame').children('.row').show();
	}else{
		
		// Search by db
		var poolListHtml = $(this).parent().parent().children('.frame');
		var aCoin = $(this).parents('#automaticConfig').find('.aCoin').find('.row').attr('data-coin');
		var aAlgo = $(this).parents('#automaticConfig').find('.aCoin').find('.row').attr('data-algo');
		
		// $.post('/config', { searchPools: filterValue, searchCoins: aCoin, searchAlgos: aAlgo }, function(response) {
		// 	if(response!='0'){
		// 		altSearch = $.parseJSON(response);
		// 		var altResults = altSearch.length; var altLoop = 0; var altHtml = '';
		// 		$.each(altSearch, function(index, value) {
		// 			++altLoop;
		// 			altHtml += '<div class="partner row" onclick="newPool(\'' + value.coin + '\',\'' + value.address + '\',this);" value="" style=""><div class="text"><b data-tag="' + value.coin + '">' + value.coin + '</b><small data-address="' + value.address + '">' + value.address + '</small></div></div>';
		//
		// 			if(altResults==altLoop){
		// 				poolListHtml.append(altHtml);
		// 			}
		// 		});
		//
		// 		for(var i=0; i<f; i++){
		// 			ps[i].update();
		// 		}
		//
		// 	}
		// });
		
		$(this).parent().parent().children('.frame').children('.row').each(function(){
			var rowTag = $(this).children('.text').children('b').attr('data-tag').toLowerCase();
			var rowAddress = $(this).children('.text').children('small').attr('data-address').toLowerCase();
			if(rowTag.indexOf(filterValue)==-1 && rowAddress.indexOf(filterValue)==-1){
				$(this).hide();
			}else{
				$(this).show();
			}
		});
	}
	for(var i=0; i<f; i++){
		ps[i].update();
	}
});

function newPool(tag,address,listArea){
	if(tag!='' && address!=''){
		$(listArea).parents('.config_dropdown').find('#poolTag').val(tag);
		$(listArea).parents('.config_dropdown').find('#poolAddress').val(address);
	}	
}
function newPoolAdvanced(tag,address,listArea){
	if(tag!='' && address!=''){
		$(listArea).parents('#options').find('#poolTag').val(tag);
		$(listArea).parents('#options').find('#poolAddress').val(address);
	}	
}

// Search/filter on simple config - Wallets
$(document.body).on('keyup', '.walletNameFilterField' ,function(){
	var filterValue = $(this).val().toLowerCase();
	if(filterValue==''){
		$(this).parent().parent().children('.frame').children('.row').show();
	}else{
		$(this).parent().parent().children('.frame').children('.row').each(function(){
			var rowTag = $(this).children('.text').children('b').attr('data-tag').toLowerCase();
			if(rowTag.indexOf(filterValue)==-1){
				$(this).hide();
			}else{
				$(this).show();
			}
		});
	}
	for(var i=0; i<f; i++){
		ps[i].update();
	}
});

$('.aPool').change(function(){
	if($(this).val()=='tags'){
		window.location.href = '/address-editor';
	}
});
$('.aWallet').change(function(){
	if($(this).val()=='tags'){
		window.location.href = '/address-editor#wallets';
	}
});

// Create tag
// var tagLock = false;
// function createTag(newTag,position){
// 	console.log('方法进入')
// 	if(tagLock==false){
//
// 		// var nonce = $('#nonce').val();
//
// 		if(position==''){
// 			if(newTag=='POOL'){
// 				var addNew = 'Pool';
// 			}else{
// 				var addNew = 'Wallet';
// 			}
// 			var value = $('#addNew' + addNew + ' #' + newTag.toLowerCase() + 'Address').val();
// 			var tag = newTag + ':' + $('#addNew' + addNew + ' #' + newTag.toLowerCase() + 'Tag').val().toUpperCase();
//
// 			if(tag=='' || tag=='POOL:' || tag=='WALLET:') {
// 				$('.add_new_element .message_err').html(_('Enter tag name')).show();
// 				return false;
// 			} // Do nothing with empty value
// 			if(value=='' || tag=='POOL:' || tag=='WALLET:'){
// 				$('.add_new_element .message_err').html(_('Enter address')).show();
// 				return false;
// 			} // Do nothing with empty value
// 			tagLock = true;
// 			console.log('value',value)
// 			console.log('tag',tag)
// 			$('.add_new_element .message_err').hide();
// 			$('.add_new_element .message_err').html(_('Tag already exists'));
//
// 			if(typeof optionsValues['(' + tag + ')'] != 'undefined' && addressEditButton==1){
//
//
// 				$.post('/address-editor', { update: '1', tag: tag, tagNew: tag, address: value, nonce: nonce }, function(response) {
// 					if(response=='1'){
// 						$('#options .frame').append('<li data-tag="(' + tag + ')" class="config_tag">' + $('#' + newTag.toLowerCase() + 'Tag').val().toUpperCase() + '<small>' + value + '</small></li>');
// 						optionsValues['(' + tag + ')'] = value;
// 						options.push('(' + tag + ')');
// 						var tagClick = false;
// 						tagSelected = '(' + tag + ')';
// 						tagClick = true;
// 						addTag();
// 						$('#' + newTag.toLowerCase() + 'Address').val('');
// 						$('#' + newTag.toLowerCase() + 'Tag').val('');
// 					}else{
// 						$('.add_new_element .message_err').show();
// 					}
// 					tagLock = false;
// 				});
//
// 			}else{
//
// 				$.post('/address-editor', { add: '1', tag: tag, address: value, nonce: nonce }, function(response) {
// 					if(response=='1'){
// 						$('#options .frame').append('<li data-tag="(' + tag + ')" class="config_tag">' + $('#' + newTag.toLowerCase() + 'Tag').val().toUpperCase() + '<small>' + value + '</small></li>');
// 						optionsValues['(' + tag + ')'] = value;
// 						options.push('(' + tag + ')');
// 						var tagClick = false;
// 						tagSelected = '(' + tag + ')';
// 						tagClick = true;
// 						addTag();
// 						$('#' + newTag.toLowerCase() + 'Address').val('');
// 						$('#' + newTag.toLowerCase() + 'Tag').val('');
// 					}else{
// 						$('.add_new_element .message_err').show();
// 					}
// 					tagLock = false;
// 				});
//
// 			}
// 		}else{
//
// 			var value = $('#client_' + position + ' #' + newTag.toLowerCase() + 'Address').val();
// 						//$('#client_' + position + ' #' + newTag.toLowerCase() + 'Address').val('');
// 			var tag = newTag + ':' + $('#client_' + position + ' #' + newTag.toLowerCase() + 'Tag').val().toUpperCase();
// 						//$('#client_' + position + ' #' + newTag.toLowerCase() + 'Tag').val('')
//
// 			if(tag=='' || tag=='POOL:' || tag=='WALLET:'){ $('.add_new_element .message_err').html(_('Enter tag name')).show(); return false; } // Do nothing with empty value
// 			if(value=='' || tag=='POOL:' || tag=='WALLET:'){ $('.add_new_element .message_err').html(_('Enter address')).show(); return false; } // Do nothing with empty value
// 			tagLock = true;
// 			$('.add_new_element .message_err').hide();
// 			$('.add_new_element .message_err').html(_('Tag already exists'));
//
// 			if(typeof optionsValues['(' + tag + ')'] != 'undefined' && addressEditButton==1){
//
// 				$.post('/address-editor', { update: '1', tag: tag, tagNew: tag, address: value, nonce: nonce }, function(response) {
// 					if(response=='1'){
//
// 						if(newTag=='POOL'){
// 							$selectionTag = $('#client_' + position).find('.aPool .config_selected_option .row');
// 							if(value.indexOf('//')>=0){
// 								var tempVal = value.split('//')[1];
// 							}else{ var tempVal = value; }
// 							$('.aPool .config_dropdown').removeClass('display');
// 						}else{
// 							$selectionTag = $('#client_' + position).find('.aWallet .config_selected_option .row');
// 							$('.aWallet .config_dropdown').removeClass('display');
// 							var tempVal = value;
// 						}
// 						tempVal = truncate(tempVal, 30);
//
// 						optionsValues['(' + tag + ')'] = tempVal;
// 						options.push('(' + tag + ')');
//
// 						$selectionTag.replaceWith('<div class="row" value="(' + tag + ')"><div class="text"><b>' + tag.replace('POOL:','').replace('WALLET:','') + '</b><small>' + tempVal + '</small></div></div>');
//
// 						getConfig($('#client_' + position).data('client'));
//
// 					}else{
// 						$('.add_new_element .message_err').show();
// 					}
// 					tagLock = false;
// 				});
//
// 			}else{
// 				$.post('/address-editor', { add: '1', tag: tag, address: value, nonce: nonce }, function(response) {
// 					if(response=='1'){
//
// 						if(newTag=='POOL'){
// 							$selectionTag = $('#client_' + position).find('.aPool .config_selected_option .row');
// 							if(value.indexOf('//')>=0){
// 								var tempVal = value.split('//')[1];
// 							}else{ var tempVal = value; }
// 							$('.aPool .config_dropdown').removeClass('display');
// 						}else{
// 							$selectionTag = $('#client_' + position).find('.aWallet .config_selected_option .row');
// 							$('.aWallet .config_dropdown').removeClass('display');
// 							var tempVal = value;
// 						}
// 						tempVal = truncate(tempVal, 30);
//
// 						optionsValues['(' + tag + ')'] = tempVal;
// 						options.push('(' + tag + ')');
//
// 						$selectionTag.replaceWith('<div class="row" value="(' + tag + ')"><div class="text"><b>' + tag.replace('POOL:','').replace('WALLET:','') + '</b><small>' + tempVal + '</small></div></div>');
//
// 						getConfig($('#client_' + position).data('client'));
//
// 					}else{
// 						$('.add_new_element .message_err').show();
// 					}
// 					tagLock = false;
// 				});
//
// 			}
// 		}
// 	}
// }

// Validate input
$('#poolTag,#walletTag').on('change', function(event){
	var str = $(this).val();
	// str = str.replace(/[^A-Za-z-0-9_-]/g, "").substring(0,20);
	if($(this).val()!=str){
		$(this).val(str);
	}
});
$('#poolAddress,#walletAddress').on('change', function(event){
	var str = $(this).val();
	// str = str.replace(/\s/g, '');
	if($(this).val()!=str){
		$(this).val(str);
	}
});

$('div[contenteditable]').keydown(function(e) {
    if (e.keyCode === 13) {
      document.execCommand('insertHTML', false, '<br>');
      return false;
    }
});

var truncate = function (fullStr, strLen, separator) {
    if (fullStr.length <= strLen) return fullStr;
    
    separator = separator || '...';
    
    var sepLen = separator.length,
        charsToShow = strLen - sepLen,
        frontChars = Math.ceil(11),
        backChars = Math.floor(12);
    
    return fullStr.substr(0, frontChars) + 
           separator + 
           fullStr.substr(fullStr.length - backChars);
};


window.onload=function () {
	getPools()
	getWallet()
	getCoin()
	getOverClock()

}
//新增模板配置
function addTemp(data) {

	if(tempLock){
		tempLock=false
		$.ajax({
			url:'/miner3?a=configtemp',
			dataType:'json',
			data:data,
			type:'post',
			success:function (res) {


				$('.notification_row').addClass('finished');
				$('.checkmark').show();
				$('.button').removeClass('disabled');

				if(res.code===0){
					$('.circle-loader').addClass('load-complete');
					$('.message_suc').show();
				}else {
					$('.message_err').html('error')
					$('.circle-loader').hide();
					$('.message_err').show();
				}
				let x=setTimeout(function () {
					window.location.replace('/config-templates')
					clearTimeout(x)
				},2000)

			},
			error:function (res) {
				tempLock=true
				$('.notification_row').addClass('finished');
				$('.circle-loader').hide();
				$('.checkmark').show();
				$('.button').removeClass('disabled');
				$('.message_err').show();
				$('.message_err').html('error')
			}
		})
	}

}
//获取超频模板
function getOverClock() {
	$.ajax({
		url:'/miner3?a=overclock',
		dataType:'json',
		data:{
			a:'get'
		},
		type:'post',
		success:function (res) {
			if(res.code===0){
				setOverClockDom(res.data)
			}
		}
	})
}
//获取币池列表
function getCoin() {
	$.ajax({
		url:'/miner3?a=Temp',
		dataType:'json',
		data:{
			a:'get'
		},
		type:'post',
		success:function (res) {
			if(res.code===0){
				myData=res.data
				setCoinDom(res.data.coins)
				if (getQueryVariable('s')==='edit'||getQueryVariable('s')==='copy'){
					getTempById(getQueryVariable('id'))
				}
			}
		}
	})
}
//获取池子的列表
function getPools(val){
	$.ajax({
		url:'/miner3?a=pool',
		dataType:'json',
		data:{
			a:'get'
		},
		type:'post',
		success:function (res) {
			if(res.code===0){
				setPoolsDome(res.data,val)
			}
		}
	})
}
//获取钱包数据
function getWallet(val) {
	$.ajax({
		url:'/miner3?a=wallet',
		dataType:'json',
		data:{
			a:'get'
		},
		type:'post',
		success:function (res) {
			if(res.code===0){
				setWalletDom(res.data,val)
			}
		}
	})
}
var myData=undefined
//根据id获取模板详情
function getTempById(vax) {
	$.ajax({
		url:'/miner3?a=configtemp',
		dataType:'json',
		type:'post',
		data:{
			a:'get',
			id:vax
		},
		success:function (res) {
			if(res.code===0){
				$('#profileName').val(res.data[0].name)
				$('.aPass').val(res.data[0].password)
				// if(res.data[0].overClockingId===0){
				// 	$('#default_oc_profile').val('')
				// }else {
				// 	$('#default_oc_profile').val(res.data[0].overClockingId)
				// }

				let coinImg=''
					$.each(myData['coins'],function (key,item) {
						console.log(item)
						console.log(res.data[0].coinId)
						if(res.data[0].coinId==item.id){
							coinImg=item.ico
							console.log('1',coinImg)
						}
					})
				let poolsA=''
					$.each(myData.pools,function (key,item) {
						if(res.data[0].poolId==item.id){
							poolsA=item.value
						}
					})
				let walletA=''
					$.each(myData.wallets,function (key,item) {
						if(res.data[0].walletId==item.id){
							walletA=item.value
						}
					})
				let strC='<div class="row" value="'+res.data[0].coinId+'" data-algo="'+res.data[0].coinName+'" data-coin="'+res.data[0].coinName+'">' +
					'<div class="image">' +
					'<img width="24" src="'+coinImg+'" height="24" data-icon="'+res.data[0].coinName+'">' +
					'</div><div class="text">' +
					'<b>'+res.data[0].coinName+'</b>' +
					'<small>'+res.data[0].coinName+'</small>' +
					'</div></div>'

				let strP='<div class="row" my-data-name="'+res.data[0].poolName+'" data-my-id="'+res.data[0].poolId+'" value="(POOL:'+res.data[0].poolName+')">' +
					'<div class="text"><b>'+res.data[0].poolName+'</b><small>'+poolsA+'</small></div></div>'

				let strW='<div class="row" my-data-name="'+res.data[0].walletName+'" data-my-id="'+res.data[0].walletId+'" value="(WALLET:'+res.data[0].walletName+')">' +
					'<div class="text"><b>'+res.data[0].walletName+'</b><small>'+walletA+'</small></div></div>'

				if(res.data[0].coinId!==0){
					$('.aCoin .config_selected_option').html(strC)
				}
				if(res.data[0].poolId!==0){
					$('.aPool .config_selected_option').html(strP)
				}
				if(res.data[0].walletId!==0){
					$('.aWallet .config_selected_option').html(strW)
				}

			}
		}
	})
}
//设置超频模板dom节点
function setOverClockDom(data) {
	// let str='<option selected="selected" value="">Don\'t change</option>'
	// $.each(data,function (key,item) {
	// 	str+='<option value="'+item.id+'">'+item.name+'</option>'
	// })
	// $('#default_oc_profile').html(str)
}
//设置币种Dom节点
function setCoinDom(data) {
 	let str=''
	$.each(data,function (key,item) {
      str+='<div class="row" id="coin'+item.id+'" value="'+item.id+'" data-algo="'+item.name+'"' +
		  ' data-coin="'+item.name+'">' +
		  ' <div class="image"><img width="24" src="'+item.ico+'" height="24" data-icon="etc"></div>' +
		  ' <div class="text"><b>'+item.name+'</b><small>'+item.name+'</small>' +
		  ' </div>' +
		  ' </div>'
	})
	$('#myIconList').html(str)
	$('.aCoin .config_dropdown .row[data-coin]').on('click',function(){
		$(this).parent().parent().parent().find('.config_selected_option .row').replaceWith('<div class="row"  value="' + $(this).attr('value') + '" data-algo="' + $(this).data('algo') + '" data-coin="' + $(this).data('coin') + '"><div class="image">' + $(this).find('.image').html() + '</div><div class="text"><b>' + $(this).find('b').html() + '</b><small>' + $(this).find('small').html() + '</small></div></div>');
		$(this).parent().children('.row').removeClass('selected');
		$(this).addClass('selected');
		$('.aCoin .config_dropdown').removeClass('display');
		// getConfig($(this).closest('[data-client]').data('client'));
		resetAddressEditButton();
	});
}
//设置钱包的dom节点
function setWalletDom(data,val) {
	let str=''
	$.each(data,function (index,item) {
		str+='<div class="row" id="wallet'+item.id+'" my-data-id="'+item.id+'" my-data-name="'+item.name+'" value="(WALLET:'+item.name+')">' +
			'<div class="text"><b data-tag="'+item.name+'">'+item.name+'</b><small data-address="'+item.value+'">'+item.value+'</small>' +
			'<div class="icon edit addressEditButton"></div>' +
			'</div>' +
			'</div>'
	})
	$('#myWalletList').html(str)
	$('.aWallet .config_dropdown .frame_tags > .row').on('click',function(event){
		if(!$(event.target).hasClass('addressEditButton')){
			$(this).parent().parent().parent().find('.config_selected_option .row').replaceWith('<div class="row" my-data-name="'+$(this).attr('my-data-name')+'" data-my-id="'+$(this).attr('my-data-id')+'" value="(WALLET:' + $(this).find('b').html() + ')"><div class="text"><b>' + $(this).find('b').html() + '</b><small>' + $(this).find('small').html() + '</small></div></div>');
			$(this).parent().children('.row').removeClass('selected');
			$(this).addClass('selected');
			$('.aWallet .config_dropdown').removeClass('display');
			// getConfig($(this).closest('[data-client]').data('client'));
			resetAddressEditButton();
		}
	});
	if(val!==undefined){
		$('#wallet'+val.toString()).addClass('selected')
	}
}
//设置池子的dom节点
function setPoolsDome(data,val) {
	let str=''
	$.each(data,function (key,item) {
		str+='<div class="row" id="pools'+item.id+'" my-data-id="'+item.id+'" my-data-name="'+item.name+'" value="(POOL:'+item.name+')">' +
			' <div class="text"><b data-tag="'+item.name+'">'+item.name+'</b>' +
			'<small data-address="'+item.value+'">'+item.value+'</small>' +
			'<div class="icon edit addressEditButton"></div>' +
			'</div>' +
			' </div>'
	})
	$('#myPoolsList').html(str)
	$('.aPool .config_dropdown .frame_tags > .row').on('click',function(event){
		if(!$(event.target).hasClass('addressEditButton')){
			if($(this).find('small').html().indexOf('//')>=0){
				var tempPool = $(this).find('small').html().split('//')[1];
			}else{ var tempPool = $(this).find('small').html(); }
			tempPool = truncate(tempPool, 30);
			$(this).parent().parent().parent().find('.config_selected_option .row').replaceWith('<div class="row" my-data-name="'+$(this).attr('my-data-name')+'"  data-my-id="'+$(this).attr('my-data-id')+'" value="(POOL:' + $(this).find('b').html() + ')"><div class="text"><b>' + $(this).find('b').html() + '</b><small>' + tempPool + '</small></div></div>');
			$(this).parent().children('.row').removeClass('selected');
			$(this).addClass('selected');
			$('.aPool .config_dropdown').removeClass('display');
			// getConfig($(this).closest('[data-client]').data('client'));
			resetAddressEditButton();
		}
	});
	if(val!==undefined){
		$('#pools'+val.toString()).addClass('selected')
	}
}

//新增池子
function addPoolsItem(data) {
	$.ajax({
		url:'/miner3?a=pool',
		dataType:'json',
		data:data,
		type:'post',
		success:function (res) {
			if(res.code===0){
				tagLockPools=true
				$('#poolTag').val('')
				$('#poolAddress').val('')
				let str='<div class="row" my-data-name="'+data.name+'" data-my-id="'+res.id+'" value="(POOL:'+data.name+')">' +
					'<div class="text"><b>'+data.name+'</b>' +
					'<small>'+data.value+'</small></div>' +
					'</div>'
				$('.aPool .config_selected_option').html(str)
				$('.aPool .config_dropdown').removeClass('display');
				getPools(res.id)
			}
		},
		error:function (res) {
			$('#poolTag').val('')
			$('#poolAddress').val('')
			tagLockPools=true
			getPools()
		}
	})
}
function addWallet(data,e) {
	$.ajax({
		url:'/miner3?a=wallet',
		dataType:'json',
		data:data,
		type:'post',
		success:function (res) {
			if(res.code===0){
				tagLockWallet=true
				$('#walletTag').val('')
				$('#walletAddress').val('')
				let str='<div class="row" my-data-name="'+data.name+'" data-my-id="'+res.id+'" value="(WALLET:'+data.name+')">' +
					'<div class="text"><b>'+data.name+'</b>' +
					'<small>'+data.value+'</small>' +
					'</div></div>'
				getWallet(res.id)
				$('.aWallet .config_selected_option').html(str)
				$('.aWallet .config_dropdown').removeClass('display');
			}

		},
		error:function (res) {
			tagLockWallet=true
			$('#walletTag').val('')
			$('#walletAddress').val('')
			getWallet()
		}
	})
}
//创建新池子,钱包
let tagLockPools=true //池子锁
let tagLockWallet=true //钱包锁
function createTages(type) {
	if(type=='POOL'&&tagLockPools){
		let obj={
			a:'set',
			name:$('#poolTag').val(),
			value:$('#poolAddress').val()
		}
		tagLockPools=false
		addPoolsItem(obj)
	}else {
		let obj={
			a:'set',
			name:$('#walletTag').val(),
			value:$('#walletAddress').val()
		}
		tagLockWallet=false
		addWallet(obj)
	}
}
function resetWin() {
	// $('.aCoin .config_selected_option').html('<div class="row empty"><div class="image"></div><div class="text"><b>Select coin</b></div></div>')
	// $('.aPool .config_selected_option').html('<div class="row empty"><div class="text"><b>Select pool</b></div></div>')
	// $('.aWallet .config_selected_option').html('<div class="row empty"><div class="text"><b>Select wallet</b></div></div>')
	// $('#profileName').val('')
	// $('.aPass').val('')
	// $('#default_oc_profile').val('')
	window.location.reload()
}
//获取地址栏参数方法
function getQueryVariable(variable)
{
	var query = window.location.search.substring(1);
	var vars = query.split("&");
	for (var i=0;i<vars.length;i++) {
		var pair = vars[i].split("=");
		if(pair[0] == variable){return pair[1];}
	}
	return(false);
}