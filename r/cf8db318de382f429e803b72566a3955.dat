var currency=''
var currencyValue=1
var siteListObj=[] //场所对象
var workersListObj={}//矿工对象
var workersListObjIn={}//定时器矿工对象
var select_all_item=false//是否启用多选
var select_all_list=[]//多选矿工的id列表
//选中的场所ID
var select_site_id=''
var worker_eachart={}
var sortType='1'
var descAndAsc='1'
var logType='1'
var logMinId=''
var scollUpState=false
//列表显示类型
var listShowType=2//1按机器显示 2按显卡显示
//隐藏的dom
var hideDom=0
//显示的dom
var showDom=20
//每排个数
var sizeNum=5
//显示行数
var heNum=4
//ehchart渲染DOM
var echartDom={}
//滚动保持参数
var infoScorll=0
//过滤数据数组
var filterObj=[]
//搜索机器名字的全局参数
var workerNameSearch=''
//状态参数数组
var search_type_list=[]
//场所定时器参数
var siteListCardIn=undefined
//显卡标准对象
var viode_obj_speed={}
//显卡模式数据对象
var viode_obj_list=[]
//每个dom的高度
var item_hegith=listShowType==1?270:240
//显卡类型列表
var list_type_item=[]
//是否全部显示
var showAllList=false
var select_ver=_mx('all version')

var color_list=[ "#7b8fed" , "#05f8d6" , "#0082fc", "#fdd845", "#22ed7c", "#09b0d3", "#1d27c9", "#f9e264", "#f47a75", "#009db2", "#024b51", "#0780cf", "#765005"]

//模式判断
function modHTML() {
    if(localStorage.getItem('list_type_win')==undefined||localStorage.getItem('list_type_win')==''){
        listShowType=1
    }else {
        listShowType=2
        $('.my_icon_xps_qh').addClass('mcsx')
    }
   if(my_wy_key==0){
        $('.menu').remove()
        $('.content').css('width','100%')
   }
    sizeNum=Math.floor(Number($('.worker_list').outerWidth())/240)
    heNum=Math.ceil(Number($('#worker_list_wk_X').outerHeight())/item_hegith)+2
    showDom=sizeNum*heNum
    // console.log('si',sizeNum)
}
modHTML()
//事件注册
function inciRegster() {
    //超频lable
    $('#worker_info_oc_A').on('click',function () {
        if($('.clocktune_popup').is(':visible')){
            $('.clocktune_popup').hide()
        }else {
            $('.clocktune_popup').show()
            setOcList()
        }
    })

    $('.clocktune_popup .green').click(function () {
        if (typeof modGpuId == 'undefined') {
            modGpuId = 'all';
            modGpuBus = '';
        }
        if ($(this).hasClass('saveAll')) {
            var saveType = 'allx';
        } else if($(this).hasClass('saveChanges')){
            var saveType = 'download';
        }else {
            $('.fixed_frame').find('.powerlimit').val('');
            $('.fixed_frame').find('.coreclock').val('');
            $('.fixed_frame').find('.memoryclock').val('');
            $('.fixed_frame').find('.Mtemperature').val('');
            $('.fixed_frame').find('.Mvoltage').val('');
            $('.fixed_frame').find('.Cvoltage').val('');
            $('.fixed_frame').find('.fan').val('')
            return
        }
        var gpusCount = ($('#table_gpus tr').length) - 1;
        var systemOC = $('.clocktune_popup').data('system');
        var typeOC = $('.clocktune_popup').data('type');
        var $this = $(this);
        if ($(this).hasClass('disabled')) {
            return false;
        }
        $(this).addClass('disabled');
        $('.clocktune_popup .checkmark').hide();
        $('.clocktune_popup .circle-loader').removeClass('load-complete');
        $('.clocktune_popup .circle-loader').show();
        var oc = {
            nvidia:{
                power:'',
                temp:'',
                core:'',
                mvolt:'',
                cvolt:'',
                mem:'',
            }
        };

        oc['nvidia']['power'] = $('.powerlimit').val().trim();
        oc['nvidia']['temp'] = $('.Mtemperature').val().trim();
        oc['nvidia']['core'] = $('.coreclock').val().trim();
        oc['nvidia']['mvolt'] = $('.Mvoltage').val().trim();
        oc['nvidia']['cvolt'] = $('.Cvoltage').val().trim();
        oc['nvidia']['mem'] = $('.memoryclock').val().trim();
        oc['nvidia']['fan'] = $('.fan').val().trim();

        var nonce = $('#nonce').val();

        $.post('/clocktune', {
            workerName: logMinId,
            gpu: saveType!='allx'?Number($('#v_list_sl').val()):undefined,//显卡顺序
            likegpu:saveType=='allx'?Number($('#v_list_sl').val()):undefined,
            gpus:clickItemMcObJ.hardware.length,
            oc: saveType=='clear'?'':JSON.stringify(oc),
            "save": 'download'
        }, function (response) {
            resetWorkerList()
            $('.clocktune_popup .circle-loader').addClass('load-complete');
            $('.clocktune_popup .checkmark').show();
            $('.clocktune_popup .button').removeClass('disabled');
            setTimeout(function () {
                $('.clocktune_popup .load-complete').hide();
            },1000)
        });
    });

    $('.item_card').on('click',function () {
        if($(this).hasClass('is_card')){
            return
        }
        scollUpState=false
        $('.item_card').removeClass('is_card')
        $(this).addClass('is_card')
        let sthis=$(this)
        sortType='1'
        descAndAsc='1'
        let cx=$('.cbg')
        $.each(cx,function (i,it) {
            $(it).find('.cbgx').removeClass('icon_g')
        })
        $('#search_info').val('')
        let x_h=$('.Tab_type')
        sortType='1'
        descAndAsc='1'
        $.each(x_h,function (i,it) {
            $(it).attr('dex','0')
            $(it).removeClass('isType')
            $(it).find('.my_icon_x').removeClass('arrow_px_up arrow_px_down arrow_px_none')
            if(i==0){
                $(it).attr('dex','1')
                $(it).addClass('isType')
                $(it).find('.my_icon_x').addClass('arrow_px_up')
            }else {
                $(it).find('.my_icon_x').addClass('arrow_px_none')
            }
        })
        workerNameSearch=''
        search_type_list=[]
        list_type_item=[]
        list_ver_item=[]
        resetWaLabel()
        $('.msg_err_tile_wk').hide()
        listErrGPU=[]
        $('.worker_list').html(
            ' <div class="spinner">\n' +
            '                    <div class="bounce1"></div>\n' +
            '                    <div class="bounce2"></div>\n' +
            '                    <div class="bounce3"></div>\n' +
            '                </div>'
        )
        $('.sort_wk_X').html('')
        $('#worker_list_wk_X')[0].scrollTop=0
        if($(this).attr('id')!=='All_site'){
            $.each(siteListObj,function (i,it) {
                if(it.id==Number(sthis.attr('my-id'))){

                    $('.site_name').html(it.name+'<small>(id:'+it.id+')</small>')
                    // setlabelCard(it)
                    getWorkerList(it.id,1)
                    select_site_id=it.id
                    listShowType==1?getEachartData(it.id):getGPUEachar(it.id)
                    getWalletHref(it.id)
                    clearInterval(workerListIn)
                    // workerListIn=setInterval("getWorkerList('"+it.id+"')",14000)
                    localStorage.setItem('site_card_item',JSON.stringify(it))
                }
            })
        }else {

            // setlabelCard('all')
            $('.site_name').html(_mx('All Site'))
            getWorkerList('allsite',1)
            select_site_id='allsite'
            listShowType==1?getEachartData('allsite'):getGPUEachar('allsite')
            getWalletHref('allsite')
            clearInterval(workerListIn)
            // workerListIn=setInterval("getWorkerList('allsite')",14000)
            localStorage.setItem('site_card_item','allsite')
        }
        closeEd('6')
        resetSelectAll()
    })

    $('#search').on('keyup',function () {
        let x=$('.item_card')
        let m=$(this).val().toLowerCase()
        $.each(x,function (i,it) {
            if($(it).attr('id')!='All_site'){
                if($(it).attr('data-name-filtr').indexOf(m)==-1){
                    $(it).hide()
                }else {
                    $(it).show()
                }
            }
        })
    })

    $('.Tab_type').on('click',function () {
        let x=$('.Tab_type')
        sortType=$(this).attr('data-type')
        if($(this).hasClass('isType')){
            if($(this).attr('dex')=='1'){
                descAndAsc='2'
                $(this).attr('dex','2')
                $(this).find('.my_icon_x').addClass('arrow_px_down')
                $(this).find('.my_icon_x').removeClass('arrow_px_up')
            }else if($(this).attr('dex')=='2'||$(this).attr('dex')=='0'){
                descAndAsc='1'
                $(this).attr('dex','1')
                $(this).find('.my_icon_x').addClass('arrow_px_up')
                $(this).find('.my_icon_x').removeClass('arrow_px_down')
            }
        }else {
            $.each(x,function (i,it) {
                $(it).removeClass('isType')
                $(it).attr('dex','0')
                $(it).find('.my_icon_x').removeClass('arrow_px_up arrow_px_down')
                $(it).find('.my_icon_x').addClass('arrow_px_none')
            })
            $(this).addClass('isType')
            $(this).find('.my_icon_x').addClass('arrow_px_up')
            $(this).find('.my_icon_x').removeClass('arrow_px_none')
            if($(this).attr('dex')=='1'){
                descAndAsc='2'
                $(this).attr('dex','2')
                $(this).find('.my_icon_x').addClass('arrow_px_down')
                $(this).find('.my_icon_x').removeClass('arrow_px_up')
            }else if($(this).attr('dex')=='2'||$(this).attr('dex')=='0'){
                descAndAsc='1'
                $(this).attr('dex','1')
                $(this).find('.my_icon_x').addClass('arrow_px_up')
                $(this).find('.my_icon_x').removeClass('arrow_px_down')
            }
        }
        $('#worker_list_wk_X')[0].scrollTop=0
        listShowType==1?setList():setVlist()

    })

    $('#Woker_info_win .info_wkx .item').on('click',function () {
        let list = $('#Woker_info_win .info_wkx .item')
        if($(this).hasClass('is_item')){
            return
        }
        $.each(list,function (i,it) {
            $(it).removeClass('is_item')
        })
        $(this).addClass('is_item')
        clickFunction($(this).attr('data-type'))
    })


    $('#search_info').keyup(function (e) {
       if(e.keyCode==13||$(this).val().toLowerCase()==''){
           let x=$('.item_worker')
           let m=$('.icon_g')
           search_type_list=[]
           $.each(m,function (i,it) {
               $.each($(it).attr('data-type').split(','),function (j,k) {
                   search_type_list.push(k)
               })
           })
           workerNameSearch=$(this).val().toLowerCase()
           $('#worker_list_wk_X')[0].scrollTop=0
           listShowType==1?setList():setVlist()
       }

    })

    $('#search_info_p').keyup(function (e) {
       if(e.keyCode==13||$(this).val().toLowerCase()==''){
           let x=$('.item_worker')
           let m=$('.icon_g')
           search_type_list=[]
           $.each(m,function (i,it) {
               $.each($(it).attr('data-type').split(','),function (j,k) {
                   search_type_list.push(k)
               })
           })
           workerNameSearch=$(this).val().toLowerCase()
           $('#worker_list_wk_X')[0].scrollTop=0
           listShowType==1?setList():setVlist()
       }

    })

    $('.cbg').on('click',function () {
        if($(this).find('.cbgx').hasClass('icon_g')){
            $(this).find('.cbgx').removeClass('icon_g')
        }else {
            $(this).find('.cbgx').addClass('icon_g')
        }
        let x=$('.item_worker')
        let m=$('.icon_g')
        search_type_list=[]
        // resetSelectAll()
        $.each(m,function (i,it) {
            $.each($(it).attr('data-type').split(','),function (j,k) {
                search_type_list.push(k)
            })
        })
        $('#worker_list_wk_X')[0].scrollTop=0
        listShowType==1?setList():setVlist()
    })
}

if(document.body.clientWidth<=600){
    sizeNum=1
}else {
    sizeNum=Math.floor(Number($('.worker_list').outerWidth()-10)/240)
    heNum=Math.ceil(Number($('#worker_list_wk_X').outerHeight())/item_hegith)+1
    showDom=sizeNum*heNum
}
getSiteList(1)
getTempLsit()
function getSiteList(type) {
    $.ajax({
        url:'/QUERY?SITE,SITECFG,SITESTS,STANDARD',
        dataType:'json',
        type:'get',
        success:function (res) {
            currency=res.STANDARD.currency
            currencyValue=res.STANDARD.currencyValue
            siteListObj=res.SITE
            let cardListZ=[]
            let cardListM=[]
            if(type==1){
                $.each(siteListObj,function (i,it) {
                    if(it.totalHashRate==0){
                        cardListZ.push(it)
                    }else {
                        cardListM.push(it)
                    }
                })
                siteListObj=cardListM.concat(cardListZ)
                setSiteListCard(siteListObj,1)
            }else {
                updataData(siteListObj)
            }
        }
    })
}
//设置数据卡
function setlabelCard(data) {
    if(data!='all'){
        //名字
        $('.site_name').html(data.name+'<small>(id:'+data.id+')</small>')

        //昨日收益
        $('#ets_money').html((data.estyDay*currencyValue).toFixed(2))

        //昨日同比
        let per=0
        if(data.estBeforeyDay!=0){
            per=(((data.estyDay-data.estBeforeyDay)/data.estBeforeyDay)*100).toFixed(2)
        }
        $('#ets_bfb').html(per)
        $('#ets_icon').removeClass('arrow_down')
        $('#ets_icon').removeClass('arrow_up')
        $('#ets_icon').removeClass('arrow_none')
        if(per>0){
            $('#ets_icon').addClass('arrow_up')
            $('#ets_bfb').parent().removeClass('scu red')
            $('#ets_bfb').parent().removeClass('scu')
            $('#ets_bfb').parent().addClass('scu')
        }else if(per<0){
            $('#ets_icon').addClass('arrow_down')
            $('#ets_bfb').parent().removeClass('scu red')
            $('#ets_bfb').parent().removeClass('scu')
            $('#ets_bfb').parent().addClass('red')
        }else {
            $('#ets_icon').addClass('arrow_none')
        }
        //近七日比较
        let perW=0
        if(data.estLastWeek!=0){
            perW=(((data.estWeek-data.estLastWeek)/data.estLastWeek)*100).toFixed(2)
        }
        $('#ets_hx').html(perW)
        $('#ets_mx').removeClass('arrow_down')
        $('#ets_mx').removeClass('arrow_up')
        $('#ets_mx').removeClass('arrow_none')
        if(perW>0){
            $('#ets_mx').addClass('arrow_up')
            $('#ets_hx').parent().removeClass('scu red')
            $('#ets_hx').parent().removeClass('scu')
            $('#ets_hx').parent().addClass('scu')
        }else if(perW<0){
            $('#ets_mx').addClass('arrow_down')
            $('#ets_hx').parent().removeClass('scu red')
            $('#ets_hx').parent().removeClass('scu')
            $('#ets_hx').parent().addClass('red')
        }else {
            $('#ets_mx').addClass('arrow_none')
        }

        //在线总数
        $('#o_wk').html(data.online)
        $('#o_sum').html(data.workers)

        //故障机数
        $('#ab_w').html(data.abnormal)

        //平均温度
        $('#avg_t').html(data.avgTem)
        //最高转速
        $('#avg_f').html(data.maxFan)

        //效率
        if((data.accept+data.reject)>0){
            $('#m_xl').html(((data.accept/(data.accept+data.reject))*100).toFixed(2))
        }else {
            $('#m_xl').html(0)
        }

        //平均功耗
        $('#avg_p').html(data.avgPower)

        //平均功率效应
        let m=0
        let unit='HW'
        if(data.power>0){
            let x=convertHashrate(data.totalHashRate/data.power,'H/s')
            m=x.split(' ')[0]
            unit=x.split(' ')[1].replace('H/s','Hw')
        }
        $('#avg_x').html(m)
        $('#avg_ut').html(unit)
    }else {
        let sl=0
        let zx=0
        let gz=0
        let yx=0
        let lx=0
        let zr=0
        let qr=0
        let zl=0
        let weekzr=0
        let weekqr=0
        let s_avg=0
        let s_fan=0
        let s_pow=0
        let s_ac=0
        let s_re=0
        let s_pox=0
        $.each(siteListObj,function (i,it) {
            sl+=it.totalHashRate//算力
            zx+=it.online//在线机子
            yx+=it.anyhow//游戏状态
            lx+=it.offline//离线状态
            zr+=it.estyDay//昨日收益
            qr+=it.estBeforeyDay//前日收益
            zl+=it.workers//总量
            weekzr+=it.estWeek//近七日
            weekqr+=it.estLastWeek//前七日
            gz+=it.abnormal//故障机器
            s_avg+=it.avgTem//平均温度
            s_fan<it.maxFan?s_fan=it.maxFan:s_fan=s_fan//最高转速
            s_pow+=it.avgPower//平均功率
            s_pox+=it.power//功耗
            s_ac+=it.accept//发送
            s_re+=it.reject//拒绝

        })
        $('#ets_money').html((zr*currencyValue).toFixed(2))
        let per=0//计算增加减少百分比
        if(qr!=0){
            per=(((zr-qr)/qr)*100).toFixed(2)
        }
        $('#ets_bfb').html(per)
        $('#ets_icon').removeClass('arrow_down')
        $('#ets_icon').removeClass('arrow_up')
        $('#ets_icon').removeClass('arrow_none')
        if(per>0){
            $('#ets_icon').addClass('arrow_up')
            $('#ets_bfb').parent().removeClass('scu red')
            $('#ets_bfb').parent().removeClass('scu')
            $('#ets_bfb').parent().addClass('scu')
        }else if(per<0){
            $('#ets_icon').addClass('arrow_down')
            $('#ets_bfb').parent().removeClass('scu red')
            $('#ets_bfb').parent().removeClass('scu')
            $('#ets_bfb').parent().addClass('red')
        }else {
            $('#ets_icon').addClass('arrow_none')
        }

        //近七日比较
        let perW=0
        if(weekqr!=0){
            perW=(((weekzr-weekqr)/weekqr)*100).toFixed(2)
        }
        $('#ets_hx').html(perW)
        $('#ets_mx').removeClass('arrow_down')
        $('#ets_mx').removeClass('arrow_up')
        $('#ets_mx').removeClass('arrow_none')
        if(perW>0){
            $('#ets_mx').addClass('arrow_up')
            $('#ets_hx').parent().removeClass('scu red')
            $('#ets_hx').parent().removeClass('scu')
            $('#ets_hx').parent().addClass('scu')
        }else if(perW<0){
            $('#ets_mx').addClass('arrow_down')
            $('#ets_hx').parent().removeClass('scu red')
            $('#ets_hx').parent().removeClass('scu')
            $('#ets_hx').parent().addClass('red')
        }else {
            $('#ets_mx').addClass('arrow_none')
        }

        $('.site_name').html(_mx('All Site'))
        //在线总数
        $('#o_wk').html(zx)
        $('#o_sum').html(zl)
        //故障机数
        $('#ab_w').html(gz)
        //平均温度
        $('#avg_t').html(Math.ceil(s_avg/siteListObj.length))
        //最高转速
        $('#avg_f').html(s_fan)
        //效率
        if((s_ac+s_re)>0){
            $('#m_xl').html(((s_ac/(s_ac+s_re))*100).toFixed(2))
        }else {
            $('#m_xl').html(0)
        }
        //平均功耗
        $('#avg_p').html(Math.ceil(s_pow/siteListObj.length))
        //平均功率效应
        let m=0
        let unit='HW'
        if(s_pox>0){
            let x=convertHashrate(sl/s_pox,'H/s')
            m=x.split(' ')[0]
            unit=x.split(' ')[1].replace('H/s','Hw')
        }
        $('#avg_x').html(m)
        $('#avg_ut').html(unit)
    }
}
//第一次渲染
function setSiteListCard(data,type) {
    resetWaLabel()
    if(data.length==0){
        $('.worker_list').html(' <div style="margin-top: 120px;width: 100%">\n' +
            '                <div style="text-align: center;font-size: 20px" lang-data-ht="\'Site\' is not set for this user">'+_mx('\'Site\' is not set for this user')+'</div>\n' +
            '                <a href="/site-echarts" style="display: block;width: 150px;text-align: center;margin: 0 auto;margin-top: 20px" class="button green" lang-data-ht="Click settings">'+_mx('Click settings')+'</a>\n' +
            '            </div>')

        $('.worker_list_all').html(' <div style="margin-top: 120px;width: 100%">\n' +
            '                <div style="text-align: center;font-size: 20px" lang-data-ht="\'Site\' is not set for this user">'+_mx('\'Site\' is not set for this user')+'</div>\n' +
            '                <a href="/site-echarts" style="display: block;width: 150px;text-align: center;margin: 0 auto;margin-top: 20px" class="button green" lang-data-ht="Click settings">'+_mx('Click settings')+'</a>\n' +
            '            </div>')
        return
    }
    let str=''
    let options=''
    $.each(data,function (i,it) {
       options+='<option value="'+it.id+'">'+it.name+'</option>'
        let per=0
        if(it.estBeforeyDay!=0){
            per=(((it.estyDay-it.estBeforeyDay)/it.estBeforeyDay)*100).toFixed(2)
        }
        let click_S=(localStorage.getItem('site_card_item')!==undefined&&localStorage.getItem('site_card_item')!=null&&localStorage.getItem('site_card_item')!=''&&localStorage.getItem('site_card_item')!='allsite')
        let it_obj={}
        if(click_S){
            it_obj=JSON.parse(localStorage.getItem('site_card_item'))
        }
        if(type==1&&click_S&&(it.id==it_obj.id)){
            str+='<div class="item_card is_card" id="s_'+it_obj.id+'" my-id="'+it_obj.id+'" id-name="'+it_obj.name+'" data-name-filtr="'+it_obj.name.toLowerCase()+','+it_obj.name_qp.toLowerCase()+','+it_obj.name_sp.toLowerCase()+','+it_obj.id+'">\n'
            // setlabelCard(it_obj)
            // getEachartData(it_obj.id)
            $('.site_name').html(it_obj.name+'<small>(id:'+it_obj.id+')</small>')
            getWorkerList(it_obj.id,1)
            getWalletHref(it_obj.id)
            select_site_id=it_obj.id
            // workerListIn=setInterval("getWorkerList('"+it_obj.id+"')",14000)
            siteListCardIn=setInterval("getSiteList(2)",14000)
        }else if(type==1&&!click_S&&i==0&&localStorage.getItem('site_card_item')!='allsite'){
            str+='<div class="item_card is_card" id="s_'+it.id+'" my-id="'+it.id+'" id-name="'+it.name+'" data-name-filtr="'+it.name.toLowerCase()+','+it.name_qp.toLowerCase()+','+it.name_sp.toLowerCase()+','+it.id+'">\n'
            $('.site_name').html(it.name+'<small>(id:'+it.id+')</small>')
            // setlabelCard(it)
            // getEachartData(it.id)
            getWorkerList(it.id,1)
            getWalletHref(it.id)
            select_site_id=it.id
            // workerListIn=setInterval("getWorkerList('"+it.id+"')",14000)
            siteListCardIn=setInterval("getSiteList(2)",14000)
            localStorage.setItem('site_card_item','')
        }
        else {
            str+='<div class="item_card" id="s_'+it.id+'" my-id="'+it.id+'" id-name="'+it.name+'" data-name-filtr="'+it.name.toLowerCase()+','+it.name_qp.toLowerCase()+','+it.name_sp.toLowerCase()+','+it.id+'">\n'
        }

          str+='          <div class="title">'+it.name+'<small>(id:'+it.id+')</small></div>\n' +
            '                <div class="info_card">\n' +
            '                    <div class="info_card_t">\n' +
            '                        <div class="sl">'+convertHashrate(speedToHash(it.totalHashRate,'H'),'H/s')+'</div>\n' +
            '                        <div style="display: flex;justify-content: space-between">\n' +
            '                            <div class="zx" style="margin-right: 5px"><span style="color: rgba(255,255,255,0.4)" data-tooltip="'+_mx('Online')+':'+it.online+','+_mx('Gameing')+':'+it.anyhow+','+_mx('Offline')+':'+it.offline+'"><sapn style="color:#0b9607">'+it.online+'</sapn>/<sapn style="color:#07927d">'+it.anyhow+'</sapn>/<sapn style="color:rgba(255,255,255,0.6)">'+it.offline+'</span></span></div>\n' +
            // '                            <div class="abt">'+_mx('Offline')+' <span style="color: #fff"></span></div>\n' +
            '                        </div>\n' +
            '                    </div>\n' +
            '                    <div class="info_card_b">\n' +
            '                        <div style="display: flex;align-content: baseline">\n' +
            '                            <div>'+_mx('EST.Y')+'</div>\n' +
            '                            <div class="mex" style="margin-left: 10px;color: #fff">'+(it.estyDay*currencyValue).toFixed(2)+' '+currency+'</div>\n' +
            '                        </div>\n' +
            '                        <div class="meh" style="display: flex">\n'

            if(per>0){
              str+=  '                            <div style="margin-right: 5px;color: #52cca5">'+per+'%</div>\n' +
                    '                            <div class="my_icon arrow_up"></div>\n'
            }else if(per<0){
                str+=  '                            <div style="margin-right: 5px;color: #ff5253">'+per+'%</div>\n' +
                    '                            <div class="my_icon arrow_down"></div>\n'
            }else {
                str+=  '                            <div style="margin-right: 5px;color: #ff5253;display: none">'+per+'%</div>\n' +
                    '                            <div class="my_icon arrow_down" style="display: none"></div>\n'
            }


           str+= '                          </div>\n' +
                '                    </div>\n' +
                '                </div>\n' +
                '            </div>'
    })
    if(localStorage.getItem('site_card_item')=='allsite'){
        $('#All_site').addClass('is_card')
        $('.site_name').html(_mx('All Site'))
        // setlabelCard('all')
        // getEachartData(it.id)
        getWorkerList('allsite',1)
        getWalletHref('allsite')
        select_site_id='allsite'
        // workerListIn=setInterval("getWorkerList('allsite')",14000)
        siteListCardIn=setInterval("getSiteList(2)",14000)
        localStorage.setItem('site_card_item','allsite')
    }
    $('#list_card').html(str)
    $('#select_site_win .text').html(str)
    $('#select_site').html(options)
    $('#socx').css('height',(data.length*132)+'px')
    inciRegster()
    setAllSite(data)
}

//设置全部场所数据
function setAllSite(data) {
    let sl=0
    let zx=0
    let yx=0
    let lx=0
    let zr=0
    let qr=0
    $.each(data,function (i,it) {
        sl+=it.totalHashRate//算力
        zx+=it.online//在线机子
        yx+=it.anyhow//游戏状态
        lx+=it.offline//离线状态
        zr+=it.estyDay//昨日收益
        qr+=it.estBeforeyDay//前日收益
    })

    let per=0//计算增加减少百分比
    if(qr!=0){
        per=(((zr-qr)/qr)*100).toFixed(2)
    }

    let str='<div class="title">'+_mx('All Site')+'</div><div class="info_card">\n' +
            '    <div class="info_card_t">\n' +
            '        <div class="sl">'+convertHashrate(speedToHash(sl,'H'),'H/s')+'</div>\n' +
            '        <div style="display: flex;justify-content: space-between">\n' +
            '            <div class="zx" style="margin-right: 5px"><span style="color: rgba(255,255,255,0.4)" data-tooltip="'+_mx('Online')+':'+zx+','+_mx('Gameing')+':'+yx+','+_mx('Offline')+':'+lx+'"><sapn style="color:#0b9607">'+zx+'</sapn>/<sapn style="color:#07927d">'+yx+'</sapn>/<sapn style="color:rgba(255,255,255,0.6)">'+lx+'</sapn></span></div>\n' +
            '        </div>\n' +
            '    </div>\n' +
            '    <div class="info_card_b">\n' +
            '        <div style="display: flex;align-content: baseline">\n' +
            '            <div>'+_mx('EST.Y')+'</div>\n' +
            '            <div class="mex" style="margin-left: 10px;color: #fff">'+(zr*currencyValue).toFixed(2)+' '+currency+'</div>\n' +
            '        </div>\n' +
            '        <div class="meh" style="display: flex">'
            if(per>0){
                str+=  '     <div style="margin-right: 5px;color: #52cca5">'+per+'%</div>\n' +
                    '     <div class="my_icon arrow_up"></div>\n'
            }else if(per<0){
                str+=  '     <div style="margin-right: 5px;color: #ff5253">'+per+'%</div>\n' +
                    '     <div class="my_icon arrow_down"></div>\n'
            }else {
                str+=  '     <div style="margin-right: 5px;color: #ff5253;display: none">'+per+'%</div>\n' +
                    '     <div class="my_icon arrow_down" style="display: none"></div>\n'
            }

            str+='</div>\n' +
            '    </div>\n' +
            '</div>'
        $('#All_site').html(str)
}

//定时器渲染
function updataData(data) {
    $.each(data,function (i,it) {
        let per=0
        if(it.estBeforeyDay!=0){
            per=(((it.estyDay-it.estBeforeyDay)/it.estBeforeyDay)*100).toFixed(2)
        }
        $('#s_'+it.id).find('.sl').html(convertHashrate(speedToHash(it.totalHashRate,'H'),'H/s'))
        $('#s_'+it.id).find('.zx').html('<span style="color: rgba(255,255,255,0.4)" data-tooltip="'+_mx('Online')+':'+it.online+','+_mx('Gameing')+':'+it.anyhow+','+_mx('Offline')+':'+it.offline+'"><sapn style="color:#0b9607">'+it.online+'</sapn>/<sapn style="color:#07927d">'+it.anyhow+'</sapn>/<sapn style="color:rgba(255,255,255,0.6)">'+it.offline+'</span></span>')
        $('#s_'+it.id).find('.mex').html((it.estyDay*currencyValue).toFixed(2)+' '+currency)
        if(per>0){
            $('#s_'+it.id).find('.meh').html('<div style="margin-right: 5px;color: #52cca5">'+per+'%</div><div class="my_icon arrow_up"></div>')
        }else if(per<0){
            $('#s_'+it.id).find('.meh').html('  <div style="margin-right: 5px;color: #ff5253">'+per+'%</div><div class="my_icon arrow_down"></div>')
        }else {
            $('#s_'+it.id).find('.meh').html('  <div style="margin-right: 5px;color: #ff5253;display: none">'+per+'%</div><div class="my_icon arrow_down" style="display: none"></div>')
        }
        if(it.id==select_site_id){
            // setlabelCard(it)
        }
    })
    if(select_site_id=='allsite'){
        // setlabelCard('all')
    }
    setAllSite(data)
 }

var workerListIn=0
function setWorkerListDom(data) {
    let str=''
    let online_num=0
    let anyhowmining_num=0
    let anyhow_idle_num=0
    let idle_num=0
    let disable_num=0
    let unable_num=0
    let offline_num=0
    let online_sum_all=0
    let anyhowmining_sum_all=0
    let abnormale_num=0
    let id_list=[]

    $.each(workersListObj,function (i,it) {
        switch (it.info.status) {
            case 'offline':
                offline_num++
                break
            case 'online':
                online_num++
                online_sum_all+=it.mining.hashrate.hashrate
                break
            case 'anyhowmining':
                anyhowmining_num++
                anyhowmining_sum_all+=it.mining.hashrate.hashrate
                break
            case 'anyhow_idle':
                anyhow_idle_num++
                break
            case 'disable':
                disable_num++
                break
            case 'unable':
                unable_num++
                break
            case 'idle':
                idle_num++
                break
            case 'starting':
                idle_num++
                break
            case 'abnormal':
                abnormale_num++
                break
            default:
                offline_num++
                break
        }
    })
    $('#online_num').html(online_num)
    $('#anyhowmining_num').html(anyhowmining_num)
    $('#anyhow_idle_num').html(anyhow_idle_num)
    $('#idle_num').html(idle_num)
    $('#disable_num').html(disable_num)
    $('#offline_num').html(offline_num)
    $('#unable_num').html(unable_num)
    $('#abnormale_num').html(abnormale_num)
    $('#online_sum_all').html(convertHashrate(speedToHash((Math.ceil(online_sum_all)*1000*1000),'H'),'H','1'))
    $('#anyhowmining_sum_all').html(convertHashrate(speedToHash((Math.ceil(anyhowmining_sum_all)*1000*1000),'H'),'H','1'))
    if(data.length==0){
        $('.worker_list').html(' <div style="margin-top: 120px;width: 100%">\n' +
            '                <div style="text-align: center;font-size: 20px" lang-data-ht="\'Site\' is not set for this user">'+_mx('No worker have been set up in the site')+'</div>\n' +
            '                <div onclick="downWinC()"  style="display: block;width: 150px;text-align: center;margin: 0 auto;margin-top: 20px" class="button blue" lang-data-ht="Click settings">'+_mx('Download client')+'</div>\n' +
            '            </div>')

        $('.worker_list_all').html(' <div style="margin-top: 120px;width: 100%">\n' +
            '                <div style="text-align: center;font-size: 20px" lang-data-ht="\'Site\' is not set for this user">'+_mx('No worker have been set up in the site')+'</div>\n' +
            '                <div onclick="downWinC()"  style="display: block;width: 150px;text-align: center;margin: 0 auto;margin-top: 20px" class="button blue" lang-data-ht="Click settings">'+_mx('Download client')+'</div>\n' +
            '            </div>')
        return
    }
    $.each(data,function(i,it){
        //统计个状态数量
        //实时算力
        let ss_h=Math.ceil(it.mining.hashrate.hashrate)
        let ss_h_unit=it.mining.hashrate.hashrate_unit
        //矿池算力
        let p_h=Math.ceil(it.mining.hashrate.poolspeed)
        //拒绝率
        let reject=0

        if((it.mining.shares.accepted_share+it.mining.shares.rejected_share)>0){
             reject= (it.mining.shares.rejected_share/(it.mining.shares.accepted_share+it.mining.shares.rejected_share)*100).toFixed(2)
        }
        let v_obj=getNumberV(it.hardware,it.info.hot,it.info.veryHot)
        let is_select='select_zzc'
        if(select_all_list.indexOf(it.info.id)!==-1){
            is_select='select_zzc is_s'
        }
        if(showAllList){
            str+=' <div class="item_worker" onclick="clickOpenWin('+it.info.id+',\''+it.info.name+'\',\''+it.info.status+'\','+it.info.nid+')" id="w_'+it.info.id+'" data-name="'+it.info.name.toLowerCase()+'" data-state="'+it.info.status+'">\n' +
                '<div class="'+is_select+'" onclick="chckeWorker('+it.info.id+',this)">' +
                    '<div class="select_wk">' +
                        '<div class="img_g_x"></div>'+
                    '</div>' +
                '</div>'+
                '                    <div class="item_head_wk '+getWorkerState(it.info.status,it.mining.hashrate.hashrate,1)+'">\n' +
                '                        <div class="t1" data-tooltip="'+it.info.name+'">'+(it.info.name.length>9?it.info.name.substring(0,6)+'..':it.info.name)+'<div style="margin-left: 4px">('+getWorkerState(it.info.status,it.mining.hashrate.hashrate,2)+')</div></div>\n' +
                '                        <div class="t2">'+getTime(it.info.onlineTime)+'</div>\n' +
                '                    </div>\n' +
                '                    <div class="worker_h_info '+getWorkerState(it.info.status,it.mining.hashrate.hashrate,3)+'">\n' +
                '                        <div class="in_it" style="margin-left: 12px">\n' +
                '                            <div class="t1">'+ss_h+'<small>'+ss_h_unit+'</small></div>\n' +
                '                            <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                '                        </div>\n' +
                '                        <div class="in_it">\n' +
                '                            <div class="t1">'+p_h+'<small>'+ss_h_unit+'</small></div>\n' +
                '                            <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                '                        </div>\n' +
                '                        <div class="in_it" style="margin-right: 12px">\n' +
                '                            <div class="t1">'+reject+'<small>%</small></div>\n' +
                '                            <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                '                        </div>\n' +
                '                    </div>\n' +
                '                    <div class="GPU_list_wk">\n' +
                '                        <div class="GPU_c">\n' +
                '                            <div style="display: flex;">\n'
            $.each(it.hardware,function(ic,ix){
                if(it.info.status=='online'){
                    let xhx=(ix.name+(ix.lock==0?0:1)+ix.type+it.mining.crypto)
                    let xq='col1'//col8
                    let mh_v=(ix.speed/viode_obj_speed[xhx]).toFixed(2)
                    mh_v<0.8?xq='col8':(ix.status=='idle'?xq='col4':xq='col1')
                    str+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+xq+'" data-bus="'+(ic+1)+'" class="bgk '+xq+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                }else {
                    str+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+getWorkerState(ix.status,1,1)+'" data-bus="'+(ic+1)+'" class="bgk '+getWorkerState(ix.status,1,1)+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                }
            })
            str+='                            </div>\n' +
                '                        </div>\n' +
                '                        <div class="v_wk">\n'
            if(v_obj.num>0){
                str+='<div>'+v_obj.name+' ('+v_obj.num+')</div>\n'+
                    '<div> <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'
            }
            else{
                str+='<div style="height:32px"></div>\n'+
                    '<div><span style="color: #ff564f;font-size: 16px"></span></div>\n'
            }

            str+= '                        </div>\n' +
                '                    </div>\n'

            if(echartDom['cm'+it.info.id]==undefined){
                id_list.push('cm'+it.info.id)
                str+='<div><div class="echarts_wk" id="cm'+it.info.id+'">\n' +
                    _mx3('No Data') +
                    '</div></div>\n'
            }else {
                str+=echartDom['cm'+it.info.id]
            }


            str+='<small style="position: absolute;bottom: 0px;transform: translate(-50%) scale(0.6);left: 50%" id="ver_'+it.info.id+'">'+it.info.version+'</small>'+
                '</div>'
        }else {
            if(hideDom<=i&&i<hideDom+showDom){
                // id_list.push('cm'+it.info.id)
                str+=' <div class="item_worker" onclick="clickOpenWin('+it.info.id+',\''+it.info.name+'\',\''+it.info.status+'\','+it.info.nid+')" id="w_'+it.info.id+'" data-name="'+it.info.name.toLowerCase()+'" data-state="'+it.info.status+'">\n' +
                    '<div class="'+is_select+'" onclick="chckeWorker('+it.info.id+',this)">' +
                    '<div class="select_wk">' +
                    '<div class="img_g_x"></div>'+
                    '</div>' +
                    '</div>'+
                    '                    <div class="item_head_wk '+getWorkerState(it.info.status,it.mining.hashrate.hashrate,1)+'">\n' +
                    '                        <div class="t1" data-tooltip="'+it.info.name+'">'+(it.info.name.length>9?it.info.name.substring(0,6)+'..':it.info.name)+'<div style="margin-left: 4px">('+getWorkerState(it.info.status,it.mining.hashrate.hashrate,2)+')</div></div>\n' +
                    '                        <div class="t2">'+getTime(it.info.onlineTime)+'</div>\n' +
                    '                    </div>\n' +
                    '                    <div class="worker_h_info '+getWorkerState(it.info.status,it.mining.hashrate.hashrate,3)+'">\n' +
                    '                        <div class="in_it" style="margin-left: 12px">\n' +
                    '                            <div class="t1">'+ss_h+'<small>'+ss_h_unit+'</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                    '                        </div>\n' +
                    '                        <div class="in_it">\n' +
                    '                            <div class="t1">'+p_h+'<small>'+ss_h_unit+'</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                    '                        </div>\n' +
                    '                        <div class="in_it" style="margin-right: 12px">\n' +
                    '                            <div class="t1">'+reject+'<small>%</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                    '                        </div>\n' +
                    '                    </div>\n' +
                    '                    <div class="GPU_list_wk">\n' +
                    '                        <div class="GPU_c">\n' +
                    '                            <div style="display: flex;">\n'
                $.each(it.hardware,function(ic,ix){
                    if(it.info.status=='online'){
                        let xhx=(ix.name+(ix.lock==0?0:1)+ix.type+it.mining.crypto)
                        let xq='col1'//col8
                        let mh_v=(ix.speed/viode_obj_speed[xhx]).toFixed(2)
                        mh_v<0.8?xq='col8':(ix.status=='idle'?xq='col4':xq='col1')
                        str+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+xq+'" data-bus="'+(ic+1)+'" class="bgk '+xq+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                    }else {
                        str+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+getWorkerState(ix.status,1,1)+'" data-bus="'+(ic+1)+'" class="bgk '+getWorkerState(ix.status,1,1)+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                    }
                })
                str+='                            </div>\n' +
                    '                        </div>\n' +
                    '                        <div class="v_wk">\n'
                if(v_obj.num>0){
                    str+='<div>'+v_obj.name+' ('+v_obj.num+')</div>\n'+
                        '<div> <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'
                }
                else{
                    str+='<div style="height:32px"></div>\n'+
                        '<div><span style="color: #ff564f;font-size: 16px"></span></div>\n'
                }

                str+= '                        </div>\n' +
                    '                    </div>\n'

                if(echartDom['cm'+it.info.id]==undefined){
                    id_list.push('cm'+it.info.id)
                    str+='<div><div class="echarts_wk" id="cm'+it.info.id+'">\n' +
                        _mx3('No Data') +
                        '</div></div>\n'
                }else {
                    str+=echartDom['cm'+it.info.id]
                }


                str+='<small style="position: absolute;bottom: 0px;transform: translate(-50%) scale(0.6);left: 50%" id="ver_'+it.info.id+'">'+it.info.version+'</small>'+
                    '</div>'

            }
        }


    })
    if(showAllList){
        $('.worker_list_all').html(str)
    }else {
        $('.worker_list').html(str)
    }

    // getWorkerDomShow()

    setFromData(worker_eachart,id_list)
}

function setEchrts(id,data,xz) {
   let x=id
    // console.log(document.getElementById(x))
    // console.log(x)
     let mxix=document.getElementById(x)
    if(mxix==null){
        return
    }
    if($(x).attr('_echarts_instance_')!=undefined){
        return;
    }
   // if(showEchartsDom(mxix,true)){
   if(1){
       let myChart= echarts.init(document.getElementById(x));
       var option = {
           backgroundColor: '#343d52',//背景色
           animation: false,
           grid:{
               left:'0px',
               right:'0px',
               top:'0px',
               bottom:'0px'
           },
           tooltip: {
               trigger: 'axis',
               backgroundColor:'#343d52',
               borderColor:'#343d52',

               textStyle: { // 提示框浮层的文本样式。
                   color: '#fff',
                   fontStyle: 'normal',
                   fontWeight: 'normal',
                   fontFamily: 'sans-serif',
                   fontSize: 14,
               },
               formatter: function(arg) {
                   let str='<div style="display: flex;justify-content: left;align-items: center">'+getData(arg[0].name,2)+'</div>'
                   $.each(arg,function (i,it) {
                       if(it.seriesName==_mxEc('hashrate')||it.seriesName==_mxEc('pool')){
                           str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+convertHashrate(speedToHash(it.value,'H'),'H/s')+'</div>'
                       }
                       // if(it.seriesName==_mxEc('latency')){
                       //     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'ms</div>'
                       // }
                       // if(it.seriesName==_mxEc('pow')){
                       //     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+wattOutput(it.value)+'</div>'
                       // }
                       // if(it.seriesName==_mxEc('fan')){
                       //     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'%</div>'
                       // }
                       // if(it.seriesName==_mxEc('temp')){
                       //     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'°C</div>'
                       // }
                       // if(it.seriesName==_mxEc('send')||it.seriesName==_mxEc('rejected')){
                       //     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'</div>'
                       // }
                   })
                   return str
               }
           },
           xAxis: {
               type: 'category',
               boundaryGap: false,
               data: xz
           },
           yAxis: {
               type: 'value',
               "splitLine": {     //网格线
                   "show": false
               },
           },
           series:data
       };
       // myChart.clear()
       myChart.setOption(option,true)
       // echartDom[id]='<div>'+$('#'+id).parent().html()+'</div>'
   }

}

//显示GPU信息弹窗
function showGPUwin(e) {
    let m=$(e)
    // console.log(m.attr('worker-id'))
    let dataV=[]
    let workerName=''

    $.each(workersListObj,function (i,it) {
        if(it.info.id==m.attr('worker-id')){
            dataV=it
            workerName=it.info.name
        }
    })

    let hot = dataV.info.hot
    let vhot = dataV.info.veryHot
    $('#w_name').html(workerName)
    $.each(dataV.hardware,function(i,it){
        if((i+1)==m.attr('data-bus')){
            $('#g_bh').html('#'+(i+1))
            if(it.name.indexOf('AMD Radeon')!=-1){
                it.name=it.name.split('AMD Radeon')[1]
            }
            if(it.name.indexOf('NVIDIA GeForce')!=-1){
                it.name=it.name.split('NVIDIA GeForce')[1]
            }
            if(it.name.indexOf('Laptop GPU')!=-1){
                it.name=it.name.replace('Laptop GPU','LG')
            }

            let name=it.name
            $('#g_typ').html(name)
            $('#g_wd').html(it.temp)
            $('#g_wd').css('color',getHot(it.temp,hot,vhot))
            $('#g_wd_u').css('color',getHot(it.temp,hot,vhot))
            $('#g_sl').html(Math.ceil(it.speed))
            $('#g_js').html(Math.ceil(it.poolspeed))
            if((it.reject+it.accept)>0){
                $('#jjl').html((it.reject/(it.reject+it.accept)*100).toFixed(2))
            }else{
                $('#jjl').html(0)
            }
            getGPUItemInfo(m.attr('worker-id'),(i+1))
        }
    })
    $('#GPU_Win').show()
    $('#vxc_bg').addClass(m.attr('colorBG'))
    $('.popupbackground').fadeIn()
    event.stopPropagation()
}
//关闭GPU信息窗口
function closeGPUwin() {
    $('#GPU_Win').hide()
    $('#g_bh').html('')
    $('#g_typ').html('')
    $('#g_wd').html('')
    $('#g_sl').html('')
    $('#g_js').html('')
    $('#jjl').html('')
    $('#win_echatrs').html( _mx3('No Data'))
    $('.popupbackground').fadeOut()
}

$('.popupbackground').on('click',function () {
    $('.popup').hide()
    $('.popupbackground').fadeOut()
    closeGPUwin()
    clickCloseWin()
    closeEd()
})
var echart_state=false
//获取场所机器ID
function getWorkerList(id,type) {
    $.ajax({
        url:'query?WORKERS2',
        // url:'/worker_txt.json',
        data:{
            WORKERS2NID:id=='allsite'?undefined:id,
        },
        dataType:'json',
        type:'post',
        success:function (res) {
            if(res.WORKERS2.length===0){
                $('#data_wk_label').hide()
            }
            $('#shua_x_list').removeClass('dis')
            viode_obj_speed = maxListObje(res.WORKERS2)
            listErrGPU=[]
            if(listShowType==1){
                if(type==1){
                    workersListObj=res.WORKERS2
                    getEachartData(id)
                    setList()
                }else{
                    echart_state=false
                    workersListObjIn=res.WORKERS2
                    $.each(workersListObj,function(i,it){
                        let x=0
                        $.each(workersListObjIn,function(j,k){
                            if(it.info.id==k.info.id){
                                x=1
                            }
                        })
                        if(!x){
                            $('#w_'+it.info.id)[0].remove()
                            echart_state=true
                        }
                    })
                    //深度复制
                    workersListObj=JSON.parse(JSON.stringify(workersListObjIn))
                    setList(1)
                    // setIntDom()
                }
            }else {
                getGPUEachar(id)
                setVoideListObj(res.WORKERS2,type)
            }
            setVcListItem()
            setErrMsgBox()
            let mzh=$('.sort_wk_X').height()+$('.sort_wk').height()+$('.msg_err_tile_wk').height()
            $('#list_card').css('max-height','calc(100vh + '+mzh+'px)')
            $('.bmx_scorll').css('max-height',$('#list_card').height())
        }
    })
}

var clickGPUList=[]
var list_ver_item=[]
//设置显卡类型选项和版本数据对象
function setVcListItem() {
    $.each(workersListObj,function (i,it) {
        $.each(it.hardware,function (j,k) {
            let namex=k.name
            if(namex.indexOf('NVIDIA GeForce')!=-1){
                namex=namex.split('NVIDIA GeForce')[1]
            }
            if(namex.indexOf('AMD Radeon')!=-1){
                namex=namex.split('AMD Radeon')[1]
            }
            if(namex.indexOf('Laptop GPU')!=-1){
                namex=namex.replace('Laptop GPU','LG')
            }
            if(JSON.stringify(list_type_item).indexOf(JSON.stringify({name:k.name,show:namex,type:'GPU'}))==-1){

                list_type_item.unshift({name:k.name,show:namex,type:'GPU'})
            }
        })
        if(JSON.stringify(list_ver_item).indexOf(JSON.stringify({name:it.info.version,show:it.info.version,type:'ver'}))==-1&&it.info.version!==''){
            list_ver_item.push({name:it.info.version,show:it.info.version,type:'ver'})
        }
    })
    let str="<div class=\"my_icon_x ocmx\"></div>"
    $.each(list_type_item,function (i,it) {
        if(document.getElementById(it.name)==null){
            str+='<div class="Tab_type_v" id="'+it.name+'" type="'+it.type+'">'+it.show+'</div>'
        }else {
            str+=document.getElementById(it.name).outerHTML
        }
    })
    // let str_se='<select id="ver_id_select" style="width: 120px;height: 36px;margin-top: 10px;margin-bottom: 0"><option value="-1" >'+_mx('all version')+'</option>'

    // str_se+='</select>'
    select_ver=_mx('all version')
    let str_se='<div class="select_wk_ix">' +
                    '<div class="text_bl">'+_mx('all version')+'</div>' +
                    '<div class="icon_select"></div>' +
                    '<div class="list_ver"><div class="ver_item">'+_mx('all version')+'</div>'
    list_ver_item.sort(function (a,b) {
        return a.name.localeCompare(b.name,'zh-CN')
    })

    $.each(list_ver_item,function (i,it) {
        str_se+='<div class="ver_item">'+it.name+'</div>'
    })
    str_se+='</div></div>'
    str+=str_se
    $('.sort_wk_X').html(str)
    $('.sort_wk_X').show()
    $('.Tab_type_v').on('click',function () {
        if($(this).hasClass('isType')){
            $(this).removeClass('isType')
        }else {
            $(this).addClass('isType')
        }
        $('#worker_list_wk_X')[0].scrollTop=0
        $('.worker_list_all')[0].scrollTop=0
        listShowType==1?setList():setVlist()
    })
    $('.select_wk_ix').on('click',function () {

        if($('.list_ver').is(':visible')){
            $('.list_ver').slideUp(100)
        }else {
            $('.list_ver').slideDown(100)
        }
    })
    $('.ver_item').on('click',function () {
        if($(this).html()===select_ver){
            return
        }
        $('.text_bl').html($(this).html())
        select_ver=$(this).html()
        $('#worker_list_wk_X')[0].scrollTop=0
        $('.worker_list_all')[0].scrollTop=0
        listShowType==1?setList():setVlist()
    })
}

function setErrMsgBox() {
    if(listErrGPU.length==0){
        $('.msg_err_tile_wk').hide()
        return
    }
    if(listShowType==1){
        let objList={}
        $.each(listErrGPU,function (i,it) {
            if(it.status!=='offline'){
                if(objList[it.nid]==undefined){
                    objList[it.nid]=[it]
                }else {
                    objList[it.nid].push(it)
                }
            }
        })
        let str='<div class="msg_tile">您的显卡风扇已经停止工作，为了避免显卡损坏，请检查设备</div>'
        $.each(objList,function (i,it) {
            str+='<div class="msg_site">'+getSiteName(i)+':'
            $.each(it,function (x,z) {
                str+='<span class="msg_err_item" onclick="clickOpenWin('+z.id+',\''+z.name+'\',\''+z.status+'\','+i+')">'+z.name+'  </span>'
            })
            str+='</div>'
        })
        $('.msg_err_tile_wk').html(str)
    }else {
        let objList={}
        let Vlist={}
        $.each(listErrGPU,function (i,it) {
           if(it.w_state!=='offline'){
               if(objList[it.nid]==undefined){
                   objList[it.nid]=[it]
                   Vlist[it.nid]=[it.w_name]
               }else {
                   if(Vlist[it.nid].indexOf(it.name)==-1){
                       objList[it.nid].push(it)
                       Vlist[it.nid].push(it.w_name)
                   }
               }
           }
        })
        let str='<div class="msg_tile">'+_mx('To avoid damage to your graphics card, please check that your graphics card has stopped working')+'</div>'
        $.each(objList,function (i,it) {
            str+='<div class="msg_site">'+getSiteName(i)+':'
            $.each(it,function (x,z) {
                str+='<span class="msg_err_item" onclick="clickOpenWin('+z.w_id+',\''+z.w_name+'\',\''+z.w_state+'\','+i+')">'+z.w_name+'  </span>'
            })
            str+='</div>'
        })
        $('.msg_err_tile_wk').html(str)
    }
    $('.msg_err_tile_wk').show()
}
function getSiteName(id) {
    let name=id
    $.each(siteListObj,function (i,it) {
        if(it.id==id){
            name=it.name
        }
    })
    return name
}
//获取电脑计算数据
function getEachartData(id) {
    if(id==undefined&&id!='allsite'){
        id=select_site_id
    }
    $.ajax({
        url:'query?STATISTIC,STATISTICHR,STATISTICPHR',
        // url:'/worker_data.json',
        async:false,
        data:{
            STATISTICNID:id=='allsite'?undefined:id,
        },
        dataType:'json',
        type:'post',
        success:function (res) {
            let obj={}
            if(id=='allsite'){
                $.each(res.STATISTIC,function (i,it) {
                    $.extend(obj, res.STATISTIC[i]);
                })
                worker_eachart=obj
            }else {
                worker_eachart=res.STATISTIC[id]
            }

            // worker_eachart=res.STATISTIC[8]
        }
    })
}

//获取显卡数据
function getGPUEachar(id) {
    if(id==undefined&&id!='allsite'){
        id=select_site_id
    }
    $.ajax({
        url:'/QUERY?STATISTICVDOS',
        // url:'/worker_data.json',
        async:false,
        data:{
            STATISTICVDOSNID:id=='allsite'?undefined:id,
        },
        dataType:'json',
        type:'post',
        success:function (res) {
            let obj={}
            if(id=='allsite'){
                $.each(res.STATISTICVDOS,function (i,it) {
                    $.extend(obj, res.STATISTICVDOS[i]);
                })
                worker_eachart=obj
            }else {
                worker_eachart=res.STATISTICVDOS[id]
            }

            // worker_eachart=res.STATISTIC[8]
        }
    })
}

//排序过滤（机器）
function setList(typeOne){
    filterObj=workersListObj
    let gpu_list=[]
    let ver_list=[]
    $.each($('.Tab_type_v.isType'),function (i,it) {
        if($(it).attr('type')=='GPU'){
            gpu_list.push($(it).attr('id'))
        }
    })

    if(sortType=='2'){
        filterObj.sort(function (row1,row2) {
            if(descAndAsc=='1'){
                var a=row1.info.onlineTime
                var b=row2.info.onlineTime
            }else if(descAndAsc=='2'){
                var b=row1.info.onlineTime
                var a=row2.info.onlineTime
            }
            if (a > b) return 1;
            else if (a < b) return -1;
            return 0;
        })
    }
    filterObj.sort(function(row1,row2){
         switch (sortType) {
             case "1":
                 if(descAndAsc=='1'){
                     var a=row1.info.name
                     var b=row2.info.name
                 }else if(descAndAsc=='2'){
                     var b=row1.info.name
                     var a=row2.info.name
                 }
                 break
             case "2":
                 if(descAndAsc=='1'){
                     var a=getWorkerState(row1.info.status,row1.mining.hashrate.hashrate,4)
                     var b=getWorkerState(row2.info.status,row2.mining.hashrate.hashrate,4)
                 }else if(descAndAsc=='2'){
                     var b=getWorkerState(row1.info.status,row1.mining.hashrate.hashrate,4)
                     var a=getWorkerState(row2.info.status,row2.mining.hashrate.hashrate,4)
                 }

                 break
             case "3":
                 if(descAndAsc=='1'){
                     var a=row1.mining.hashrate.hashrate
                     var b=row2.mining.hashrate.hashrate
                 }else if(descAndAsc=='2'){
                     var b=row1.mining.hashrate.hashrate
                     var a=row2.mining.hashrate.hashrate
                 }

                 break
             case "4":
                 if(descAndAsc=='1'){
                     var a=-1
                     var b=-1
                     if(row1.hardware.length>0){
                         a=row1.hardware[0].temp
                     }
                     if(row2.hardware.length>0){
                         b=row2.hardware[0].temp
                     }
                 }else if(descAndAsc=='2'){
                     var a=-1
                     var b=-1
                     if(row1.hardware.length>0){
                         b=row1.hardware[0].temp
                     }
                     if(row2.hardware.length>0){
                         a=row2.hardware[0].temp
                     }
                 }
                 break
             case "5":
                 if(descAndAsc=='1'){
                     var a=row1.info.onlineTime
                     var b=row2.info.onlineTime
                 }else if(descAndAsc=='2'){
                     var b=row1.info.onlineTime
                     var a=row2.info.onlineTime
                 }
                 break
         }
        if(sortType=='1'){
            return a.localeCompare(b,'zh-CN')
        }
        if (a > b) return 1;
        else if (a < b) return -1;
        return 0;
    })

    $.each(filterObj,function (i,it) {
        errGPUFilter(it,0)
    })

    if(workerNameSearch!=''||search_type_list.length>0||gpu_list.length>0||select_ver!=_mx('all version')){
        if(search_type_list.length>0){
            let mx=[]
           $.each(filterObj,function (i,it) {
                if(search_type_list.indexOf(it.info.status)!=-1){
                    mx.push(it)
                }
           })
           filterObj=mx
       }

       if(workerNameSearch!=''){
           let mx=[]
           $.each(filterObj,function (i,it) {
               if(it.info.name.toLowerCase().indexOf(workerNameSearch)!=-1){
                   mx.push(it)
               }
           })
           filterObj=mx
       }

       if(gpu_list.length>0){
           let mx=[]

           $.each(filterObj,function (i,it) {
               let xsz=false
                $.each(it.hardware,function (j,k) {
                    if(gpu_list.indexOf(k.name)!=-1){
                      xsz=true
                    }
                })
               if(xsz){
                   mx.push(it)
               }
           })
           filterObj=mx
       }
       if(select_ver!=_mx('all version')){
           let mx=[]
           $.each(filterObj,function (i,it) {
               if(it.info.version==select_ver){
                   mx.push(it)
               }
           })
           filterObj=mx
       }

    }else {
        filterObj=workersListObj
    }
    $('.worker_list_wk_X_heax').css('height',Math.ceil(filterObj.length/sizeNum)*item_hegith+'px')
    $('.worker_wb_r div').css('height',Math.ceil(filterObj.length/sizeNum)*item_hegith+'px')
    if(filterObj.length>0){
        showAllList=false
        $('#worker_list_wk_X').show()
        $('.worker_list_all').hide()
    }else {
        $('#worker_list_wk_X').hide()
        $('.worker_list_all').show()
        showAllList=true
    }
    if(typeOne==undefined){
        $('.worker_list').css('transform','translateY(0px)')
        setWorkerListDom(filterObj)
    }else {
        setIntDom()
    }
}

//排序过滤（显卡）
function setVlist(typeOne) {
    filterObj=viode_obj_list
    let gpu_list=[]
    let ver_list=[]
    $.each($('.Tab_type_v.isType'),function (i,it) {
        if($(it).attr('type')=='GPU'){
            gpu_list.push($(it).attr('id'))
        }
    })
    $.each(filterObj,function (i,it) {
        errGPUFilter(it,1)
    })
    filterObj.sort(function (row1,row2) {
        switch (sortType) {
            case "1":
                if(descAndAsc=='1'){
                    var a=row1.w_name
                    var b=row2.w_name
                }else if(descAndAsc=='2'){
                    var b=row1.w_name
                    var a=row2.w_name
                }
                break
            case "2":
                if(descAndAsc=='1'){
                    var a=getWorkerState(row1.w_state,row1.speed,4)
                    var b=getWorkerState(row2.w_state,row2.speed,4)
                }else if(descAndAsc=='2'){
                    var b=getWorkerState(row1.w_state,row1.speed,4)
                    var a=getWorkerState(row2.w_state,row2.speed,4)
                }

                break
            case "3":
                if(descAndAsc=='1'){
                    var a=row1.speed
                    var b=row2.speed
                }else if(descAndAsc=='2'){
                    var b=row1.speed
                    var a=row2.speed
                }
                break
            case "4":
                if(descAndAsc=='1'){
                    var a=-1
                    var b=-1
                    a=row1.temp
                    b=row2.temp
                }else if(descAndAsc=='2'){
                    var a=-1
                    var b=-1
                    b=row1.temp
                    a=row2.temp

                }
                break
            case "5":
                if(descAndAsc=='1'){
                    var a=row1.time
                    var b=row2.time
                }else if(descAndAsc=='2'){
                    var b=row1.time
                    var a=row2.time
                }
                break
        }
        if(sortType=='1'){
            return a.localeCompare(b,'zh-CN')
        }
        if (a > b) return 1;
        else if (a < b) return -1;
        return 0;
    })

    if(workerNameSearch!=''||search_type_list.length>0||gpu_list.length>0||select_ver!=_mx('all version')){
        if(search_type_list.length>0){
            let mx=[]
            $.each(filterObj,function (i,it) {
                if(search_type_list.indexOf(it.w_state)!=-1){
                    mx.push(it)
                }
            })
            filterObj=mx
        }
        if(workerNameSearch!=''){
            let mx=[]
            $.each(filterObj,function (i,it) {
                if(it.w_name.toLowerCase().indexOf(workerNameSearch)!=-1){
                    mx.push(it)
                }
            })
            filterObj=mx
        }

        if(gpu_list.length>0||ver_list.length>0){
            let mx=[]
            $.each(filterObj,function (i,it) {
                if(gpu_list.indexOf(it.name)!=-1){
                    mx.push(it)
                }
            })
            filterObj=mx
        }

        if(select_ver!=_mx('all version')){
            let mx=[]
            $.each(filterObj,function (i,it) {
                if(it.version==select_ver){
                    mx.push(it)
                }
            })
            filterObj=mx
        }
    }else {
        filterObj=viode_obj_list
    }
    $('.worker_list_wk_X_heax').css('height',Math.ceil(filterObj.length/sizeNum)*item_hegith+'px')
    $('.worker_wb_r div').css('height',Math.ceil(filterObj.length/sizeNum)*item_hegith+'px')
    if(filterObj.length>0){
        showAllList=false
        $('#worker_list_wk_X').show()
        $('.worker_list_all').hide()
    }else {
        $('#worker_list_wk_X').hide()
        $('.worker_list_all').show()
        showAllList=true
    }
    if(typeOne==undefined){
        $('.worker_list').css('transform','translateY(0px)')
        setVoidList(filterObj)
    }else {
        setIntDomGPU()
    }
}
//机器状态获取
function getWorkerState(type,vax,h){
     switch(type){
         case 'normal':
             return 'col1'
         case 'offline':
             if(h==1){
                return 'col5'
             }else if(h==2){
                return _mx('Offline')
             }else if(h==3){
                // return 'col55'
                return 'col5'
             }else if(h==4){
                 return 8
             }
         case 'online':
            if(h==1){
                return 'col1'
             }else if(h==2){
                return _mx('Normal')
             }else if(h==3){
                return 'col1'
                // return 'col11'
             }else if(h==4){
                return 1
            }
         case 'anyhowmining':
            if(h==1){
                return 'col2'
             }else if(h==2){
                return _mx('Part work')
             }else if(h==3){
                return 'col2'
                // return 'col22'
             }else if(h==4){
                return 3
            }
        case 'anyhow_idle':
            if(h==1){
                return 'col3'
             }else if(h==2){
                return _mx('Occupied')
             }else if(h==3){
                return 'col3'
                // return 'col33'
             }else if(h==4){
                return 2
            }
         case 'disable':
            if(h==1){
                return 'col6'
             }else if(h==2){
                return _mx('MNF')
             }  else if(h==3){
                return 'col6'
                // return 'col66'
             }else if(h==4){
                return 4
            }
         case 'unable':
            if(h==1){
                return 'col7'
             }else if(h==2){
                return _mx('UAM')
             } else if(h==3){
                return 'col7'
                // return 'col77'
             }else if(h==4){
                return 5
            }
        case 'idle':
            if(h==1){
                return 'col4'
             }else if(h==2){
                return _mx('Idle')
             } else if(h==3){
                return 'col4'
                // return 'col44'
             }else if(h==4){
                return 5
            }
        case 'starting':
            if(h==1){
                return 'col4'
             }else if(h==2){
                return _mx('starting')
             } else if(h==3){
                return 'col4'
                // return 'col44'
             }else if(h==4){
                return 5
            }
        case 'abnormal':
            if(h==1){
                return 'col8'
             }else if(h==2){
                return _mx('Abnormal')
             } else if(h==3){
                return 'col8'
                // return 'col44'
             }else if(h==4){
                return 7
            }
         default :
             if(h==1){
                 return 'col5'
             }else if(h==2){
                 return _mx('Offline')
             }else if(h==3){
                 return 'col5'
                 // return 'col55'
             }else if(h==4){
                 return 8
             }
     }
}


var listErrGPU=[]
//故障显卡过滤
function errGPUFilter(data,type) {
    let errGPU=false
    if(type===0){
        $.each(data.hardware,function(i,it){
            if(it.temp>87&&it.fan==0){
                errGPU=true
            }
        })
        if(errGPU){
            listErrGPU.push(data.info)
        }
    }else {
        if(data.temp>87&&data.fan==0){
            errGPU=true
        }
        if(errGPU){
            listErrGPU.push(data)
        }
    }


}

//显卡分组
function getNumberV(data,hot,vhot){
  let obj={}
  let temp=0
  let tempC='#fff'

  $.each(data,function(i,it){
      if(obj[it.name+' '+it.type+(it.lock==0?'':' LHR')]==undefined){
          obj[it.name+' '+it.type+(it.lock==0?'':' LHR')]=1
      }else{
          obj[it.name]=obj[it.name]+1
      }
      if(it.temp>temp){
          temp=it.temp
      }
  })

  if(temp>=hot){
    tempC='#ffe14c'
  }
  if(temp>=vhot){
    tempC='#ff564f'
  }
  let str={
      name:'',num:0,temp:temp,tempC:tempC
  }
  $.each(obj,function(i,it){
      if(str.num<it){
          str.name=i
          str.num=it
      }
  })

  if(str.name.indexOf('NVIDIA GeForce')!=-1){
      str.name=str.name.split('NVIDIA GeForce')[1]
  }
  if(str.name.indexOf('AMD Radeon')!=-1){
      str.name=str.name.split('AMD Radeon')[1]
  }
  if(str.name.indexOf('Laptop GPU')!=-1){
      str.name=str.name.replace('Laptop GPU','LG')
  }
  return str
}

function getHot(num,hot,vhot){
    let tempC='#fff'
    if(num>=hot){
        tempC='#ffe14c'
      }
      if(num>=vhot){
        tempC='#ff564f'
      }
      return tempC
}

//获取天数
function getTime(num){
   let d=num/86400
   let h=num/60/60
   let m=parseInt(num/60)%60
   if(d>1){
       return d.toFixed(1)+_mx('d')
   }else if(h>1){
       return h.toFixed(1)+_mx('h')
   }else{
       return m.toFixed(1)+_mx('m')
   }
}

//生成显卡渲染对象
function setVoideListObj(data,type) {

    if(type==1){
        viode_obj_list=[]
        workersListObj=data
        $.each(workersListObj,function (i,it) {
            $.each(it.hardware,function (j,k) {
                k['w_state']=it.info.status
                k['w_name']=it.info.name
                k['w_id']=it.info.id
                k['version']=it.info.version
                k['h_id']=it.info.id+'_'+j
                k['w_hot']=it.info.hot
                k['w_vhot']=it.info.veryHot
                k['time']=it.info.onlineTime
                k['nid']=it.info.nid
                viode_obj_list.push(k)
            })
        })
        setVlist()
    }else {
        workersListObjIn=data
        let status=false
        let addList=[]
        $.each(workersListObj,function(i,it){
            let x=0
            $.each(workersListObjIn,function(j,k){
                if(it.info.id==k.info.id){
                    x=1
                }
            })
            if(!x){
                $('#w_'+it.info.id)[0].remove()
                status=true
            }
        })
        workersListObj=JSON.parse(JSON.stringify(workersListObjIn))
        let xmz=[]

        $.each(workersListObj,function (i,it) {
            $.each(it.hardware,function (j,k) {
                k['w_state']=it.info.status
                k['w_name']=it.info.name
                k['w_id']=it.info.id
                k['version']=it.info.version
                k['h_id']=it.info.id+'_'+j
                k['w_hot']=it.info.hot
                k['w_vhot']=it.info.veryHot
                k['time']=it.info.onlineTime
                k['nid']=it.info.nid
                xmz.push(k)
            })
        })
        viode_obj_list=xmz
        setVlist(1)
    }
}

//显卡数据实时渲染
function setIntDomGPU() {


    if($('#Woker_info_win').is(':visible')){
        $.each(workersListObj,function (i,it) {
            if(it.info.id==logMinId){
                clickItemMcObJ=it
            }
        })
    }
    let str=''
    let online_num=0
    let anyhowmining_num=0
    let anyhow_idle_num=0
    let idle_num=0
    let disable_num=0
    let unable_num=0
    let offline_num=0
    let abnormale_num=0
    let online_sum_all=0
    let anyhowmining_sum_all=0
    let id_list=[]
    $.each(viode_obj_list,function (i,it) {
        switch (it.w_state) {
            case 'offline':
                offline_num++
                break
            case 'online':
                online_num++
                online_sum_all+=it.speed
                break
            case 'anyhowmining':
                anyhowmining_num++
                anyhowmining_sum_all+=it.speed
                break
            case 'anyhow_idle':
                anyhow_idle_num++
                break
            case 'disable':
                disable_num++
                break
            case 'unable':
                unable_num++
                break
            case 'idle':
                idle_num++
                break
            case 'starting':
                idle_num++
                break
            case 'abnormal':
                abnormale_num++
                break
            default:
                offline_num++
                break
        }
    })
    $('#online_num').html(online_num)
    $('#anyhowmining_num').html(anyhowmining_num)
    $('#anyhow_idle_num').html(anyhow_idle_num)
    $('#idle_num').html(idle_num)
    $('#disable_num').html(disable_num)
    $('#offline_num').html(offline_num)
    $('#unable_num').html(unable_num)
    $('#abnormale_num').html(abnormale_num)
    $('#online_sum_all').html(convertHashrate(speedToHash((Math.ceil(online_sum_all)*1000*1000),'H'),'H','1'))
    $('#anyhowmining_sum_all').html(convertHashrate(speedToHash((Math.ceil(anyhowmining_sum_all)*1000*1000),'H'),'H','1'))
    let all_item_dom=$('.item_worker')
    $.each(all_item_dom,function (i,it) {
        let x=0
        $.each(filterObj,function (a,b) {
            if($(it).attr('id')=='v_it_'+b.h_id){
                x=1
                return
            }
        })
        if(x===0){
            $(it)[0].remove()
        }
    })
    $.each(filterObj,function (i,it) {
        if(showAllList){
            let reject=0
            if((it.reject+it.accept)>0){
                reject=(it.reject/(it.reject+it.accept)*100).toFixed(2)
            }else {
                reject=0
            }
            let v_obj=getNumberV([it],it.w_hot,it.w_vhot)
            if($('#v_it_'+it.h_id)[0]!=undefined){
                $('#v_it_'+it.h_id).attr('data-state',it.w_state)
                $('#v_it_'+it.h_id+' .item_head_wk').removeClass('col1 col2 col3 col4 col5 col6 col7 col8')
                $('#v_it_'+it.h_id+' .item_head_wk').addClass(getWorkerState(it.w_state,it.speed,1))
                $('#v_it_'+it.h_id+' .item_head_wk').html('<div class="t1" data-tooltip="'+it.name+'">'+(v_obj.name.length>9?v_obj.name.substring(0,9)+'..':v_obj.name)+'<div style="margin-left: 4px">('+getWorkerState(it.w_state,it.speed,2)+')</div></div><div class="t2">'+getTime(it.time)+'</div>\n')

                // $('#w_'+it.info.id+' .worker_h_info').removeClass('col11 col22 col33 col44 col55 col66 col77')
                $('#v_it_'+it.h_id+' .worker_h_info').removeClass('col1 col2 col3 col4 col5 col6 col7 col8')
                $('#v_it_'+it.h_id+' .worker_h_info').addClass(getWorkerState(it.w_state,it.speed,3))
                $('#v_it_'+it.h_id+' .worker_h_info').html('<div class="in_it" style="margin-left: 12px">\n' +
                    '                            <div class="t1">'+Math.ceil(it.speed)+'<small>MH</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                    '                        </div>\n' +
                    '                        <div class="in_it">\n' +
                    '                            <div class="t1">'+Math.ceil(it.poolspeed)+'<small>MH</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                    '                        </div>\n' +
                    '                        <div class="in_it" style="margin-right: 12px">\n' +
                    '                            <div class="t1">'+reject+'<small>%</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                    '                        </div>\n')
                let str_x='<div class="v_wk">'

                str_x+='<div style="font-size: 14px">'+it.w_name+'</div>\n'+
                        '<div>'+_mx2('Temp')+' <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'


                str_x+='</div>'

                $('#v_it_'+it.h_id+' .GPU_list_wk').html(str_x)
                $('#ver_'+it.h_id).html(it.version)
            }
        }else {
            if(hideDom<=i&&i<hideDom+showDom){
                let reject=0
                if((it.reject+it.accept)>0){
                    reject=(it.reject/(it.reject+it.accept)*100).toFixed(2)
                }else {
                    reject=0
                }
                let v_obj=getNumberV([it],it.w_hot,it.w_vhot)
                if($('#v_it_'+it.h_id)[0]!=undefined){
                    $('#v_it_'+it.h_id).attr('data-state',it.w_state)
                    $('#v_it_'+it.h_id+' .item_head_wk').removeClass('col1 col2 col3 col4 col5 col6 col7')
                    $('#v_it_'+it.h_id+' .item_head_wk').addClass(getWorkerState(it.w_state,it.speed,1))
                    $('#v_it_'+it.h_id+' .item_head_wk').html('<div class="t1" data-tooltip="'+it.name+'">'+(v_obj.name.length>9?v_obj.name.substring(0,9)+'..':v_obj.name)+'<div style="margin-left: 4px">('+getWorkerState(it.w_state,it.speed,2)+')</div></div><div class="t2">'+getTime(it.time)+'</div>\n')

                    // $('#w_'+it.info.id+' .worker_h_info').removeClass('col11 col22 col33 col44 col55 col66 col77')
                    $('#v_it_'+it.h_id+' .worker_h_info').removeClass('col1 col2 col3 col4 col5 col6 col7')
                    $('#v_it_'+it.h_id+' .worker_h_info').addClass(getWorkerState(it.w_state,it.speed,3))
                    $('#v_it_'+it.h_id+' .worker_h_info').html('<div class="in_it" style="margin-left: 12px">\n' +
                        '                            <div class="t1">'+Math.ceil(it.speed)+'<small>MH</small></div>\n' +
                        '                            <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                        '                        </div>\n' +
                        '                        <div class="in_it">\n' +
                        '                            <div class="t1">'+Math.ceil(it.poolspeed)+'<small>MH</small></div>\n' +
                        '                            <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                        '                        </div>\n' +
                        '                        <div class="in_it" style="margin-right: 12px">\n' +
                        '                            <div class="t1">'+reject+'<small>%</small></div>\n' +
                        '                            <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                        '                        </div>\n')
                    let str_x='<div class="v_wk">'
                    str_x+='<div style="font-size: 14px">'+it.w_name+'</div>\n'+
                        '<div>'+_mx2('Temp')+' <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'

                    str_x+='</div>'
                    $('#v_it_'+it.h_id+' .GPU_list_wk').html(str_x)
                    $('#ver_'+it.h_id).html(it.version)
                }
            }
        }

    })

}
//显卡列表生成
function setVoidList(data) {
    let str=''
    let online_num=0
    let anyhowmining_num=0
    let anyhow_idle_num=0
    let idle_num=0
    let disable_num=0
    let unable_num=0
    let offline_num=0
    let abnormale_num=0
    let online_sum_all=0
    let anyhowmining_sum_all=0
    let id_list=[]
    $.each(viode_obj_list,function (i,it) {
        switch (it.w_state) {
            case 'offline':
                offline_num++
                break
            case 'online':
                online_num++
                online_sum_all+=it.speed
                break
            case 'anyhowmining':
                anyhowmining_num++
                anyhowmining_sum_all+=it.speed
                break
            case 'anyhow_idle':
                anyhow_idle_num++
                break
            case 'disable':
                disable_num++
                break
            case 'unable':
                unable_num++
                break
            case 'idle':
                idle_num++
                break
            case 'starting':
                idle_num++
                break
            case 'abnormal':
                abnormale_num++
                break
            default:
                offline_num++
                break
        }
    })
    $('#online_num').html(online_num)
    $('#anyhowmining_num').html(anyhowmining_num)
    $('#anyhow_idle_num').html(anyhow_idle_num)
    $('#idle_num').html(idle_num)
    $('#disable_num').html(disable_num)
    $('#offline_num').html(offline_num)
    $('#unable_num').html(unable_num)
    $('#abnormale_num').html(abnormale_num)
    $('#online_sum_all').html(convertHashrate(speedToHash((Math.ceil(online_sum_all)*1000*1000),'H'),'H','1'))
    $('#anyhowmining_sum_all').html(convertHashrate(speedToHash((Math.ceil(anyhowmining_sum_all)*1000*1000),'H'),'H','1'))
    if(data.length==0){
        $('.worker_list').html(' <div style="margin-top: 120px;width: 100%">\n' +
            '                <div style="text-align: center;font-size: 20px" lang-data-ht="\'Site\' is not set for this user">'+_mx('No worker have been set up in the site')+'</div>\n' +
            '                <div onclick="downWinC()"  style="display: block;width: 150px;text-align: center;margin: 0 auto;margin-top: 20px" class="button blue" lang-data-ht="Click settings">'+_mx('Download client')+'</div>\n' +
            '            </div>')

        $('.worker_list_all').html(' <div style="margin-top: 120px;width: 100%">\n' +
            '                <div style="text-align: center;font-size: 20px" lang-data-ht="\'Site\' is not set for this user">'+_mx('No worker have been set up in the site')+'</div>\n' +
            '                <div onclick="downWinC()"  style="display: block;width: 150px;text-align: center;margin: 0 auto;margin-top: 20px" class="button blue" lang-data-ht="Click settings">'+_mx('Download client')+'</div>\n' +
            '            </div>')
        return
    }

    $.each(data,function (i,it) {
        let is_select='select_zzc'
        if(select_all_list.indexOf(it.w_id)!==-1){
            is_select='select_zzc is_s'
        }
        if(showAllList){
            let v_obj=getNumberV([it],it.w_hot,it.w_vhot)
            str+='<div class="item_worker" id="v_it_'+it.h_id+'" style="height: 220px"  onclick="clickOpenWin('+it.w_id+',\''+it.w_name+'\',\''+it.w_state+'\','+it.nid+')" data-name="'+it.w_name+'" data-state="'+it.w_state+'">' +
                '<div class="'+is_select+'" onclick="chckeWorker('+it.w_id+',this)">' +
                '<div class="select_wk">' +
                '<div class="img_g_x"></div>'+
                '</div>' +
                '</div>'+
                '                    <div class="item_head_wk '+getWorkerState(it.w_state,it.speed,1)+'"><div class="t1" data-tooltip="'+v_obj.name+'">'+(v_obj.name.length>9?v_obj.name.substring(0,9)+'..':v_obj.name)+'<div style="margin-left: 4px">('+getWorkerState(it.w_state,it.speed,2)+')</div></div><div class="t2">'+getTime(it.time)+'</div>\n' +
                '</div>\n' +
                '<div class="worker_h_info '+getWorkerState(it.w_state,it.speed,1)+'"><div class="in_it" style="margin-left: 12px">\n' +
                '      <div class="t1">'+Math.ceil(it.speed)+'<small>MH</small></div>\n' +
                '      <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                '  </div>\n' +
                '  <div class="in_it">\n' +
                '      <div class="t1">'+Math.ceil(it.poolspeed)+'<small>MH</small></div>\n' +
                '      <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                '  </div>\n' +
                '  <div class="in_it" style="margin-right: 12px">\n'
            if((it.reject+it.accept)>0){
                str+='<div class="t1">'+(it.reject/(it.reject+it.accept)*100).toFixed(2)+'<small>%</small></div>\n'
            }else {
                str+='<div class="t1">0<small>%</small></div>\n'
            }


            str+='      <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                '  </div>\n' +
                '</div>\n' +
                '<div class="GPU_list_wk">\n' +
                '<div class="v_wk">\n' +
                '<div style="font-size: 14px">'+it.w_name+'</div>\n'

            if(v_obj.num>0){
                str+= '<div>'+_mx2('Temp')+' <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'
            }
            else{
                str+='<div style="height:32px"></div>\n'+
                    '<div><span style="color: #ff564f;font-size: 16px"></span></div>\n'
            }

            str+='</div>\n' +
                '</div>'
            if(echartDom['cm'+it.h_id]==undefined){
                id_list.push('cm'+it.h_id)
                str+='<div><div class="echarts_wk" id="cm'+it.h_id+'">'+_mx3('No Data')+'</div></div>'
            }else {
                str+=echartDom['cm'+it.h_id]
            }


            str+= '<small style="position: absolute;bottom: 0px;transform: translate(-50%) scale(0.6);left: 50%" id="ver_'+it.w_id+'">'+it.version+'</small>' +
                // '<small style="position: absolute;bottom: 10px;transform: translate(-50%) scale(0.6);left: 50%">C002</small>' +
                '</div>'
        }else {
            if(hideDom<=i&&i<hideDom+showDom){
                let v_obj=getNumberV([it],it.w_hot,it.w_vhot)
                str+='<div class="item_worker" id="v_it_'+it.h_id+'" style="height: 220px"  onclick="clickOpenWin('+it.w_id+',\''+it.w_name+'\',\''+it.w_state+'\','+it.nid+')" data-name="'+it.w_name+'" data-state="'+it.w_state+'">' +
                    '<div class="'+is_select+'" onclick="chckeWorker('+it.w_id+',this)">' +
                    '<div class="select_wk">' +
                    '<div class="img_g_x"></div>'+
                    '</div>' +
                    '</div>'+
                    '   <div class="item_head_wk '+getWorkerState(it.w_state,it.speed,1)+'"><div class="t1" data-tooltip="'+v_obj.name+'">'+(v_obj.name.length>9?v_obj.name.substring(0,9)+'..':v_obj.name)+'<div style="margin-left: 4px">('+getWorkerState(it.w_state,it.speed,2)+')</div></div><div class="t2">'+getTime(it.time)+'</div>\n' +
                    '</div>\n' +
                    '<div class="worker_h_info '+getWorkerState(it.w_state,it.speed,1)+'"><div class="in_it" style="margin-left: 12px">\n' +
                    '      <div class="t1">'+Math.ceil(it.speed)+'<small>MH</small></div>\n' +
                    '      <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                    '  </div>\n' +
                    '  <div class="in_it">\n' +
                    '      <div class="t1">'+Math.ceil(it.poolspeed)+'<small>MH</small></div>\n' +
                    '      <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                    '  </div>\n' +
                    '  <div class="in_it" style="margin-right: 12px">\n'
                if((it.reject+it.accept)>0){
                    str+='<div class="t1">'+(it.reject/(it.reject+it.accept)*100).toFixed(2)+'<small>%</small></div>\n'
                }else {
                    str+='<div class="t1">0<small>%</small></div>\n'
                }


                str+='      <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                    '  </div>\n' +
                    '</div>\n' +
                    '<div class="GPU_list_wk">\n' +
                    '<div class="v_wk">\n' +
                    '<div style="font-size: 14px">'+it.w_name+'</div>\n'

                if(v_obj.num>0){
                    str+= '<div>'+_mx2('Temp')+' <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'
                }
                else{
                    str+='<div style="height:32px"></div>\n'+
                        '<div><span style="color: #ff564f;font-size: 16px"></span></div>\n'
                }

                str+='</div>\n' +
                    '</div>'
                if(echartDom['cm'+it.h_id]==undefined){
                    id_list.push('cm'+it.h_id)
                    str+='<div><div class="echarts_wk" id="cm'+it.h_id+'">'+_mx3('No Data')+'</div></div>'
                }else {
                    str+=echartDom['cm'+it.h_id]
                }


                str+= '<small style="position: absolute;bottom: 0px;transform: translate(-50%) scale(0.6);left: 50%" id="ver_'+it.w_id+'">'+it.version+'</small>' +
                    // '<small style="position: absolute;bottom: 10px;transform: translate(-50%) scale(0.6);left: 50%">C002</small>' +
                    '</div>'
            }
        }
    })
    if(showAllList){
        $('.worker_list_all').html(str)
    }else {
        $('.worker_list').html(str)
    }
    setFromData(worker_eachart,id_list)
}


//定时器渲染机器节点
function setIntDom(){

    let addList=[]
    if($('#Woker_info_win').is(':visible')){
        $.each(workersListObj,function (i,it) {
            if(it.info.id==logMinId){
                clickItemMcObJ=it
            }
        })
    }
    let online_num=0
    let anyhowmining_num=0
    let anyhow_idle_num=0
    let idle_num=0
    let disable_num=0
    let unable_num=0
    let offline_num=0
    let abnormale_num=0
    let online_sum_all=0
    let anyhowmining_sum_all=0
    $.each(workersListObj,function (i,it) {
        switch (it.info.status) {
            case 'offline':
                offline_num++
                break
            case 'online':
                online_num++
                online_sum_all+=it.mining.hashrate.hashrate
                break
            case 'anyhowmining':
                anyhowmining_num++
                anyhowmining_sum_all+=it.mining.hashrate.hashrate
                break
            case 'anyhow_idle':
                anyhow_idle_num++
                break
            case 'disable':
                disable_num++
                break
            case 'unable':
                unable_num++
                break
            case 'idle':
                idle_num++
                break
            case 'starting':
                idle_num++
                break
            case 'abnormal':
                abnormale_num++
                break
            default:
                offline_num++
                break
        }
    })
    $('#online_num').html(online_num)
    $('#anyhowmining_num').html(anyhowmining_num)
    $('#anyhow_idle_num').html(anyhow_idle_num)
    $('#idle_num').html(idle_num)
    $('#disable_num').html(disable_num)
    $('#offline_num').html(offline_num)
    $('#unable_num').html(unable_num)
    $('#abnormale_num').html(abnormale_num)
    $('#online_sum_all').html(convertHashrate(speedToHash((Math.ceil(online_sum_all)*1000*1000),'H'),'H','1'))
    $('#anyhowmining_sum_all').html(convertHashrate(speedToHash((Math.ceil(anyhowmining_sum_all)*1000*1000),'H'),'H','1'))
    let all_item_dom=$('.item_worker')
    $.each(all_item_dom,function (i,it) {
        let x=0
        $.each(filterObj,function (a,b) {
            if($(it).attr('id')=='w_'+b.info.id){
               x=1
               return
            }
        })
        if(x===0){
            $(it)[0].remove()
        }
    })
    $.each(filterObj,function(i,it){
        //实时算力
        let ss_h=Math.ceil(it.mining.hashrate.hashrate)
        let ss_h_unit=it.mining.hashrate.hashrate_unit
        //矿池算力
        let p_h=Math.ceil(it.mining.hashrate.poolspeed)
        //拒绝率
        let reject=0
        if((it.mining.shares.accepted_share+it.mining.shares.rejected_share)>0){
            reject= (it.mining.shares.rejected_share/(it.mining.shares.accepted_share+it.mining.shares.rejected_share)*100).toFixed(2)
        }
        let v_obj=getNumberV(it.hardware,it.info.hot,it.info.veryHot)
            if($('#w_'+it.info.id)[0]!=undefined){
                $('#w_'+it.info.id).attr('data-state',it.info.status)
                $('#w_'+it.info.id+' .item_head_wk').removeClass('col1 col2 col3 col4 col5 col6 col7')
                $('#w_'+it.info.id+' .item_head_wk').addClass(getWorkerState(it.info.status,it.mining.hashrate.hashrate,1))
                $('#w_'+it.info.id+' .item_head_wk').html('<div class="t1" data-tooltip="'+it.info.name+'">'+(it.info.name.length>9?it.info.name.substring(0,6)+'..':it.info.name)+'<div style="margin-left: 4px">('+getWorkerState(it.info.status,it.mining.hashrate.hashrate,2)+')</div></div><div class="t2">'+getTime(it.info.onlineTime)+'</div>\n')

                // $('#w_'+it.info.id+' .worker_h_info').removeClass('col11 col22 col33 col44 col55 col66 col77')
                $('#w_'+it.info.id+' .worker_h_info').removeClass('col1 col2 col3 col4 col5 col6 col7')
                $('#w_'+it.info.id+' .worker_h_info').addClass(getWorkerState(it.info.status,it.mining.hashrate.hashrate,3))
                $('#w_'+it.info.id+' .worker_h_info').html('<div class="in_it" style="margin-left: 12px">\n' +
                    '                            <div class="t1">'+ss_h+'<small>'+ss_h_unit+'</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                    '                        </div>\n' +
                    '                        <div class="in_it">\n' +
                    '                            <div class="t1">'+p_h+'<small>'+ss_h_unit+'</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                    '                        </div>\n' +
                    '                        <div class="in_it" style="margin-right: 12px">\n' +
                    '                            <div class="t1">'+reject+'<small>%</small></div>\n' +
                    '                            <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                    '                        </div>\n')

                var str_x='<div class="GPU_c">'+
                    '<div style="display: flex;">'
                    $.each(it.hardware,function(ic,ix){
                        if(it.info.status=='online'){
                            let xhx=(ix.name+(ix.lock==0?0:1)+ix.type+it.mining.crypto)
                            let xq='col1'//col8
                            let mh_v=(ix.speed/viode_obj_speed[xhx]).toFixed(2)
                            mh_v<0.8?xq='col8':(ix.status=='idle'?xq='col4':xq='col1')
                            // viode_obj_speed[xhx]-ix.speed>=2?xq='col8':(ix.status=='idle'?xq='col4':xq='col1')
                            str_x+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+xq+'" data-bus="'+(ic+1)+'" class="bgk '+xq+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                        }else {
                            str_x+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+getWorkerState(ix.status,1,1)+'" data-bus="'+(ic+1)+'" class="bgk '+getWorkerState(ix.status,1,1)+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                        }
                        // str_x+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+getWorkerState(ix.status,1,1)+'" data-bus="'+(ic+1)+'" class="bgk '+getWorkerState(ix.status,1,1)+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                    })
                str_x+='</div>'+
                    '</div>'+
                    '<div class="v_wk">'
                if(v_obj.num>0){
                    str_x+='<div>'+v_obj.name+' ('+v_obj.num+')</div>\n'+
                        '<div> <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'
                }
                else{
                    str_x+='<div style="height:32px"></div>\n'+
                        '<div><span style="color: #ff564f;font-size: 16px"></span></div>\n'
                }
                str_x+='</div>'
                // console.log(str_x)
                $('#w_'+it.info.id+' .GPU_list_wk').html(str_x)
                $('#ver_'+it.info.id).html(it.info.version)
            }
    })
    if(echart_state){
        getEachartData()
    }
}

//设置弹窗表格
function setWinEacharts(x,y,h,s) {
    let xmx=$('#win_eachrts .xm_e')[0]
    let myChart= echarts.init(xmx);
    let option={
        grid:{
            left:'10px',
            right:'10px',
            top:'40px',
            bottom:'20px'
        },
        tooltip: {
            trigger: 'axis',
            backgroundColor:'#343d52',
            borderColor:'#343d52',
            textStyle: { // 提示框浮层的文本样式。
                color: '#fff',
                fontStyle: 'normal',
                fontWeight: 'normal',
                fontFamily: 'sans-serif',
                fontSize: 14,
            },
            formatter: function(arg) {
                let str='<div style="display: flex;justify-content: left;align-items: center">'+getData(arg[0].name,2)+'</div>'
                $.each(arg,function (i,it) {
                  if(it.seriesName==_mxEc('hashrate')||it.seriesName==_mxEc('pool')||it.seriesName==_mxEc('devfee')){
                     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+convertHashrate(speedToHash(it.value,'H'),'H/s')+'</div>'
                  }
                  if(it.seriesName==_mxEc('latency')){
                     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'ms</div>'
                  }
                  if(it.seriesName==_mxEc('pow')){
                     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+wattOutput(it.value)+'</div>'
                  }
                  if(it.seriesName==_mxEc('fan')){
                     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'%</div>'
                  }
                  if(it.seriesName==_mxEc('temp')){
                     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'°C</div>'
                  }
                  if(it.seriesName==_mxEc('send')||it.seriesName==_mxEc('rejected')){
                     str+='<div style="display: flex;justify-content: left;align-items: center">'+it.marker+' '+it.seriesName+': '+it.value+'</div>'
                  }
                })
                return str
            }
        },
        legend: {
            top: 5,
            icon:'circle',
            formatter: [
                '{a|{name}}'
            ].join('\n'),
            selected:s,
            textStyle: {
                color:'#fff',
                fontSize:13,
                height: 8,
                rich: {
                    a: {
                        verticalAlign: 'bottom',
                    },
                }
            },
            data: h
        },
        xAxis: [
            {
                axisLabel: {
                    formatter: function (a) {
                        return getData(a,1);
                    }
                },
                type: 'category',
                data: x,
                boundaryGap:false,
            }
        ],
        yAxis: [
            {//第一个y轴位置在左侧
                position:'left',
                type : 'value',
                axisLabel: {
                    formatter: function () {
                        return "";
                    }
                },
                dispaly: "none",
                "axisLine": {       //y轴
                    "show": false
                },
                "axisTick": {       //y轴刻度线
                    "show": false
                },
                "splitLine": {     //网格线
                    lineStyle:{
                        'color':['#6e7079']
                    },
                    "show": false
                },
                display:'none',
            },
            {//第一个y轴位置在左侧
                position:'left',
                type : 'value',
                axisLabel: {
                    formatter: function () {
                        return "";
                    }
                },
                dispaly: "none",
                "axisLine": {       //y轴
                    "show": false
                },
                "axisTick": {       //y轴刻度线
                    "show": false
                },
                "splitLine": {     //网格线
                    lineStyle:{
                        'color':['#6e7079']
                    },
                    "show": false
                },
                display:'none',
            },
            {//第一个y轴位置在左侧
                position:'left',
                type : 'value',
                axisLabel: {
                    formatter: function () {
                        return "";
                    }
                },
                dispaly: "none",
                "axisLine": {       //y轴
                    "show": false
                },
                "axisTick": {       //y轴刻度线
                    "show": false
                },
                "splitLine": {     //网格线
                    lineStyle:{
                        'color':['#6e7079']
                    },
                    "show": false
                },
                display:'none',
            },
            {//第一个y轴位置在左侧
                position:'left',
                type : 'value',
                axisLabel: {
                    formatter: function () {
                        return "";
                    }
                },
                dispaly: "none",
                "axisLine": {       //y轴
                    "show": false
                },
                "axisTick": {       //y轴刻度线
                    "show": false
                },
                "splitLine": {     //网格线
                    lineStyle:{
                        'color':['#6e7079']
                    },
                    "show": false
                },
                display:'none',
            },
            {//第一个y轴位置在左侧
                position:'left',
                type : 'value',
                axisLabel: {
                    formatter: function () {
                        return "";
                    }
                },
                dispaly: "none",
                "axisLine": {       //y轴
                    "show": false
                },
                "axisTick": {       //y轴刻度线
                    "show": false
                },
                "splitLine": {     //网格线
                    lineStyle:{
                        'color':['#6e7079']
                    },
                    "show": false
                },
                display:'none',
            },
            {//第一个y轴位置在左侧
                position:'left',
                type : 'value',
                axisLabel: {
                    formatter: function () {
                        return "";
                    }
                },
                dispaly: "none",
                "axisLine": {       //y轴
                    "show": false
                },
                "axisTick": {       //y轴刻度线
                    "show": false
                },
                "splitLine": {     //网格线
                    lineStyle:{
                        'color':['#6e7079']
                    },
                    "show": false
                },
                display:'none',
            },
        ],
        series: y
    }
    myChart.setOption(option)
}

//列表数据整理
function setFromData(data,domList) {
    let obj={}
    let count=0
    // let datex=[]
    $.each(data,function (i,it) {
        if(domList.indexOf('cm'+i)!=-1){
            obj[i]=[]
            let datex=[]
            $.each(it,function (j,k) {
                count=0
                $.each(k,function (m,x) {
                    datex=[]
                    let y=[]
                    $.each(x,function (n,h) {
                        datex.push(n)
                        y.push(h)
                    })
                    // console.log(count++)
                    let name_x=''
                    if(m=='poolspeed'){
                        name_x='pool'
                    }else {
                        name_x=m
                    }
                    let xx={
                        name:_mxEc(name_x),
                        data: y,
                        type: 'line',
                        // symbol:'none',
                        showSymbol: false,
                        itemStyle: {
                            normal: {
                                color: color_list[count],
                                lineStyle:{
                                    width:1//设置线条粗细
                                }
                            }
                        },
                        areaStyle:{
                            normal:{
                                color:new echarts.graphic.LinearGradient(0,0,0,1,[
                                    {
                                        offset: 0,
                                        color:color_list[count]+'77'
                                    },{
                                        offset: 1,
                                        color:"rgba(75,199,212,0)"
                                    }
                                ])
                            }
                        },
                        smooth: true
                    }
                    count++
                    obj[i].push(xx)
                })
            })
            if(obj[i].length>0){
                setEchrts('cm'+i,obj[i],datex)
            }
        }
    })

}

//请求单张显卡数据
function getGPUItemInfo(wid,gid) {
   $.ajax({
       url:'/query?STATISTICVDO',
       dataType:'json',
       type:'post',
       data:{
           STATISTICVDOMID:wid,
           STATISTICVDOVIDX:gid
       },
       success:function (res) {
            let xz=[]
            let objy=[]
            let count=0
            $.each(res.STATISTICVDO[gid],function (i,it) {
                count=0
                $.each(it,function (j,k) {
                    let y=[]
                    xz=[]
                    $.each(k,function (m,x) {

                        y.push(x)
                        xz.push(m)
                    })
                    count++
                    let name_x=''
                    if(j=='poolspeed'){
                        name_x='pool'
                    }else {
                        name_x=j
                    }
                    let xx={
                        name:_mxEc(name_x),
                        data: y,
                        type: 'line',
                        // symbol:'none',
                        showSymbol: false,
                        itemStyle: {
                            normal: {
                                color: color_list[count],
                                lineStyle:{
                                    width:1//设置线条粗细
                                }
                            }
                        },
                        areaStyle:{
                            normal:{
                                color:new echarts.graphic.LinearGradient(0,0,0,1,[
                                    {
                                        offset: 0,
                                        color:color_list[count]+'77'
                                    },{
                                        offset: 1,
                                        color:"rgba(75,199,212,0)"
                                    }
                                ])
                            }
                        },
                        smooth: true
                    }
                    objy.push(xx)
                })
            })
           // $('#win_echatrs').html('暂无数据')
           $('#win_echatrs').remove()
           $('#GPU_Win .text').append('<div class="GPU_echart" id="win_echatrs">\n' +
               _mx3('No Data')+
               '            </div>')
           setEchrts('win_echatrs',objy,xz)
       }
   })
}

var cachex=undefined
var textLog=""
var isScrollLock=false
var lockNumbe=1
//获取弹窗软件日志数据
function getLogText() {
    $.ajax({
        url:`/softlog?mid=${logMinId}&cache=${cachex}`,
        dataType:'json',
        type:'post',
        success:function (res) {
            if(res.type=="wait"){
                $('#pre_win_1').html('无日志')
            }else if(res.type=="new"){
                let str=res.context.replace(/[<]/g,"&lt;").replace(/\r\n/g,"<br>")
                $('#pre_win_1').html(str)
                if($('#pre_win_1').is(':visible')){
                    $('#pre_win_1')[0].scrollTop= $('#pre_win_1')[0].scrollHeight
                }
            }else {
                let str=res.context.replace(/[<]/g,"&lt;").replace(/\r\n/g,"<br>")
                if($('#pre_win_1').is(':visible')){
                    if(getScrollState(1)){
                        $('#pre_win_1').append(str)
                        $('#pre_win_1')[0].scrollTop= $('#pre_win_1')[0].scrollHeight
                    }else {
                        $('#pre_win_1').append(str)
                        if(!isScrollLock){
                            isScrollLock=true
                            lockNumbe= setTimeout(function () {
                                $('#pre_win_1')[0].scrollTop= $('#pre_win_1')[0].scrollHeight
                                isScrollLock=false
                            },1000*60*3)
                        }
                    }
                }
            }
            cachex=res.cache
        }
    })
}

//获取核心日志数据
function minerlog() {
    $.ajax({
        url:`/minerlog?mid=${logMinId}&cache=${cachex}`,
        dataType:'json',
        type:'post',
        success:function (res) {
            if(res.type=="wait"){
                $('#pre_win_2').html('无日志')
            }else if(res.type=="new"){
                let str=res.context.replace(/[<]/g,"&lt;").replace(/\r\n/g,"<br>")
                $('#pre_win_2').html(str)
                if($('#pre_win_2').is(':visible')){
                    $('#pre_win_2')[0].scrollTop= $('#pre_win_2')[0].scrollHeight
                }
            }else {
                let str=res.context.replace(/[<]/g,"&lt;").replace(/\r\n/g,"<br>")
                if($('#pre_win_2').is(':visible')){
                    if(getScrollState(2)){
                        $('#pre_win_2').append(str)
                        $('#pre_win_2')[0].scrollTop= $('#pre_win_2')[0].scrollHeight
                    }else {
                        $('#pre_win_2').append(str)
                        if(!isScrollLock){
                            isScrollLock=true
                            lockNumbe= setTimeout(function () {
                                $('#pre_win_2')[0].scrollTop= $('#pre_win_2')[0].scrollHeight
                                isScrollLock=false
                            },1000*60*3)
                        }
                    }
                }
            }
            cachex=res.cache
        }
    })
}

//记录选中机器对象
var clickItemMcObJ={}
//开启大弹窗
function clickOpenWin(id,name,type,site_id) {
    if(select_all_item){
       return
    }
    logMinId=id
    $.each
    $.each(workersListObj,function (i,it) {
        if(it.info.id==id){
            clickItemMcObJ=it
        }
    })
    $('#Woker_info_win').attr('my-id',id)
    $('#Woker_info_win').show()
    let str=''
    if(site_id!==undefined){
        $.each(siteListObj,function (i,it) {
            if(it.id==Number(site_id)){
                str=name+' ('+it.name+')'
            }
        })
    }else {
        str=name
    }
    $('#inf_xxx').html(str)
    getOCdata()
    setOCTemp(site_id)
    $('.popupbackground').fadeIn()
    setClickWin(type,name)
    getInfoEachart(id)

}

//关闭大弹窗
function clickCloseWin() {
    $('#Woker_info_win').attr('my-id','')
    $('#Woker_info_win').hide()
    $('#all_oc_temp').hide()
    clearInterval(logInt)
    let list = $('#Woker_info_win .info_wkx .item')
    let xlist= $('#ha_wk .lav_ut .che_item input')
    $('#ha_wk').show()
    // $('#oc_worker').val('')
    $('#oc_setting').val('')
    $('#oc_temp').val('')
    $('#oc_auto').val('')
    $('#pre_win_1').hide()
    $('#pre_win_4').hide()
    $('#pre_win_4 pre').html('')
    $('#fiel_i_url').val('')
    $('#pre_win_2').hide()
    $('#pre_win_3').hide()
    $('#img_win').hide()
    $('.oc_wk').hide()
    $('#pre_win_1').html('')
    $('#pre_win_2').html('')
    $('#pre_win_3').html('')
    $('#oclink').attr('onclick','')
    $('#oc_name').val('')
    $('#power').val('')
    $('#temp').val('')
    $('#core').val('')
    $('#mem').val('')
    $('#mvolt').val('')
    $('#cvolt').val('')
    $('#fan').val('')
    $('#imgWin_1').val('#')
    $('#imgWin_2').show()
    $('#imgWin_1').hide()
    $('.clocktune_popup').hide()
    $('.fixed_frame').find('.powerlimit').val('');
    $('.fixed_frame').find('.coreclock').val('');
    $('.fixed_frame').find('.memoryclock').val('');
    $('.fixed_frame').find('.Mtemperature').val('');
    $('.fixed_frame').find('.Mvoltage').val('');
    $('.fixed_frame').find('.Cvoltage').val('');
    $('.fixed_frame').find('.fan').val('');
    $.each(xlist,function (i,it) {
        $(it).removeAttr('checked')
        if(i==0){
            $(it).attr('checked','checked')
        }
    })

    $.each(list,function (i,it) {
        $(it).removeClass('is_item')
        if(i==0){
            $(it).addClass('is_item')
        }
    })

    $('#win_eachrts').html('<div style="width: 100%;height: 100%" class="xm_e">\n' +
        _mx3('No Data') +
        '                </div>')
    $('.popupbackground').fadeOut()
}

//错误日志
function getLogErr() {
    $.ajax({
        url:`/errlog?mid=${logMinId}&cache=${cachex}`,
        dataType:'json',
        type:'post',
        success:function (res) {
            if(res.type=="wait"){
                $('#pre_win_3').html('无日志')
            }else if(res.type=="new"){
                let str=res.context.replace(/[<]/g,"&lt;").replace(/\r\n/g,"<br>")
                // let arrg=res.context.match(/\[(\d{4}.\d{2}.\d{2}.\d{2}.\d{2}.\d{2})\]/g)
                let arrg=res.context.match(/(\d{4}.\d{2}.\d{2}.\d{2}.\d{2}.\d{2})/g)
                $.each(arrg,function (i,it) {
                    str=str.replace(it,it+' <span style="color: #f2d87d">'+getDateDiff(it)+'</span>')
                })
                $('#pre_win_3').html(str)
                if($('#pre_win_3').is(':visible')){
                    $('#pre_win_3')[0].scrollTop= $('#pre_win_3')[0].scrollHeight
                }
            }else {
                let str=res.context.replace(/[<]/g,"&lt;").replace(/\r\n/g,"<br>")
                let arrg=res.context.match(/(\d{4}.\d{2}.\d{2}.\d{2}.\d{2}.\d{2})/g)
                $.each(arrg,function (i,it) {
                    str=str.replace(it,it+' <span style="color: #f2d87d">'+getDateDiff(it)+'</span>')
                })
                if($('#pre_win').is(':visible')){
                    if(getScrollState(3)){
                        $('#pre_win_3').append(str)
                        $('#pre_win_3')[0].scrollTop= $('#pre_win_3')[0].scrollHeight
                    }else {
                        $('#pre_win_3').append(str)
                        if(!isScrollLock){
                            isScrollLock=true
                            lockNumbe= setTimeout(function () {
                                $('#pre_win_3')[0].scrollTop= $('#pre_win_3')[0].scrollHeight
                                isScrollLock=false
                            },1000*60*3)
                        }
                    }
                }
            }
            cachex=res.cache
        }
    })
}

//判断滚动条是否到底
function getScrollState(num) {
    let scrollTop = $('#pre_win_'+num)[0].scrollTop;
    let scrollHeight = $('#pre_win_'+num)[0].scrollHeight;
    let windowHeight = $('#pre_win_'+num)[0].clientHeight;
    if( window.navigator.userAgent.indexOf('Edg/')>0){
        if(Math.ceil(scrollTop + windowHeight) == scrollHeight){
            return true
        }else {
            return false
        }
    }else {
        if(scrollTop + windowHeight == scrollHeight){
            return true
        }else {
            return false
        }
    }
}
//转换时间
function getDateDiff(time){
    let dateTimeStamp=new Date(time).getTime()
    var minute = 1000 * 60;
    var hour = minute * 60;
    var day = hour * 24;
    var halfamonth = day * 15;
    var month = day * 30;
    var now = new Date().getTime();
    var diffValue = now - dateTimeStamp;
    if(diffValue < 0){return;}
    var monthC =diffValue/month;
    var weekC =diffValue/(7*day);
    var dayC =diffValue/day;
    var hourC =diffValue/hour;
    var minC =diffValue/minute;
    if(monthC>=1){
        result="" + parseInt(monthC) + "月前";
    }
    else if(weekC>=1){
        result="" + parseInt(weekC) + "周前";
    }
    else if(dayC>=1){
        result=""+ parseInt(dayC) +"天前";
    }
    else if(hourC>=1){
        result=""+ parseInt(hourC) +"小时前";
    }
    else if(minC>=1){
        result=""+ parseInt(minC) +"分钟前";
    }else
        result="刚刚";
    return result;
}

//保存模板
function saveOcFrom() {
    $.ajax({
        url:'/config?a=set',
        type:'post',
        dataType:'json',
        data:{
            // minerConfig: $('#oc_worker').val(),
            setting: $('#oc_setting').val(),
            triggers: $('#oc_auto').val(),
            overclock: $('#oc_temp').val(),
            worker: logMinId,
        },
        success:function (res) {
            if(res.code==0){
                setMsgTc('suc',_mx('Submitted successfully'),3000)
            }else {
                setMsgTc('err',res.msg,3000)
            }
        }
    })
}
//模板创建对照对象
var userCreateTemp=undefined
//模板列表对象
var tempOcList=undefined
getTempUserLsit()
//模板创建对照对象列表
function getTempUserLsit() {
    $.ajax({
        url:'QUERY?SITE2',
        type:'get',
        dataType:'json',
        success:function (res) {
            userCreateTemp=res.SITE2

        }
    })
}
//获取模板列表
function getTempLsit() {
    $.ajax({
        url:'/query?overclock,overclockcfg,WORKERCONFIG,TRIGGERS,MINERCONFIG,ALLCFG',
        type:'get',
        dataType:'json',
        success:function (res) {
            tempOcList=res
        }
    })
}
//设置下拉
function setOCTemp(id) {
    // let str='<option selected="selected" value="0">No profile</option>'
    // $.each(tempOcList.MINERCONFIG,function (i,it) {
    //     $.each(userCreateTemp,function (j,k) {
    //         if(k.id==Number(id)&&k.uid==it.uid){
    //             str+='<option value="'+it.id+'">'+it.name+'</option>'
    //         }
    //     })
    // })
    // $('#oc_worker').html(str)

    str='<option selected="selected" value="0">No profile</option>'
    $.each(tempOcList.WORKERCONFIG,function (i,it) {
        $.each(userCreateTemp,function (j,k) {
            if(k.id==Number(id)&&k.uid==it.uid){
                str+='<option value="'+it.id+'">'+it.name+'</option>'
            }
        })
    })
    $('#oc_setting').html(str)

    str='<option selected="selected" value="0">No profile</option>'
    $.each(tempOcList.OVERCLOCK,function (i,it) {
        $.each(userCreateTemp,function (j,k) {
            if(k.id==Number(id)&&k.uid==it.uid){
                let name=it.video
                if(it.desc.length>0){
                    name+=' ('+it.desc+')'
                }
                if(it.maker.length>0){
                    name+=' ('+it.maker+')'
                }
                str+='<option value="'+it.id+'">'+name+'</option>'
            }
        })

    })
    $('#oc_temp').html(str)

    str='<option selected="selected" value="0">No profile</option>'
    $.each(tempOcList.TRIGGERS,function (i,it) {
        $.each(userCreateTemp,function (j,k) {
            if(k.id==Number(id)&&k.uid==it.uid){
                let name=it.name
                if(it.desc.length>0){
                    name+='('+it.desc+')'
                }
                str+='<option value="'+it.id+'">'+name+'</option>'
            }
        })

    })
    $('#oc_auto').html(str)
}

//获取模板配置
function getOCdata() {
  $.ajax({
      url:'/config?a=get',
      dataType:'json',
      type:'post',
      data:{
          worker:logMinId
      },
      success:function (res) {
          // $('#oc_worker').val(res.data.minerConfig.toString())
          $('#oc_setting').val(res.data.setting.toString())
          $('#oc_temp').val(res.data.overclock.toString())
          $('#oc_auto').val(res.data.triggers.toString())
          setOcListInfo()
      }
  })
}
//设置超频详情
function setOcListInfo() {
    $.each(tempOcList.OVERCLOCK,function (i,it) {
        if(it.id===Number($('#oc_temp').val())){
            $('#list_oc_pwd').html(it.nvidia.power)
            $('#list_oc_temp').html(it.nvidia.temp)
            $('#list_oc_core').html(it.nvidia.core)
            $('#list_oc_corev').html(it.nvidia.cvolt)
            $('#list_oc_mem').html(it.nvidia.mem)
            $('#list_oc_memv').html(it.nvidia.mvolt)
            $('#list_oc_fan').html(it.nvidia.fan)
        }
    })
}//设置超频详情
function setOcListInfox() {
    $.each(tempOcList.OVERCLOCK,function (i,it) {
        if(it.id===Number($('#oc_temp_all').val())){
            $('#list_oc_pwd_all').html(it.nvidia.power)
            $('#list_oc_temp_all').html(it.nvidia.temp)
            $('#list_oc_core_all').html(it.nvidia.core)
            $('#list_oc_corev_all').html(it.nvidia.cvolt)
            $('#list_oc_mem_all').html(it.nvidia.mem)
            $('#list_oc_memv_all').html(it.nvidia.mvolt)
            $('#list_oc_fan_all').html(it.nvidia.fan)
        }
    })
}

function toClickWinOpen(type) {
  switch (type) {
      // case 1:
      //     if($('#oc_worker').val()!='0'){
      //         window.open(`/config-templates/new2?id=${$('#oc_worker').val()}&s=edit`)
      //     }else {
      //         window.open(`/config-templates`)
      //     }
      //     break
      case 2:
          if($('#oc_setting').val()!='0'){
              window.open(`/site-config-tow-cl?id=${$('#oc_setting').val()}&s=edit`)
          }else {
              window.open(`/site-config-templates`)
          }
          break
      case 3:
          if($('#oc_temp').val()!='0'){
              window.open(`/clocktune/new#s=edit&id=${$('#oc_temp').val()}`)
          }else {
              window.open(`/clocktune`)
          }
          break
      case 4:
          if($('#oc_auto').val()!='0'){
              window.open(`/triggers?id=${$('#oc_auto').val()}`)
          }else {
              window.open(`/auto-templates`)
          }
          break
      // case 5:
      //     if($('#oc_worker_all').val()!='0'){
      //         window.open(`/config-templates/new2?id=${$('#oc_worker').val()}&s=edit`)
      //     }else {
      //         window.open(`/config-templates`)
      //     }
      //     break
      case 6:
          if($('#oc_setting_all').val()!='0'){
              window.open(`/site-config-tow-cl?id=${$('#oc_setting').val()}&s=edit`)
          }else {
              window.open(`/site-config-templates`)
          }
          break
      case 7:
          if($('#oc_temp_all').val()!='0'){
              window.open(`/clocktune/new#s=edit&id=${$('#oc_temp').val()}`)
          }else {
              window.open(`/clocktune`)
          }
          break
      case 8:
          if($('#oc_auto_all').val()!='0'){
              window.open(`/triggers?id=${$('#oc_auto').val()}`)
          }else {
              window.open(`/auto-templates`)
          }
          break
  }
}

var logInt=0
//label栏方法执行

function clickFunction(type) {
        switch (type) {
            case '1':
                $('#ha_wk').show()
                $('.oc_wk').hide()
                $('#pre_win_1').hide()
                $('#pre_win_2').hide()
                $('#pre_win_3').hide()
                $('#pre_win_4').hide()
                $('#img_win').hide()
                break
            case '2':
                $('.oc_wk').show()
                $('#ha_wk').hide()
                $('#pre_win_1').hide()
                $('#pre_win_2').hide()
                $('#pre_win_3').hide()
                $('#img_win').hide()
                $('#pre_win_4').hide()
                break
            case '3':
                clearInterval(logInt)
                $('#pre_win_1').show()
                $('.oc_wk').hide()
                $('#ha_wk').hide()
                $('#pre_win_2').hide()
                $('#pre_win_3').hide()
                $('#img_win').hide()
                $('#pre_win_4').hide()
                logType='1'
                break
            case '4':
                clearInterval(logInt)
                $('#pre_win_2').show()
                $('.oc_wk').hide()
                $('#ha_wk').hide()
                $('#pre_win_1').hide()
                $('#pre_win_3').hide()
                $('#img_win').hide()
                $('#pre_win_4').hide()
                logType='2'
                break
            case '5':
                clearInterval(logInt)
                $('#pre_win_3').show()
                $('.oc_wk').hide()
                $('#ha_wk').hide()
                $('#pre_win_1').hide()
                $('#pre_win_2').hide()
                $('#img_win').hide()
                $('#pre_win_4').hide()
                logType='3'
                break
            case '6':
                const obj={
                    toolbar:false,
                    title:false,
                    navbar:false
                }
                new Viewer($('#imgWin_1')[0],obj)
                $('#pre_win_3').hide()
                $('.oc_wk').hide()
                $('#ha_wk').hide()
                $('#pre_win_1').hide()
                $('#pre_win_2').hide()
                $('#img_win').show()
                $('#pre_win_4').hide()
                errImg()
                break
            case '7':
                $('#pre_win_3').hide()
                $('.oc_wk').hide()
                $('#ha_wk').hide()
                $('#pre_win_1').hide()
                $('#pre_win_2').hide()
                $('#pre_win_4').show()
                $('#img_win').hide()
                break
        }
        if($('#pre_win_1').is(':visible')||$('#pre_win_2').is(':visible')||$('#pre_win_3').is(':visible')){
            cachex=''
            isScrollLock=false
            clearTimeout(lockNumbe)
            logInt=setInterval(function () {
                if(logType=='1'){
                    getLogText()
                }else if (logType=='2'){
                    minerlog()
                }else if(logType=='3'){
                    getLogErr()
                }
            },1000)
        }else {
            clearInterval(logInt)
        }
}

//超频跳转
function OClink(id) {
   window.location.href='/clocktune/new#s=edit&id='+id
}

var win_data_obj=''
//获取弹窗数据
function getInfoEachart(id) {
   $.ajax({
       url:'/query?STATISTICMINER',
       dataType:'json',
       type:'post',
       data:{
           STATISTICMINERID:id
       },
       success:function (res) {
           win_data_obj=res.STATISTICMINER[id]
            setDataList()
       }
   })
}
//设置数据格式
function setDataList() {
    let time=[]
    let tcz=[]
    let obj= {
        'hashrate': [],
        'pool': [],
        'latency': [],
        'pow': [],
        'fan': [],
        'temp': [],
        'send': [],
        'rejected': [],
        'devfee':[]
    }
    let dataObj=[]
    let lendList=[]
    let lendObj={}
    let count=0
    $.each(win_data_obj,function (i,it) {
        time.push(i)
        obj['hashrate'].push(it[0])
        obj['pool'].push(it[1])
        obj['latency'].push(it[2])
        obj['pow'].push(it[3])
        obj['fan'].push(it[4])
        obj['temp'].push(it[5])
        obj['send'].push(it[6])
        obj['rejected'].push(it[7])
        obj['devfee'].push(it[8])
        tcz.push(70)
    })
    $.each(obj,function (i,it) {
        count++
        if(i=='hashrate'||i=='pool'){
            lendObj[_mxEc(i)]=true
        }else {
            lendObj[_mxEc(i)]=false
        }
        lendList.push(_mxEc(i))
        let xx={
            name:_mxEc(i),
            data: it,
            type: getEachartTypeX(i),
            yAxisIndex: getIndex(i),
            showSymbol: false,
            itemStyle: {
                normal: {
                    color: color_list[count],
                    lineStyle:{
                        width:1//设置线条粗细
                    }
                }
            },
            areaStyle:{
                normal:{
                    color:new echarts.graphic.LinearGradient(0,0,0,1,[
                        {
                            offset: 0,
                            color:color_list[count]+'80'
                        },{
                            offset: 1,
                            color:"rgba(75,199,212,0)"
                        }
                    ])
                }
            },
            smooth: true
        }
        dataObj.push(xx)
    })
    let xx={
        name:'tcz',
        data: tcz,
        type:'line',
        yAxisIndex: 4,
        symbol:'none',
        showSymbol: false,
        itemStyle: {
            normal: {
                color: 'rgba(0,0,0,0)',
                lineStyle:{
                    width:0//设置线条粗细
                }
            }
        },
        areaStyle:{
            normal:{
                color:new echarts.graphic.LinearGradient(0,0,0,1,[
                    {
                        offset: 0,
                        color:'rgba(0,0,0,0)'
                    },{
                        offset: 1,
                        color:'rgba(0,0,0,0)'
                    }
                ])
            }
        },
        smooth: true
    }
    dataObj.push(xx)
    setWinEacharts(time,dataObj,lendList,lendObj)
}
function getData(timestamp,type,utc) {
    let date =''
    if(utc===undefined){
        date= new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
    }else {
        date =new Date(timestamp);
    }
    let Y = date.getFullYear() + '-';
    let M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
    let D = date.getDate();
    let h = date.getHours();
    let m = date.getMinutes();
    let s = date.getSeconds();
    if(type==1){
        h<10?h='0'+h:h
        m<10?m='0'+m:m
        return h+':'+m;
    }else {
        h<10?h='0'+h:h
        m<10?m='0'+m:m
        return Y+M+D+' '+h+':'+m;
    }
}
function wattOutput(watt) {
    var wattValue = watt;
    var wattUnit = ' W';
    if (wattValue / 1000 > 1) {
        wattValue /= 1000;
        wattUnit = ' kW';
        if (wattValue / 1000 > 1) {
            wattValue /= 1000;
            wattUnit = ' MW';
        }
    }
    wattValue = Math.round(wattValue * 1000) / 1000;
    return wattValue + wattUnit;
}
function getIndex(i) {
    switch (i) {
        case 'hashrate':
            return 0
        case 'pool':
            return 0
        case 'latency':
            return 1
        case 'pow':
            return 2
        case 'fan':
            return 3
        case 'temp':
            return 3
        case 'send':
            return 4
        case 'rejected':
            return 4
        case 'devfee':
            return 0
    }
}
function getEachartTypeX(i) {
    switch (i) {
        case 'hashrate':
            return 'line'
        case 'pool':
            return 'line'
        case 'latency':
            return 'line'
        case 'pow':
            return 'line'
        case 'fan':
            return 'line'
        case 'temp':
            return 'line'
        case 'devfee':
            return 'line'
        case 'send':
            return 'bar'
        case 'rejected':
            return 'bar'
    }
}

//设置按钮事件
function setClickWin(type,name) {
 if(my_wy_key>0){
     switch(type){
         case 'offline':
             $('#worker_info_soft').hide()
             $('#worker_info_miner').hide()
             $('#worker_info_cq').hide()
             $('#worker_info_st').hide()
             $('#softwareIcon').hide()
             $('#worker_info_sa').hide()
             $('#worker_info_gj').hide()
             $('#worker_info_hx').show()
             $('#label_jt').hide()
             $('#newDataHtml').hide()
             break
         case 'online':
             $('#worker_info_soft').show()
             $('#worker_info_miner').show()
             $('#worker_info_cq').show()
             $('#worker_info_st').show()
             $('#softwareIcon').show()
             $('#worker_info_sa').hide()
             $('#worker_info_gj').show()
             $('#worker_info_hx').hide()
             $('#label_jt').show()
             $('#newDataHtml').show()
             break
         case 'abnormal':
             $('#worker_info_soft').show()
             $('#worker_info_miner').show()
             $('#worker_info_cq').show()
             $('#worker_info_st').show()
             $('#softwareIcon').show()
             $('#worker_info_sa').hide()
             $('#worker_info_gj').show()
             $('#worker_info_hx').hide()
             $('#label_jt').show()
             $('#newDataHtml').show()
             break
         case 'anyhowmining':
             $('#worker_info_soft').show()
             $('#worker_info_miner').show()
             $('#worker_info_cq').hide()
             $('#worker_info_st').hide()
             $('#softwareIcon').show()
             $('#worker_info_sa').hide()
             $('#worker_info_gj').hide()
             $('#worker_info_hx').hide()
             $('#label_jt').show()
             $('#newDataHtml').show()
             break
         case 'anyhow_idle':
             $('#worker_info_soft').show()
             $('#worker_info_miner').show()
             $('#worker_info_cq').hide()
             $('#worker_info_st').hide()
             $('#softwareIcon').show()
             $('#worker_info_sa').hide()
             $('#worker_info_gj').hide()
             $('#worker_info_hx').hide()
             $('#newDataHtml').show()
             $('#label_jt').show()
             break
         case 'disable':
             $('#worker_info_soft').show()
             $('#worker_info_miner').show()
             $('#worker_info_cq').show()
             $('#worker_info_st').hide()
             $('#softwareIcon').hide()
             $('#worker_info_sa').show()
             $('#worker_info_gj').show()
             $('#worker_info_hx').hide()
             $('#newDataHtml').show()
             $('#label_jt').show()
             break
         case 'unable':
             $('#worker_info_soft').show()
             $('#worker_info_miner').show()
             $('#worker_info_cq').show()
             $('#worker_info_st').hide()
             $('#softwareIcon').hide()
             $('#worker_info_sa').hide()
             $('#worker_info_gj').show()
             $('#worker_info_hx').hide()
             $('#label_jt').show()
             $('#newDataHtml').hide()
             break
         case 'idle':
             $('#worker_info_soft').show()
             $('#worker_info_miner').show()
             $('#worker_info_cq').show()
             $('#worker_info_st').hide()
             $('#softwareIcon').show()
             $('#worker_info_sa').show()
             $('#worker_info_gj').show()
             $('#worker_info_hx').hide()
             $('#newDataHtml').show()
             $('#label_jt').show()
             break
     }
     $('#worker_info_btn').attr('onclick','toWorkerLink(\''+logMinId+'\')')
     $('#worker_info_soft').attr('onclick','restartSoftware(\''+logMinId+'\',\''+name+'\')')
     $('#worker_info_miner').attr('onclick','restartMiner(\''+logMinId+'\',\''+name+'\')')
     $('#worker_info_cq').attr('onclick','shutdownMachine(\''+logMinId+'\',\''+name+'\')')
     $('#worker_info_st').attr('onclick','stopMining(\''+logMinId+'\',\''+name+'\')')
     $('#softwareIcon').attr('onclick','softwareUpdate(\''+logMinId+'\',\''+name+'\')')
     $('#worker_info_sa').attr('onclick','startMining(\''+logMinId+'\',\''+name+'\')')
     $('#worker_info_gj').attr('onclick','shutdownMachineSafe(\''+logMinId+'\',\''+name+'\')')
     $('#worker_info_hx').attr('onclick','rouseMachine(\''+logMinId+'\',\''+name+'\')')
 }else {
     $('#worker_info_soft').hide()
     $('#worker_info_miner').hide()
     $('#worker_info_cq').hide()
     $('#worker_info_st').hide()
     $('#softwareIcon').hide()
     $('#worker_info_sa').hide()
     $('#worker_info_gj').hide()
     $('#worker_info_hx').hide()
     $('#label_jt').hide()
     $('#worker_info_oc_A').hide()
     $('#newDataHtml').show()
     $('#worker_info_btn').attr('onclick','toWorkerLink(\''+logMinId+'\')')
 }
}

//关闭弹窗
function closeEd(type) {
      switch (type) {
          case '1':
              $('#software_restart').hide()
              $('#miner_restart').hide()
              break
          case '2':
              $('#worker_shutdown').hide()
              break
          case '3':
              $('#software_stop').hide()
              break
          case '4':
              $('#software_start').hide()
              break
          case '5':
              $('#worker_shutdown_safe').hide()
              break
          case '6':
              $('#select_site_win').hide()
              $('#select_site').val(select_site_id)
              $('.popupbackground').fadeOut()
              break
          case '7':
              $('#consoleWin').hide()
              $('#consoleWin iframe').attr('src','')
              $('.my_p_zzc').hide()
              break
          case '8':
              $('#RouseMachineWin').hide()
              break
          default:
              $('#worker_shutdown_safe').hide()
              $('#software_start').hide()
              $('#software_stop').hide()
              $('#worker_shutdown').hide()
              $('#software_update').hide()
              $('#software_restart').hide()
              $('#miner_restart').hide()
              $('#select_site_win').hide()
              $('#forbiddenWin').hide()
              $('#worker_power_cycle').hide()
              $('#startUsingWin').hide()
              $('#worker_delete').hide()
              $('#select_site').val(select_site_id)
              break
      }
      if(select_all_list.length>0){
          $('.popupbackground').fadeOut()
      }
    clClickWin()
}

//跳转到详情页
function toWorkerLink(id) {
  window.location.href=`/worker#${id}`
}
//重启软件
function restartSoftware(id,name) {
    if (!$('#restartSoftware').hasClass('disabled')) {
        $('#software_restart .title').html(name);
        $('.popupbackground').fadeIn();
        $('#software_restart').fadeToggle();
        endClickWin()
    }
}
//重启请求
$('#software_restart .blue').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#software_restart .outlined_button, #software_restart .blue').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {restartSoftware: submit_id}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                $('#software_restart').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                clClickWin()
                setTimeout(function () {
                    $('#software_restart .outlined_button, #software_restart .blue').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#software_restart .outlined_button, #software_restart .blue').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#software_restart .outlined_button, #software_restart .blue').removeClass('disabled');
        }, 4500);
    });
});

//重启内核
function restartMiner(id,name) {
        $('#miner_restart .title').html(name);
        $('.popupbackground').fadeIn();
        $('#miner_restart').fadeToggle();
        endClickWin()
}
//重启请求
$('#miner_restart .blue').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#miner_restart .outlined_button, #miner_restart .blue').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {reMiner: submit_id}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                $('#miner_restart').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                clClickWin()
                setTimeout(function () {
                    $('#miner_restart .outlined_button, #miner_restart .blue').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#miner_restart .outlined_button, #miner_restart .blue').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#miner_restart .outlined_button, #miner_restart .blue').removeClass('disabled');
        }, 4500);
    });
});


//重启机器
function shutdownMachine(id,name) {
    if (!$('#shutdownMachine').hasClass('disabled')) {
        $('#worker_shutdown .title').html(name);
        $('.popupbackground').fadeIn();
        $('#worker_shutdown').fadeToggle('fast');
        endClickWin()
    }
}
$('#worker_shutdown .red').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#worker_shutdown .outlined_button, #worker_shutdown .red').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {rebootMachine: submit_id}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                clClickWin()
                $('#worker_shutdown').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                setTimeout(function () {
                    $('#worker_shutdown .outlined_button, #worker_shutdown .red').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#worker_shutdown .outlined_button, #worker_shutdown .red').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#worker_shutdown .outlined_button, #worker_shutdown .red').removeClass('disabled');
        }, 4500);
    });
});

//停止挖矿
function stopMining(id,name) {
    if (!$('#stopMining').hasClass('disabled')) {
        $('#software_stop .title').html(name);
        $('.popupbackground').fadeIn();
        $('#software_stop').fadeToggle('fast');
        endClickWin()
    }
}
$('#software_stop .blue').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#software_stop .outlined_button, #software_stop .blue').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {stopMining: submit_id}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                $('#software_stop').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                clClickWin()
                setTimeout(function () {
                    $('#software_stop .outlined_button, #software_stop .blue').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#software_stop .outlined_button, #software_stop .blue').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#software_stop .outlined_button, #software_stop .blue').removeClass('disabled');
        }, 4500);
    });
});

//超频测测试
$('#worker_atuo_oc').on('click',function () {
    $.post('/workers', {startauto: logMinId}, function (response) {
        if (response == '1') {
            setMsgTc('suc','自动超频发送成功！',2000)
        } else {
            setMsgTc('war','自动超频发送失败！',2000)
        }

    });
})
//点亮屏幕
$('#worker_wakeup').on('click',function () {
    $.post('/workers', {lightScreen: logMinId}, function (response) {
        if (response == '1') {
            setMsgTc('suc','点亮屏幕发送成功！',2000)
        } else {
            setMsgTc('war','点亮屏幕发送失败！',2000)
        }

    });
})

//更新软件
function softwareUpdate(id,name) {
    if (!$('#software_update').hasClass('disabled')) {
        $('#software_update .title').html(name);
        $('.popupbackground').fadeIn();
        $('#software_update').fadeToggle('fast');
        endClickWin()
    }
}
$('#software_update .blue').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#software_update .outlined_button, #software_update .blue').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show()
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {update:submit_id , nonce: nonce}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                $('#software_update').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                clClickWin()
                setTimeout(function () {
                    $('#software_update .outlined_button, #software_update .blue').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#software_update .outlined_button, #software_update .blue').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#software_update .outlined_button, #software_update .blue').removeClass('disabled');
        }, 4500);
    });
});

//启动挖矿
function startMining(id,name) {
    if (!$('#startMining').hasClass('disabled')) {
        $('#software_start .title').html(name);
        $('.popupbackground').fadeIn();
        $('#software_start').fadeToggle('fast');
        endClickWin()
    }
}
$('#software_start .blue').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#software_start .outlined_button, #software_start .blue').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {startMining: submit_id}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                clClickWin()
                $('#software_start').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                setTimeout(function () {
                    $('#software_start .outlined_button, #software_start .blue').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#software_start .outlined_button, #software_start .blue').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#software_start .outlined_button, #software_start .blue').removeClass('disabled');
        }, 4500);
    });
});

//关机
function shutdownMachineSafe(id,name) {
    if (!$('#shutdownMachine').hasClass('disabled')) {
        $('#worker_shutdown_safe .title').html(name);
        $('.popupbackground').fadeIn();
        $('#worker_shutdown_safe').fadeToggle('fast');
        endClickWin()
    }
}
$('#worker_shutdown_safe .red').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#worker_shutdown_safe .outlined_button, #worker_shutdown_safe .red').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {workerShutdownSafe: submit_id}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                clClickWin()
                $('#worker_shutdown_safe').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                setTimeout(function () {
                    $('#worker_shutdown_safe .outlined_button, #worker_shutdown_safe .red').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#worker_shutdown_safe .outlined_button, #worker_shutdown_safe .red').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#worker_shutdown_safe .outlined_button, #worker_shutdown_safe .red').removeClass('disabled');
        }, 4500);
    });
});

//唤醒机器
function rouseMachine(id,name) {
    if (!$('#rouseMachine').hasClass('disabled')) {
        $('#RouseMachineWin .title').html(name);
        $('.popupbackground').fadeIn();
        $('#RouseMachineWin').fadeToggle('fast');
        endClickWin()
    }
}
$('#RouseMachineWin .blue').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#RouseMachineWin .outlined_button, #RouseMachineWin .blue').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.post('/workers', {wakeUp: submit_id}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                $('#RouseMachineWin').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                clClickWin()
                setTimeout(function () {
                    $('#RouseMachineWin .outlined_button, #RouseMachineWin .blue').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#RouseMachineWin .outlined_button, #RouseMachineWin .blue').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#RouseMachineWin .outlined_button, #RouseMachineWin .blue').removeClass('disabled');
        }, 4500);
    });
});

//全部按钮禁止
function endClickWin() {
    $('#zzc_info_wk').show()
}
//解除按钮
function clClickWin() {
    $('#zzc_info_wk').hide()
}

function myBigImg(e) {

    // var imgsrc = $(e).attr("src");
    // var opacityBottom = '<div class="opacityBottom" style = "display:none"><img class="bigImg" src="' + imgsrc + '"></div>';
    // $(document.body).append(opacityBottom);
    // toBigImg();//变大函数
}
function toBigImg() {
    $(".opacityBottom").addClass("opacityBottom");//添加遮罩层
    $(".opacityBottom").show();
    $("html,body").addClass("none-scroll");//下层不可滑动
    $(".bigImg").addClass("bigImg");//添加图片样式
    $(".opacityBottom").click(function () {//点击关闭
        $("html,body").removeClass("none-scroll");
        $(".opacityBottom").remove();
    });
}
let myErrImgT=0
let errLock=1
function errImg() {

       myErrImgT=setTimeout(function () {
           var url = `/WorkerInfo?a=screenshot&mid=${logMinId}`;
           var xhr = new XMLHttpRequest();
           xhr.open('GET', url, true);
           xhr.responseType = "blob";
           xhr.setRequestHeader("client_type", "DESKTOP_WEB");
           // xhr.setRequestHeader("desktop_web_access_key", _desktop_web_access_key);
           xhr.onload = function() {
               errLock=1
               if(this.response.type == 'image/jpeg'){
                   $("#imgWin_1").attr('src',window.URL.createObjectURL(this.response));
                   $("#imgWin_1").show()
                   $("#imgWin_2").hide()
                   $('#imgLoading').hide()
               }else {
                   if(!$('#img_win').is(':hidden')){
                       errImg()
                   }
               }

           }
           xhr.send();
       },1000)

}
function RefreshImg(e) {
    if(errLock==0){
        return
    }
    $('#imgLoading').show()
    errLock=0
    errImg()
}

//打开窗口
function showWinSelect(){
    $('#select_site_win').show()
    $('#select_site').val(select_site_id)
    $('.popupbackground').fadeIn();
}

// //确认切换
// function switchSite() {
//     idx=$('#select_site').val()
//     sortType='1'
//     descAndAsc='1'
//     let cx=$('.cbg')
//     $.each(cx,function (i,it) {
//         $(it).find('.cbgx').removeClass('icon_g')
//     })
//     $('#search_info').val('')
//     let x_h=$('.Tab_type')
//     sortType='1'
//     descAndAsc='1'
//     $.each(x_h,function (i,it) {
//         $(it).attr('dex','0')
//         $(it).removeClass('isType')
//         $(it).find('.my_icon_x').removeClass('arrow_px_up arrow_px_down arrow_px_none')
//         if(i==0){
//             $(it).attr('dex','1')
//             $(it).addClass('isType')
//             $(it).find('.my_icon_x').addClass('arrow_px_up')
//         }else {
//             $(it).find('.my_icon_x').addClass('arrow_px_none')
//         }
//     })
//     workerNameSearch=''
//     search_type_list=[]
//     $('.worker_list').html(
//         ' <div class="spinner">\n' +
//         '                    <div class="bounce1"></div>\n' +
//         '                    <div class="bounce2"></div>\n' +
//         '                    <div class="bounce3"></div>\n' +
//         '                </div>'
//     )
//     $.each(siteListObj,function (i,it) {
//         if(it.id==Number(idx)){
//             setlabelCard(it)
//             getWorkerList(it.id,1)
//             select_site_id=it.id
//             getEachartData(it.id)
//             clearInterval(workerListIn)
//             workerListIn=setInterval("getWorkerList('"+it.id+"')",4000)
//         }
//     })
//     closeEd('6')
// }

$('#newDataHtml').on('click',function () {
    $('#consoleWin').show()
    if($('.clocktune_popup').is(':visible')){
        $('#consoleWin').css('right','60%')
    }else {
        $('#consoleWin').css('right','50%')
    }
    $('.my_p_zzc').show()
    $('#consoleWin iframe').attr('src','/minerWeb?mid='+logMinId)
})
$('.my_p_zzc').on('click',function () {
    $('#consoleWin').hide()
    $('.my_p_zzc').hide()
    $('#consoleWin iframe').attr('src','')
})
function downWinC() {
   window.open('https://dx.dxdx.me/r/client.zip')
}

var listWtlist=[]
//获取钱包
function getWalletHref(id) {

    if(select_site_id==='allsite'){
        $('#data_wk_label').hide()
        return
    }
    $.ajax({
        url:'/query?WALLETINFO',
        data:{
            WALLETINFONID:id=='allsite'?undefined:id,
        },
        type:'post',
        success:function (res) {
           if(res.WALLETINFO.length>0){
               $('.btn_ul_list_btn').show()
               $('#data_wk_label').show()
               listWtlist=res.WALLETINFO
               // listWtlist=[
               //     {
               //         coin:'eth',
               //         wallet:'0x9b73108b1e111BDddE29c774A8E4Ac177Cf831Cd'
               //     }
               // ]
               getWalletDataF2Poll(listWtlist[0].coin,listWtlist[0].wallet)
           }
        }
    })
}

function viewMoney() {
    if(walletType=='1'){
        window.open('https://www.f2pool.cf/eth/'+listWtlist[0].wallet)
    }else {
        window.open('http://ethermine.cf/miners/'+listWtlist[0].wallet+'/dashboard')
    }

}

function opWt(url){
    window.open(url)
}

function getWtName(name){
    if(name.length<=20){
        return name
    }else {
        return name.substring(0,12)+'...'+name.substring(name.length-7,name.length-1)
    }
}

$(document).on('click',function (e) {
    let mx=e.target
    if(!$(mx).is('.isNS')){
        $('.wt_list').slideUp()
    }
    if(!$(mx).is('.input_select_wk *')){
        $('.muen_list_wk').slideUp(200)
        $('.input_select_wk .select_icon').removeClass('is_select')
    }
    if(!$(mx).is('#x_list_wkxz_an1 *')){
        $('#actions_menu').slideUp(200)
    }
    if(!$(mx).is('.select_wk_ix *')){
        $('.list_ver').slideUp(100)
    }
})

//循环显卡标准线
function maxListObje(data) {
    let listMv={}
    $.each(data,function (i,it) {
        $.each(it.hardware,function (j,k) {
            // console.log(k)
            let key=(k.name+(k.lock==0?0:1)+k.type+it.mining.crypto)
            // console.log(key)
            if(listMv[key]==undefined){
                listMv[key]=k.speed
            }else {
                listMv[key]<k.speed?listMv[key]=k.speed:listMv[key]=listMv[key]
            }
        })
    })
    return listMv
}

//判断dom是否可见
function showEchartsDom(el, partiallyVisible = false) {
    // 第一个参数是element  第二个参数是 是否部分可见也算可见
    // 设置为false 即有一部份不可见即不可见
    // 设置为true 即部分可见即算是可见
    const {
        top,
        left,
        bottom,
        right
    } = el.getBoundingClientRect();
    const {
        innerHeight,
        innerWidth
    } = window;
    return partiallyVisible ?
        ((top > 0 && top < innerHeight) || (bottom > 0 && bottom < innerHeight)) &&
        ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth)) :
        top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth;
}


//判断机器的dom节点是否可见
function getWorkerDomShow() {
    let listDome=document.getElementsByClassName('echarts_wk')
    let elist=[]
    $.each(listDome,function (i,it) {
        if(showEchartsDom(it,true)){
           if($(it).attr('_echarts_instance_')==undefined){
               elist.push($(it).attr('id'))
           }
        }
    })
    setFromData(worker_eachart,elist)
}

var isLockInfoSize=true
function workerScorll(e) {
    isLockInfoSize=false
    let scrollTop = $('#worker_list_wk_X')[0].scrollTop // 滚动高度
    if(scrollTop==0){
        $('#worker_list_wk_X').css('pointer-events','none')
        setTimeout(function () {
            $('#worker_list_wk_X').css('pointer-events','all')
        },1500)
    }
    if(document.body.clientWidth>600){
        let DscrollTop = document.documentElement.scrollTop;
        let DscrollHeight = document.documentElement.scrollHeight;
        let DwindowHeight =document.documentElement.clientHeight;
        if(DscrollHeight-(DscrollTop + DwindowHeight)>1&&(scrollTop-infoScorll)>0){
            document.documentElement.scrollTop+=(scrollTop-infoScorll)
            $('#worker_list_wk_X')[0].scrollTop=infoScorll
        }else {
            isLockInfoSize=true
        }
    }else {
        isLockInfoSize=true
    }

    let allheight=workersListObj.length

    let fixedScrollTop = scrollTop - scrollTop % item_hegith; // 内容区域Y轴偏移，确保

    let startIndex = Number.parseInt(scrollTop / item_hegith)*sizeNum;

    let listDome=document.getElementsByClassName('item_worker')

    if(hideDom!=startIndex){
        hideDom=startIndex
        $('.worker_list').css('transform','translateY('+fixedScrollTop+'px)')
        if(listShowType==1){
            scorllWorker(filterObj)
        }else {
            setVoidList(filterObj)
        }

    }

}

$(document).scroll(function () {
    if(isLockInfoSize){
        infoScorll=$('#worker_list_wk_X')[0].scrollTop
    }
})
//滚动渲染（机器）
function scorllWorker(data) {
    //过滤状态
    let str=''
    let listId=[]
    $.each(data,function (i,it) {
        //实时算力
        let ss_h=Math.ceil(it.mining.hashrate.hashrate)
        let ss_h_unit=it.mining.hashrate.hashrate_unit
        //矿池算力
        let p_h=Math.ceil(it.mining.hashrate.poolspeed)
        //拒绝率
        let reject=0

        if((it.mining.shares.accepted_share+it.mining.shares.rejected_share)>0){
            reject= (it.mining.shares.rejected_share/(it.mining.shares.accepted_share+it.mining.shares.rejected_share)*100).toFixed(2)
        }
        let v_obj=getNumberV(it.hardware,it.info.hot,it.info.veryHot)
        let is_select='select_zzc'
        if(select_all_list.indexOf(it.info.id)!==-1){
            is_select='select_zzc is_s'
        }
        // console.log(is_select)
        if(hideDom<=i&&i<hideDom+showDom){
            str+=' <div class="item_worker" onclick="clickOpenWin('+it.info.id+',\''+it.info.name+'\',\''+it.info.status+'\','+it.info.nid+')" id="w_'+it.info.id+'" data-name="'+it.info.name.toLowerCase()+'" data-state="'+it.info.status+'">\n' +
                '<div class="'+is_select+'" onclick="chckeWorker('+it.info.id+',this)">' +
                '<div class="select_wk">' +
                '<div class="img_g_x"></div>'+
                '</div>' +
                '</div>'+
                '                    <div class="item_head_wk '+getWorkerState(it.info.status,it.mining.hashrate.hashrate,1)+'">\n' +
                '                        <div class="t1" data-tooltip="'+it.info.name+'">'+(it.info.name.length>9?it.info.name.substring(0,6)+'..':it.info.name)+'<div style="margin-left: 4px">('+getWorkerState(it.info.status,it.mining.hashrate.hashrate,2)+')</div></div>\n' +
                '                        <div class="t2">'+getTime(it.info.onlineTime)+'</div>\n' +
                '                    </div>\n' +
                '                    <div class="worker_h_info '+getWorkerState(it.info.status,it.mining.hashrate.hashrate,3)+'">\n' +
                '                        <div class="in_it" style="margin-left: 12px">\n' +
                '                            <div class="t1">'+ss_h+'<small>'+ss_h_unit+'</small></div>\n' +
                '                            <div class="t2">'+_mx3('Realtime<br>Hashrate')+'</div>\n' +
                '                        </div>\n' +
                '                        <div class="in_it">\n' +
                '                            <div class="t1">'+p_h+'<small>'+ss_h_unit+'</small></div>\n' +
                '                            <div class="t2">'+_mx3('Accept<br>Hashrate')+'</div>\n' +
                '                        </div>\n' +
                '                        <div class="in_it" style="margin-right: 12px">\n' +
                '                            <div class="t1">'+reject+'<small>%</small></div>\n' +
                '                            <div class="t2">'+_mx3('Rejection<br>Hashrate')+'</div>\n' +
                '                        </div>\n' +
                '                    </div>\n' +
                '                    <div class="GPU_list_wk">\n' +
                '                        <div class="GPU_c">\n' +
                '                            <div style="display: flex;">\n'
            $.each(it.hardware,function(ic,ix){
                if(it.info.status=='online'){
                    let xhx=(ix.name+(ix.lock==0?0:1)+ix.type+it.mining.crypto)
                    let xq='col1'//col8
                    let mh_v=(ix.speed/viode_obj_speed[xhx]).toFixed(2)
                    mh_v<0.8?xq='col8':(ix.status=='idle'?xq='col4':xq='col1')
                    // viode_obj_speed[xhx]-ix.speed>=2?xq='col8':(ix.status=='idle'?xq='col4':xq='col1')
                    str+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+xq+'" data-bus="'+(ic+1)+'" class="bgk '+xq+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                }else {
                    str+='<div data-tooltip="#'+(ic+1)+','+_mx2('Realtime Hashrate')+':'+Math.ceil(ix.speed)+' MH/s,'+_mx2('Accept Hashrate')+':'+Math.ceil(ix.poolspeed)+' MH/s" worker-id="'+it.info.id+'" colorBG="'+getWorkerState(ix.status,1,1)+'" data-bus="'+(ic+1)+'" class="bgk '+getWorkerState(ix.status,1,1)+'" onclick="showGPUwin(this)"><span class="it_ceil">'+Math.ceil(ix.speed)+'</span></div>'
                }
            })
            str+='                            </div>\n' +
                '                        </div>\n' +
                '                        <div class="v_wk">\n'
            if(v_obj.num>0){
                str+='<div>'+v_obj.name+' ('+v_obj.num+')</div>\n'+
                    '<div> <span style="color: '+v_obj.tempC+';font-size: 16px">'+v_obj.temp+'°C</span></div>\n'
            }
            else{
                str+='<div style="height:32px"></div>\n'+
                    '<div><span style="color: #ff564f;font-size: 16px"></span></div>\n'
            }

            str+= '                        </div>\n' +
                '                    </div>\n'
            if(echartDom['cm'+it.info.id]==undefined){
                listId.push('cm'+it.info.id)
                str+='<div><div class="echarts_wk" id="cm'+it.info.id+'">\n' +
                    _mx3('No Data') +
                    '</div></div>\n'
            }else {
                str+=echartDom['cm'+it.info.id]
            }
                str+='<small style="position: absolute;bottom: 0px;transform: translate(-50%) scale(0.6);left: 50%" id="ver_'+it.info.id+'">'+it.info.version+'</small>'+
                '</div>'
        }


    })
    $('.worker_list').html(str)
    setTimeout(function () {
        setFromData(worker_eachart,listId)
    },80)
}

// window.onscroll=function(){
//     let scrollTop = document.documentElement.scrollTop;
//        if(scrollTop>280){
//            $('.icon_up_page_wk').show()
//        }else {
//            $('.icon_up_page_wk').hide()
//        }
//     if(!scollUpState){
//         getWorkerDomShow()
//     }
// }

//滚动条置顶
function setScollrTop() {
    scollUpState=true
    setTimeout(function animation(){
        let scrollHeight=document.documentElement.scrollTop||document.body.scrollTop;
        if(scrollHeight > 0){
            setTimeout(()=>{
                scrollHeight-=200;
                document.documentElement.scrollTop=scrollHeight;
                animation();
            }, 1)
        }else {
            scollUpState=false
        }
    },10)
}
var lockListSc=false

function setScroll() {
    if(lockListSc){
        let scrollTop = $('.bmx_scorll')[0].scrollTop
        $('#list_card')[0].scrollTop=scrollTop
    }
}

function setScrollTow() {
   if(!lockListSc){
       let scrollTop = $('#list_card')[0].scrollTop
       $('.bmx_scorll')[0].scrollTop=scrollTop
   }
}

$('.bmx_scorll').mouseover(function () {
    lockListSc=true
})

$('.bmx_scorll').mouseout(function () {
    lockListSc=false
})



if ($('.clocktune_popup .frame').length > 0) {
    var ps_clocktune_height = new PerfectScrollbar('.clocktune_popup .frame', {
        wheelSpeed: 0.6,
        wheelPropagation: false,
        suppressScrollX: true
    });
}
function openDropdown(dropdownType) {
    if (!$('#' + dropdownType).closest('.col_1_2').hasClass('disabled')) {
        if ($('#' + dropdownType).css('display') == 'none' || $('#' + dropdownType).css("visibility") == "hidden") {
            $('.clocktune_values').hide();
        }
        setInofOCDom()
        $('#' + dropdownType).toggle();
    }
}

//生成超频下拉参数
selectOcList('select_Gpu_list')

function loadValues(dropdownType, thisEl) {
    var selectedGPU = $(thisEl).parent().children('select').val();
    // var clocktuneDataJson = jQuery.parseJSON(clocktuneData);
    var clocktuneDataJson = clocktuneData;
    if (dropdownType == 'clocktune_nvidia_windows') {
            var powerlimit = 'skip';
            var coreclock = 'skip';
            var memoryclock = 'skip';
            // var pstate = 'skip';
            let Temperature='skip'
            let Corevoltage='skip'
            let Memoryvoltage='skip'
            let fan=0
            jQuery.each(list_OC_GPU_type[selectedGPU].num, function (parameter, value) {
                if (parameter == 'power') {
                    powerlimit = parseInt(value);
                }
                if (parameter == 'core') {
                    coreclock =  parseInt(value);
                }
                if (parameter == 'cvolt') {
                    Corevoltage = parseInt(value);
                }
                if (parameter == 'mvolt') {
                    Memoryvoltage = parseInt(value);
                }
                if (parameter == 'mem') {
                    memoryclock = parseInt(value);
                }
                if (parameter == 'fan') {
                    fan = parseInt(value);
                }
            });
            $('.fixed_frame').find('.powerlimit').val(powerlimit);
            $('.fixed_frame').find('.coreclock').val(coreclock);
            $('.fixed_frame').find('.memoryclock').val(memoryclock);
            // $('.fixed_frame').find('.pstate').val(pstate);
            $('.fixed_frame').find('.Mtemperature').val(Temperature);
            $('.fixed_frame').find('.Mvoltage').val(Memoryvoltage);
            $('.fixed_frame').find('.Cvoltage').val(Corevoltage);
            $('.fixed_frame').find('.fan').val(fan);

        spaceChar = ' '
    }
}

//处理参数
function setOcList() {
    let str=''
    $.each(clickItemMcObJ.hardware,function (i,it) {
        let name=''
        if(it.name.indexOf('NVIDIA GeForce')!=-1){
            name=it.name.split('NVIDIA GeForce')[1]
        }
        if(it.name.indexOf('AMD Radeon')!=-1){
            name=it.name.split('AMD Radeon')[1]
        }
        if(it.name.indexOf('Laptop GPU')!=-1){
            it.name=it.name.replace('Laptop GPU','LG')
        }
        str+='<option value="'+i+'">#'+(i+1)+' '+name+' '+it.type+'</option>'
    })
    $('#v_list_sl').html(str)
    setOcItem()
}

//设置OC超频的值
function setOcItem() {
    let itme={}
    if(clickItemMcObJ.hardware[(Number($('#v_list_sl').val()))].oc!=undefined&&JSON.stringify(clickItemMcObJ.hardware[(Number($('#v_list_sl').val()))].oc)!='{}'){
        itme=clickItemMcObJ.hardware[(Number($('#v_list_sl').val()))].oc.nvidia
    }else if(clickItemMcObJ.oc!=undefined){
        itme=clickItemMcObJ.oc.nvidia
    }else {
        itme={
            core: "",
            cvolt: "",
            fan: "",
            mem: "",
            mvolt: "",
            power: "",
            temp: ""
        }
    }
    $('.fixed_frame').find('.powerlimit').val(itme.power);
    $('.fixed_frame').find('.coreclock').val(itme.core);
    $('.fixed_frame').find('.memoryclock').val(itme.mem);
    $('.fixed_frame').find('.Mtemperature').val(itme.temp);
    $('.fixed_frame').find('.Mvoltage').val(itme.mvolt);
    $('.fixed_frame').find('.Cvoltage').val(itme.cvolt);
    $('.fixed_frame').find('.fan').val(itme.fan);
}
$('#clocktune_nvidia_windows > select').on('change', function () {
    setInofOCDom()
});
function setInofOCDom() {
    var valuesBoxStr = '';
    // var clocktuneDataJson = jQuery.parseJSON(clocktuneData);
    var clocktuneDataJson = list_OC_GPU_type[Number($('#select_Gpu_list').val())].num
    var selectedGPU = $('#clocktune_nvidia_windows > select').val();
    jQuery.each(clocktuneDataJson, function (parameter, value) {
        if (parameter != 'popularity') {
            valuesBoxStr += '<div class="row">' +
                '<label class="parameter">' + _mx(ocTypeCs(parameter)) + '</label>' +
                '<label class="value">' + OCUnit(value,parameter) + '</label>' +
                '</div>';
        }
    });
    $('#clocktune_nvidia_windows_values').html(valuesBoxStr);
}

//切换列表类型
function clickTypeList() {
    if(localStorage.getItem('list_type_win')!=undefined&&localStorage.getItem('list_type_win')!=''){
        localStorage.setItem('list_type_win','')
    }else {
        localStorage.setItem('list_type_win','1')
    }
    location.reload()
}

//点击刷新数据
function resetWorkerList(e) {
    if($('#shua_x_list').hasClass('dis')){
        return
    }
    $('#shua_x_list').addClass('dis')
    listErrGPU=[]
    // $('.msg_err_tile_wk').hide()
    if(select_site_id==='allsite'){
        getWorkerList('allsite')
    }else {
        getWorkerList(select_site_id)
    }
}

var fileInf=undefined
//查询文件
function searchFileInfo(type) {
    if(type==undefined){
        clearInterval(fileInf)
    }
    $('#pre_win_4 pre').html('loading...')
        $.ajax({
            url:`/GetFile?mid=${logMinId}&file=${$('#fiel_i_url').val()}`,
            type:'get',
            dataType:'json',
            data:{
                a:type!==undefined?'isok':undefined
            },
            success:function(res) {
               if($('#pre_win_4').is(':visible')&&$('#fiel_i_url').val()!==''){
                    if(res.code!==0){
                        $('#pre_win_4 pre').html('Query failed')
                        clearInterval(fileInf)
                        return
                    }
                    if(res.isok===true){
                        clearInterval(fileInf)
                        getFileInfo(res.url,res.mimetype,res.size)
                    }
                    if(res.isok==undefined&&type==undefined) {
                        fileInf=setInterval('searchFileInfo(1)',1000)
                    }
                }else {
                   clearInterval(fileInf)
                   $('#pre_win_4 pre').html('')
                   $('#fiel_i_url').val('')
               }
            }
        })
}

//获取文件详情
function getFileInfo(url,type,size) {
    if(type.indexOf('text')!=-1){
        $.ajax({
            url:url,
            type:'get',
            dataType:'text',
            success:function (res) {
                $('#pre_win_4 pre').html(res)
            }
        })
    }else {
        let btn='<div onclick="downFileUrl(\''+url+'\')" style="margin:0;margin: 0 auto;margin-left:50%;display: inline-block;transform: translateX(-50%);margin-top: 200px;" class="blue button">Download File ('+size+')</div>'
        $('#pre_win_4 pre').html(btn)
        // downFileUrl(url)
    }
}
function downFileUrl(url) {
    window.open(url)
}

$('#fiel_i_url').keydown(function (e) {
    if (e.keyCode === 13) {
        searchFileInfo()
        $('.muen_list_wk').slideUp(200)
        $('.input_select_wk .select_icon').removeClass('is_select')
        return false;
    }
})
// $('#fiel_i_url').on('input',function () {
//     changeFileInput()
// })

$('.input_select_wk').on('click',function (e) {
    if($('.muen_list_wk').is(':visible')){
        $('.muen_list_wk').slideUp(200)
        $('.input_select_wk .select_icon').removeClass('is_select')
    }else {
        $('.muen_list_wk').slideDown(200)
        $('.input_select_wk .select_icon').addClass('is_select')
    }
})

var log_file_list=['nodevfee.php','loggpu.txt']
setFileSelectList()
//生成文件下拉列表
function setFileSelectList() {
    let newDate=getNewDateFile()
    log_file_list.push('log\\miner'+newDate+'.log')
    log_file_list.push('log\\soft'+newDate+'.log')
    log_file_list.push('log\\net'+newDate+'.log')
    log_file_list.push('log\\launch'+newDate+'.log')
    let str=''
    $.each(log_file_list,function (i,it) {
        str+='<div onclick="setFileInput(\''+i+'\')">'+it+'</div>'
    })
    $('.muen_list_wk').html(str)
}

function changeFileInput() {
   let x= $('#fiel_i_url').val()

    // $.each(log_file_list,function (i,it) {
    //     if(x==''){
    //         str+='<div onclick="setFileInput(\''+it+'\')">'+it+'</div>'
    //     }else {
    //         if(it.indexOf(x)!=-1){
    //             str+='<div onclick="setFileInput(\''+it+'\')">'+it+'</div>'
    //         }
    //     }
    // })
    $.each(log_file_list,function (i,it) {
        str+='<div onclick="setFileInput(\''+it+'\')">'+it+'</div>'
    })
    $('.muen_list_wk').html(str)
}

function setFileInput(str) {

    $('#fiel_i_url').val(log_file_list[Number(str)])
}

//获取当前的时间生成文件列表
function getNewDateFile() {
    let date = new Date();//时间戳为10位需*1000，时间戳为13位的话不需乘1000
    let Y = date.getFullYear();
    let M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1);
    let D = (date.getDate() < 10 ? '0'+date.getDate() : date.getDate());
    return ('_'+Y+'_'+M+'_'+D)
}

//开启选择
function openSelect(e) {
    select_all_item?select_all_item=false:select_all_item=true
    if(select_all_item){
        $(e).html('取消多选')
            $('.worker_list_all').addClass('is_ckcke')
            $('.worker_list').addClass('is_ckcke')
            $('.xz_an').show()
            $('.xz_an1').show()
            $('#x_list_wkxz_an1').show()
    }else {
        $(e).html('多选')
        $('.worker_list_all').removeClass('is_ckcke')
        $('.worker_list').removeClass('is_ckcke')
        select_all_list=[]
        $('.select_zzc').removeClass('is_s')
        $('.xz_an').hide()
        $($('.xz_an')[0]).attr('data-type','1')
        $($('.xz_an')[0]).html('全选')
        $('.xz_an1').html('已选择0个')
        $('.xz_an1').hide()
        $('#x_list_wkxz_an1').hide()
    }
}
function resetSelectAll() {
    select_all_item=false
    $('#select_all_check').html('多选')
    $('.worker_list_all').removeClass('is_ckcke')
    $('.worker_list').removeClass('is_ckcke')
    select_all_list=[]
    $('.select_zzc').removeClass('is_s')
    $('.xz_an').hide()
    $($('.xz_an')[0]).attr('data-type','1')
    $($('.xz_an')[0]).html('全选')
    $('.xz_an1').html('已选择0个')
    $('.xz_an1').hide()
    $('.popupbackground').hide()
    $('#x_list_wkxz_an1').hide()
    if(select_site_id==='allsite'){
        getWorkerList('allsite')
    }else {
        getWorkerList(select_site_id)
    }
}
//选择矿工
function chckeWorker(id,e) {
    if($(e).hasClass('is_s')){
        $(e).removeClass('is_s')
        select_all_list.splice(select_all_list.indexOf(id.toString()),1)
        $($('.xz_an')[0]).attr('data-type','1')
        $($('.xz_an')[0]).html('全选')
        // select_all_list=Array.from(new Set(select_all_list))
        $($('.xz_an1')[0]).html('已选择'+select_all_list.length+'个')
    }else {
        select_all_list.push(id.toString())
        $(e).addClass('is_s')
        // select_all_list=Array.from(new Set(select_all_list))
        $($('.xz_an1')[0]).html('已选择'+select_all_list.length+'个')
    }
}
//选择全部矿工
function selectAllWorker(e) {
    if($(e).attr('data-type')=='1'){
        let mx=[]
        if(listShowType==1){
            $.each(filterObj,function (i,it) {
                mx.push(it.info.id)
            })
        }else {
            $.each(filterObj,function (i,it) {
                mx.push(it.w_id)
            })
        }
        select_all_list=mx
        // select_all_list=Array.from(new Set(select_all_list))
        $('.select_zzc').addClass('is_s')
        $(e).attr('data-type','0')
        $(e).html('取消全选')

    }else {
        select_all_list=[]
        $('.select_zzc').removeClass('is_s')
        $(e).attr('data-type','1')
        $(e).html('全选')
    }
    $($('.xz_an1')[0]).html('已选择'+select_all_list.length+'个')
}
//反选
function reverseSelect() {
    let mx=[]
    if(listShowType==1){
        $.each(filterObj,function (i,it) {
            if(select_all_list.indexOf(it.info.id)==-1){
                mx.push(it.info.id)
            }
        })
    }else {
        $.each(filterObj,function (i,it) {
            if(select_all_list.indexOf(it.w_id)==-1){
                mx.push(it.w_id)
            }
        })
    }
    select_all_list=mx
    if(select_all_list.length==filterObj.length){
        $($('.xz_an')[0]).attr('data-type','0')
        $($('.xz_an')[0]).html('取消全选')
    }
    // select_all_list=Array.from(new Set(select_all_list))
    $($('.xz_an1')[0]).html('已选择'+select_all_list.length+'个')
    $.each($('.select_zzc'),function (i,it) {
        if($(it).hasClass('is_s')){
            $(it).removeClass('is_s')
        }else {
            $(it).addClass('is_s')
        }
    })
}

function openAllList() {
    if(select_site_id=='allsite'){
        $('.zaxconfig').hide()
    }else {
        $('.zaxconfig').show()
    }
    if($('#actions_menu').is(':visible')){
        $('#actions_menu').slideUp(200)
    }else {
        $('#actions_menu').slideDown(200)
    }
}
var workersInAction = '';
function massAction(type) {
    if (select_all_list.length > 0) {
        checkedNum=select_all_list.length
        $('#actions_menu').hide();
        workersInAction = Array.from(new Set(select_all_list)).join(',')
        //关机
        if (type == 'shutdown') {
            $('#worker_shutdown_safe .title').html(_mx2('Shut down') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#worker_shutdown_safe .gray').text(_mx2('No, keep them'));
                $('#worker_shutdown_safe .red').text(_mx2('Yes, shut them down'));
            }
            $('.popupbackground').fadeToggle();
            $('#worker_shutdown_safe').fadeToggle('fast');
            // $('#worker_shutdown_safe .red').attr('data-wn-id', workersInAction);
        }
        //延时重启
        if (type == 'powercycle') {
            $('#worker_power_cycle .title').html(_mx3('Power cycle') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#worker_power_cycle .gray').text(_mx2('No, keep them'));
                $('#worker_power_cycle .red').text(_mx2('Yes, power cycle'));
            }
            $('.popupbackground').fadeToggle();
            $('#worker_power_cycle').fadeToggle('fast');
            // $('#worker_power_cycle .red').attr('data-wn-id', workersInAction);
        }
        //重启机器
        if (type == 'reboot') {
            $('#worker_shutdown .title').html(_mx2('Reboot') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#worker_shutdown .gray').text(_mx2('No, keep them'));
                $('#worker_shutdown .blue').text(_mx2('Yes, reboot them'));
            }
            $('.popupbackground').fadeToggle();
            $('#worker_shutdown').fadeToggle('fast');
            // $('#worker_shutdown .blue').attr('data-wn-id', workersInAction);
        }
        //重启软件
        if (type == 'restart') {
            $('#software_restart .title').html(_mx('Restart') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#software_restart .gray').text(_mx2('No, keep them'));
                $('#software_restart .blue').text(_mx2('Yes, restart them'));
            }
            $('.popupbackground').fadeToggle();
            $('#software_restart').fadeToggle('fast');
            // $('#software_restart .blue').attr('data-wn-id', workersInAction);
        }
        //重启内核
        if (type == 'miner') {
            $('#miner_restart .title').html(_mx('Restart') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#miner_restart .gray').text(_mx2('No, keep them'));
                $('#miner_restart .blue').text(_mx2('Yes, restart them'));
            }
            $('.popupbackground').fadeToggle();
            $('#miner_restart').fadeToggle('fast');
            // $('#miner_restart .blue').attr('data-wn-id', workersInAction);
        }
        //停止挖矿
        if (type == 'stop') {
            $('#software_stop .title').html(_mx('Stop') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#software_stop .gray').text(_mx2('No, keep them'));
                $('#software_stop .blue').text(_mx2('Yes, stop them'));
            }
            $('.popupbackground').fadeToggle();
            $('#software_stop').fadeToggle('fast');
            // $('#software_stop .blue').attr('data-wn-id', workersInAction);
        }
        //启动挖矿
        if (type == 'start') {
            $('#software_start .title').html(_mx('Start') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#software_start .gray').text(_mx2('No, keep them'));
                $('#software_start .blue').text(_mx2('Yes, start them'));
            }
            $('.popupbackground').fadeToggle();
            $('#software_start').fadeToggle('fast');
            // $('#software_start .blue').attr('data-wn-id', workersInAction);
        }
        //更新软件
        if (type == 'update') {
            $('#software_update .title').html(_mx('Update') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            if (checkedNum > 1) {
                $('#software_update .gray').text(_mx2('No, keep them'));
                $('#software_update .blue').text(_mx2('Yes, update them'));
            }
            $('.popupbackground').fadeToggle();
            $('#software_update').fadeToggle('fast');
            // $('#software_update .blue').attr('data-wn-id', workersInAction);
        }
        //启用
        if(type=='startUsing'){
            $('#startUsingWin .title').html(_mx('start using')+' '+checkedNum+' '+ _mx3('workers') + '?')
            $('.popupbackground').fadeToggle();
            $('#startUsingWin').fadeToggle('fast');
            // $('#startUsingWin .blue').attr('data-wn-id', workersInAction);
        }
        //禁用
        if(type=='forbidden'){
            $('#forbiddenWin .title').html(_mx('forbidden')+' '+checkedNum+' '+ _mx3('workers') + '?')
            $('.popupbackground').fadeToggle();
            $('#forbiddenWin').fadeToggle('fast');
            // $('#forbiddenWin .red').attr('data-wn-id', workersInAction);
        }
        //唤醒
        if(type=='wakeUp'){
            $('#RouseMachineWin .title').html(_mx('Rouse Machine') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            $('.popupbackground').fadeToggle();
            $('#RouseMachineWin').fadeToggle('fast');
            // $('#RouseMachineWin .blue').attr('data-wn-id', workersInAction);
        }
        //配置
        if (type == 'edit') {
            // var nonce = $('#nonce').val();
            // localStorage.setItem('myWorkes',workersInAction)
            // localStorage.setItem('myType','worker')
            // window.location.href="/config#mx"
            let stxr=_mx('Action for')+checkedNum+_mx3('workers')
            $('#all_oc_temp .GPU_tlile').html(stxr)
            $('#all_oc_temp').show()
            $('#all_oc_temp .oc_wk').show()
            $('.popupbackground').show()
            // let str='<option selected="selected" value="0">No profile</option>'
            // $.each(tempOcList.MINERCONFIG,function (i,it) {
            //     $.each(userCreateTemp,function (j,k) {
            //         if(k.id==Number(select_site_id)&&k.uid==it.uid){
            //             str+='<option value="'+it.id+'">'+it.name+'</option>'
            //         }
            //     })
            // })
            // $('#oc_worker_all').html(str)

            str='<option selected="selected" value="0">No profile</option>'
            $.each(tempOcList.WORKERCONFIG,function (i,it) {
                $.each(userCreateTemp,function (j,k) {
                    if(k.id==Number(select_site_id)&&k.uid==it.uid){
                        str+='<option value="'+it.id+'">'+it.name+'</option>'
                    }
                })
            })
            $('#oc_setting_all').html(str)

            str='<option selected="selected" value="0">No profile</option>'
            $.each(tempOcList.OVERCLOCK,function (i,it) {
                $.each(userCreateTemp,function (j,k) {
                    if(k.id==Number(select_site_id)&&k.uid==it.uid){
                        let name=it.video
                        if(it.desc.length>0){
                            name+=' ('+it.desc+')'
                        }
                        if(it.maker.length>0){
                            name+=' ('+it.maker+')'
                        }
                        str+='<option value="'+it.id+'">'+name+'</option>'
                    }
                })

            })
            $('#oc_temp_all').html(str)

            str='<option selected="selected" value="0">No profile</option>'
            $.each(tempOcList.TRIGGERS,function (i,it) {
                $.each(userCreateTemp,function (j,k) {
                    if(k.id==Number(select_site_id)&&k.uid==it.uid){
                        let name=it.name
                        if(it.desc.length>0){
                            name+='('+it.desc+')'
                        }
                        str+='<option value="'+it.id+'">'+name+'</option>'
                    }
                })

            })
            $('#oc_auto_all').html(str)

            getAllWorkers(workersInAction)
        }
        //删除
        if (type=='delete'){
            $('#worker_delete .title').html(_mx('Delete') + ' ' + checkedNum + ' ' + _mx3('workers') + '?');
            $('#worker_delete .gray').text(_mx2('Cancel'));
            $('#worker_delete .blue').text(_mx2('Yes, delete'));
            $('.popupbackground').fadeToggle();
            $('#worker_delete').fadeToggle('fast');
        }
    }
}
//删除设备
$('#worker_delete .blue').on('click', function () {
    if ($(this).hasClass('disabled')) {
        return false;
    }
    $('#worker_power_cycle .outlined_button, #worker_power_cycle .red').addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    var nonce = $('#nonce').val();
    let submit_id=[]
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list))
        $.each(workersListObj,function (index,item) {
            let i_mx=submit_id.indexOf(item.info.id)
            if(i_mx!==-1&&item.info.status!=="offline"){
                submit_id.splice(i_mx,1)
            }
        })
    }
    if(submit_id.length===0){
        $('#worker_delete .outlined_button, #worker_delete .red').removeClass('disabled');
        $('.checkmark').hide();
        $('.circle-loader').removeClass('load-complete');
        $('.circle-loader, .message_err, .message_suc').hide();
        setMsgTc('war',_mx('There are no devices in the selected devices that can be deleted'),2000)
        return
    }
    $.post('/workers', {workerDelete: submit_id.join(','), nonce: nonce}, function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                $('#worker_delete').fadeOut('fast');
                $('.popupbackground').fadeOut('fast');
                setTimeout(function () {
                    $('#worker_delete .outlined_button, #worker_delete .red').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 100);
            }, 1200);
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $('#worker_delete .outlined_button, #worker_delete .red').removeClass('disabled');
            $('.message_err').show();
        }
        setTimeout(function () {
            $('#worker_delete .outlined_button, #worker_delete .red').removeClass('disabled');
        }, 4500);
    });
});

//禁用
$('#forbiddenWin .red').on('click',function () {
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.ajax({
        url:'/workers',
        type:'post',
        data:{
            Enable:0,
            worker:submit_id
        },
        success:function () {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                $('#forbiddenWin').fadeOut('fast');
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                $('.popupbackground').fadeOut('fast');
                setTimeout(function () {
                    $('#forbiddenWin .outlined_button, #forbiddenWin .red').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        }
    })
})

$('#startUsingWin .blue').on('click',function () {
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();
    let submit_id=logMinId
    if(select_all_list.length>0){
        submit_id=Array.from(new Set(select_all_list)).join(',')
    }
    $.ajax({
        url:'/workers',
        type:'post',
        data:{
            Enable:1,
            worker:submit_id
        },
        success:function () {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.message_suc').show();
            setTimeout(function () {
                if(select_all_list.length>0){
                    resetSelectAll()
                }
                $('#startUsingWin').fadeOut('fast');
                $('.popupbackground').fadeOut('fast');
                setTimeout(function () {
                    $('#startUsingWin .outlined_button, #startUsingWin .red').removeClass('disabled');
                    $('.checkmark').hide();
                    $('.circle-loader').removeClass('load-complete');
                    $('.circle-loader, .message_err, .message_suc').hide();
                }, 500);
            }, 3000);
        }
    })
})

// $('#worker_power_cycle .red').on('click', function () {
//     if ($(this).attr('data-wn') == '' || $(this).hasClass('disabled')) {
//         return false;
//     }
//     $('#worker_power_cycle .outlined_button, #worker_power_cycle .red').addClass('disabled');
//     $('.checkmark').hide();
//     $('.circle-loader').removeClass('load-complete');
//     $('.circle-loader, .message_err, .message_suc').hide();
//     $('.circle-loader').show();
//     var nonce = $('#nonce').val();
//     let submit_id=logMinId
//     if(select_all_list.length>0){
//         submit_id=Array.from(new Set(select_all_list)).join(',')
//     }
//     $.post('/workers', {workerPowerCycle: submit_id, nonce: nonce}, function (response) {
//         if (response == '1') {
//             $('.circle-loader').addClass('load-complete');
//             $('.notification_row').addClass('finished');
//             $('.checkmark').show();
//             $('.message_suc').show();
//             setTimeout(function () {
//                 if(select_all_list.length>0){
//                     resetSelectAll()
//                 }
//                 $('#worker_power_cycle').fadeOut('fast');
//                 $('.popupbackground').fadeOut('fast');
//                 setTimeout(function () {
//                     $('#worker_power_cycle .outlined_button, #worker_power_cycle .red').removeClass('disabled');
//                     $('.checkmark').hide();
//                     $('.circle-loader').removeClass('load-complete');
//                     $('.circle-loader, .message_err, .message_suc').hide();
//                 }, 100);
//             }, 1200);
//         } else {
//             $('.circle-loader').hide();
//             $('.notification_row').addClass('finished');
//             $('#worker_power_cycle .outlined_button, #worker_power_cycle .red').removeClass('disabled');
//             $('.message_err').show();
//         }
//         setTimeout(function () {
//             $('#worker_power_cycle .outlined_button, #worker_power_cycle .red').removeClass('disabled');
//         }, 4500);
//     });
// });

//获取多台电脑模板配置信息
function getAllWorkers(worker) {
    $.ajax({
        url:'/config?a=get',
        dataType:'json',
        type:'post',
        data:{
            worker:worker
        },
        success:function (res) {
            // $('#oc_worker_all').val(res.data.minerConfig)
            $('#oc_setting_all').val(res.data.setting)
            $('#oc_temp_all').val(res.data.overclock)
            $('#oc_auto_all').val(res.data.triggers)
            setOcListInfox()
        }
    })
}
function saveAllTemp() {
    $.ajax({
        url:'/config?a=set',
        dataType:'json',
        type:'post',
        data:{
            worker:Array.from(new Set(select_all_list)).join(','),
            // minerConfig:$('#oc_worker_all').val(),
            setting:$('#oc_setting_all').val(),
            triggers:$('#oc_auto_all').val(),
            overclock:$('#oc_temp_all').val(),
        },
        success:function (res) {
            if(res.code==0){
                setMsgTc('suc','submit success!',2500)
                resetSelectAll()
                clickCloseWin()
            }else {
                setMsgTc('war','submit error!',2500)
            }
        }
    })
}


//存储数据
var walletDataList={}
//显示数据类型
var walletType='1'//1鱼池 2miner

//获取钱包数据 https://api.f2pool.cf/{currency}/{user}
function getWalletDataF2Poll(bcx,qb) {
    walletType='1'
    $.ajax({
        url:`https://api.f2pool.cf/${bcx}/${qb}`,
        dataType:'json',
        success:function (res) {
            let ax=false
            $.each(res.workers,function (i,it) {
                if(it[0]=='wb'+10){
                    ax=true
                    $('#wb_15_min').html(convertHashrate(speedToHash(it[1],'H'),'H/s'))

                    $('#wb_24_h').html(convertHashrate(speedToHash(it[2],'H'),'H/s'))
                    $('#wb_24_txt').html('1H')

                    $('#wb_jjl').html(((it[5]/it[4])*100).toFixed(2)+'%')
                    $('#wb_jjl_txt').html('拒绝率')

                    $('#wb_ycl_txt').html('延迟率')
                    $('#wb_ycl').html('0%')

                    $('#wb_ycl_txt').parent().hide()
                }
            })
            if(ax){
                $('#jryw_ix').html(res.value_today.toFixed(2)+' '+bcx.toUpperCase())
                $('#qbye_ix').html(res.fixed_balance.toFixed(2)+' '+bcx.toUpperCase())
                $('#zryw_ix').html(res.ori_value_last_day.toFixed(2)+' '+bcx.toUpperCase())
                let time=[]
                let yData=[]
                $.each(res.hashrate_history,function (i,it) {
                    time.push(i)
                    yData.push(it)
                })
                setEchartWrb(yData,time,'echarts_wallet','钱包算力')
                $.ajax({
                    url:`https://api.f2pool.cf/${bcx}/${qb}/wb${select_site_id}`,
                    dataType:'json',
                    type:'get',
                    success:function (res) {
                        let time=[]
                        let yData=[]
                        $.each(res.hashrate_history,function (i,it) {
                            time.push(i)
                            yData.push(it)
                        })
                        setEchartWrb(yData,time,'echarts_wb','本场所算力')
                    }
                })
            }else {
                getMineCf(qb)
            }
        },error:function () {
            getMineCf(qb)
        }
    })

}


//获取钱包数据 https://ethermine.cf/api/worker
function getMineCf(qb) {
    walletType='2'
    $.ajax({
        url:`https://api.ethermine.cf/miner/${qb}/currentStats`,
        dataType:'json',
        success:function (res) {
            $('#qbye_ix').html((res.data.unpaid/Math.pow(10,18)).toFixed(2)+' ETH')
            $('#jryw_ix').html((res.data.coinsPerMin*24*60).toFixed('2')+' ETH')
            //averageHashrate 24小时平均算力
            $('#zryw_ix_wk').hide()
        }
    })
    $.ajax({
        url:`https://api.ethermine.cf/miner/${qb}/worker/wb${select_site_id}/currentStats`,
        // url:`https://api.ethermine.cf/miner/${qb}/worker/dev16/currentStats`,
        dataType:'json',
        success:function (res) {
           if(res.data!=='NO DATA'){
               $('#wb_jjl').html((res.data.invalidShares/(res.data.invalidShares+res.data.validShares)).toFixed(2)+'%')
               $('#wb_ycl').parent().hide()
               $('#wb_15_min').parent().hide()
               $('#wb_24_h').html(convertHashrate(speedToHash(res.data.averageHashrate,'H'),'H/s'))
           }
        }
    })
    //24小时钱包数据echart
    $.ajax({
        url:`https://api.ethermine.cf/miner/${qb}/history`,
        dataType:'json',
        success:function (res) {
            //averageHashrate 24小时平均算力
          if(res.error===undefined&&res.data.length>0){
              let time=[]
              let yData=[]
              $.each(res.data,function (i,it) {
                  time.push(it.time)
                  yData.push(it.currentHashrate)
              })
              setEchartWrb(yData,time,'echarts_wallet','钱包算力')
          }else {
              $('#echarts_wallet').html(_mx3('No Data'))
          }

        }
    })

    $.ajax({
        url:`https://api.ethermine.cf/miner/${qb}/worker/wb${select_site_id}/history`,
        // url:`https://api.ethermine.cf/miner/${qb}/worker/dev16/history`,
        dataType:'json',
        success:function (res) {
            if(res.error===undefined&&res.data.length>0){
                let time=[]
                let yData=[]
                $.each(res.data,function (i,it) {
                    time.push(it.time)
                    yData.push(it.currentHashrate)
                })
                setEchartWrb(yData,time,'echarts_wb','本场所算力')
            }else {
                $('#echarts_wb').html(_mx3('No Data'))
            }

        }
    })
}

//设置钱包图表
function setEchartWrb(data,xz,id,name) {
    let myChart= echarts.init(document.getElementById(id));
    let option = {
        animation: false,
        title: {
            text:name,
            textStyle:{
                color:'#fff',
                fontSize:'16px',
                marginTop:'3px'
                // fontWeight:30
            }
        },
        grid:{
            left:'70px',
            right:'10px',
            top:'40px',
            bottom:'10px'
        },
        tooltip: {
            trigger: 'axis',
            backgroundColor:'#343d52',
            borderColor:'#343d52',
            textStyle: { // 提示框浮层的文本样式。
                color: '#fff',
                fontStyle: 'normal',
                fontWeight: 'normal',
                fontFamily: 'sans-serif',
                fontSize: 14,
            },
            formatter: function(arg) {
                let str=''
                if(walletType==='1'){
                    str='<div style="display: flex;justify-content: left;align-items: center">'+getData(arg[0].name,2,1)+'</div>'
                }else {
                    str='<div style="display: flex;justify-content: left;align-items: center">'+getData(arg[0].name,2)+'</div>'
                }

                str+='<div style="display: flex;justify-content: left;align-items: center">'+arg[0].marker+' '+arg[0].seriesName+': '+convertHashrate(speedToHash(arg[0].value,'H'),'H/s')+'</div>'

                return str
            }
        },
        xAxis: {
            axisLabel: {
                formatter: function (a) {
                    return ''
                    // return ''
                }
            },
            "axisTick": {       //y轴刻度线
                "show": false
            },
            type: 'category',
            boundaryGap: false,
            data: xz
        },
        yAxis: {
            axisLabel: {
                formatter: function (a) {
                    return reDataFlow(Number(a/1024).toFixed(2),'K',1)
                    // return ''
                }
            },
            type: 'value',
            "splitLine": {     //网格线
                "show": false
            },
            "axisTick": {       //y轴刻度线
                "show": true
            },
            "axisLine": {       //y轴
                "show": true
            },
        },
        series:[{
            name: _mxEc('hashrate'),
            data: data,
            type: 'line',
            // symbol:'none',
            showSymbol: false,
            itemStyle: {
                normal: {
                    color: color_list[0],
                    lineStyle:{
                        width:1//设置线条粗细
                    }
                }
            },
            areaStyle:{
                normal:{
                    color:new echarts.graphic.LinearGradient(0,0,0,1,[
                        {
                            offset: 0,
                            color:color_list[0]+'77'
                        },{
                            offset: 1,
                            color:"rgba(75,199,212,0)"
                        }
                    ])
                }
            },
            smooth: true
        }]
    }
    myChart.setOption(option,true)
}
//重置钱包状态栏
function resetWaLabel() {
    $('.poll_msg_wk').html(' <div>\n' +
        '         <div class="end_txt_1" style="border: 0" id="wb_15_txt">15Min</div>\n' +
        '         <div class="end_txt_2" id="wb_15_min">0</div>\n' +
        '     </div>\n' +
        '     <div>\n' +
        '         <div class="end_txt_1" id="wb_24_txt">24H</div>\n' +
        '         <div class="end_txt_2" id="wb_24_h">0</div>\n' +
        '     </div>\n' +
        '     <div>\n' +
        '         <div class="end_txt_1" id="wb_jjl_txt">拒绝率</div>\n' +
        '         <div class="end_txt_2" id="wb_jjl">0%</div>\n' +
        '     </div>\n' +
        '     <div>\n' +
        '         <div class="end_txt_1" id="wb_ycl_txt">延迟率</div>\n' +
        '         <div class="end_txt_2" id="wb_ycl">0%</div>\n' +
        '     </div>\n' +
        '     <div class="echarts_wallet_wk">\n' +
        '         <div class="echarts_wb" id="echarts_wb"></div>\n' +
        '         <div class="echarts_wallet" id="echarts_wallet"></div>\n' +
        '     </div>\n' +
        ' </div>')
    $('.wallet_msg_wk').html('<div data-tooltip="昨日已挖"  style="display: flex;align-items: center" id="zryw_ix_wk">\n' +
        '      <div class="item_icon_one"></div>\n' +
        '      <div class="item_tx1" id="zryw_ix">0.00 ETH</div>\n' +
        '  </div>\n' +
        ' <div data-tooltip="今日已挖(预估)"  style="display: flex;align-items: center" id="jryw_ix_wk">\n' +
        '     <div class="item_icon_tow"></div>\n' +
        '     <div class="item_tx1" id="jryw_ix">0.00 ETH</div>\n' +
        ' </div>\n' +
        '<div data-tooltip="钱包余额"  style="display: flex;align-items: center" id="qbye_ix_wk">\n' +
        '    <div class="item_icon_three"></div>\n' +
        '    <div class="item_tx1" id="qbye_ix">0.00 ETH</div>\n' +
        '</div>')
}
