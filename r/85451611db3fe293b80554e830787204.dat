(function ($) {
    $.fn.inputFilter = function (inputFilter) {
        return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
            if (inputFilter(this.value)) {
                this.oldValue = this.value;
                this.oldSelectionStart = this.selectionStart;
                this.oldSelectionEnd = this.selectionEnd;
            } else if (this.hasOwnProperty("oldValue")) {
                this.value = this.oldValue;
                this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
            }
        });
    };
}(jQuery));
$(".fanMin, .fanMax, .targetTemp, .memTemp").inputFilter(function (value) {
    return /^\d*$/.test(value);
});
$('.value').bind('mouseup keyup', function (e) {
    var caretPos = e.target.selectionStart;
    var inputValue = $(this).val();
    var countSpaces = 0;
    var allSpaces = 0;
    for (var i = 0; i < inputValue.length - 1; i++) {
        if (inputValue[i] == ' ' && i < caretPos - 1) {
            countSpaces++;
        }
        if (inputValue[i] == ' ') {
            allSpaces++;
        }
    }
    $('.gpu_count').html('');
    if (inputValue.length > 0) {
        if (allSpaces > 0 && !$(this).hasClass('gpu_limited')) {
            $(this).parent().parent().children('label').children('.gpu_count').html('GPU #' + countSpaces);
        } else {
            $(this).parent().parent().children('label').children('.gpu_count').html(_('All GPUs'));
        }
    }
})
$('.fixed_fans_tab').click(function () {
    $(this).addClass('selected');
    $(this).parent().parent().find('.auto_fans_tab').removeClass('selected');
    $(this).parent().parent().find('.fixed_fans').show();
    $(this).parent().parent().find('.auto_fans').hide();
});
$('.auto_fans_tab').click(function () {
    $(this).addClass('selected');
    $(this).parent().parent().find('.fixed_fans_tab').removeClass('selected');
    $(this).parent().parent().find('.auto_fans').show();
    $(this).parent().parent().find('.fixed_fans').hide();
});
$('.selectable .checkbox').click(function () {
    $(this).toggleClass('selected');
    if ($(this).hasClass('selected')) {
        $(this).attr('data-tooltip', _mx('Included in update'));
        $(this).closest('.selectable').removeClass('disabled');
        $(this).closest('.selectable').find('.textarea').attr('contenteditable', 'true');
        $(this).closest('.selectable').find('input').prop('disabled', false);
        $(this).closest('.selectable').find('select').prop('disabled', false);
    } else {
        $(this).attr('data-tooltip', _mx('Excluded from update'));
        $(this).closest('.selectable').addClass('disabled');
        $(this).closest('.selectable').find('.textarea').attr('contenteditable', 'false');
        $(this).closest('.selectable').find('input').prop('disabled', true);
        $(this).closest('.selectable').find('select').prop('disabled', true);
    }
});
var selection = [];
$('.buttons > .green').click(function () {
    if ($(this).hasClass('saveRestart')) {
        var saveType = 'restart';
    } else {
        var saveType = 'download';
    }
    var $this = $(this);
    if ($(this).hasClass('disabled')) {
        return false;
    }

    var oc = {};

        var type = 'advanced';
        if (typeof selection['oc_nvidia'] !== 'undefined') {
            type = selection['oc_nvidia'];
        }
        oc['nvidia'] = {};
        oc['nvidia']['power'] = $('#oc_nvidia').find('.' + type).find('.powerlimit').val().trim().replace(/,/g, ' ');

        oc['nvidia']['core'] = $('#oc_nvidia').find('.' + type).find('.coreclock').val().trim().replace(/,/g, ' ');
        oc['nvidia']['cvolt'] = $('#oc_nvidia').find('.' + type).find('.Corevoltage').val().trim().replace(/,/g, ' ');
        oc['nvidia']['fan'] = $('#oc_nvidia').find('.' + type).find('.fan').val().trim().replace(/,/g, ' ');
        oc['nvidia']['mem'] = $('#oc_nvidia').find('.' + type).find('.memoryclock').val().trim().replace(/,/g, ' ');
        oc['nvidia']['temp'] = $('#oc_nvidia').find('.' + type).find('.Temperature').val().trim().replace(/,/g, ' ');
        oc['nvidia']['mvolt'] = $('#oc_nvidia').find('.' + type).find('.Memoryvoltage').val().trim().replace(/,/g, ' ');

    var name = $('#profileName').val();
    var video = $('#listVideo').val();
    var maker = $('#listMaker').val();

    if($('#oc_nvidia').hasClass('disabled')&&$('#oc_amd').hasClass('disabled')){
        $('.message_err').html('error')
        $('.message_err').show()
        return false
    }else {
        $('.message_err').html('')
        $('.message_err').hide()
    }
    $(this).addClass('disabled');
    $('.checkmark').hide();
    $('.circle-loader').removeClass('load-complete');
    $('.circle-loader, .message_err, .message_suc').hide();
    $('.circle-loader').show();


    var nonce = $('#nonce').val();
    oc['desc']=name
    oc['video']=video
    console.log('v',video)
    oc['nonce']=nonce
    oc['save']=saveType
    oc['maker']=maker
    if(getQueryP('s')=='edit'){
        oc['id']=getQueryP('id')
    }
    $.post(window.location.href, JSON.stringify(oc), function (response) {
        if (response == '1') {
            $('.circle-loader').addClass('load-complete');
            $('.notification_row').addClass('finished');
            $('.checkmark').show();
            $('.button').removeClass('disabled');
            $('.message_suc').show();
            window.location.replace('/clocktune')
        } else {
            $('.circle-loader').hide();
            $('.notification_row').addClass('finished');
            $this.removeClass('disabled');
            $('.message_err').html(response).show();
            if (response == _('Please name your profile.')) {
                $('#profileName').addClass('error_value');
            }
        }

    });
});

function openDropdown(dropdownType) {
    if (!$('#' + dropdownType).closest('.col_1_2').hasClass('disabled')) {
        if ($('#' + dropdownType).css('display') == 'none' || $('#' + dropdownType).css("visibility") == "hidden") {
            $('.clocktune_values').hide();
        }
        $('#' + dropdownType).toggle();
    }
}

$('#clocktune_nvidia_msos > select').on('change', function () {
    var valuesBoxStr = '';
    var clocktuneDataJson = jQuery.parseJSON(clocktuneData);
    var selectedGPU = $('#clocktune_nvidia_msos > select').val();
    jQuery.each(clocktuneDataJson[selectedGPU]['msos'], function (parameter, value) {
        if (parameter != 'Popular client' && parameter != 'Settings') {
            valuesBoxStr += '<div class="row"><label class="parameter">' + parameter + '</label><label class="value">' + value + '</label></div>';
        }
    });
    $('#clocktune_nvidia_msos_values').html(valuesBoxStr);
});
$('#clocktune_amd_msos > select').on('change', function () {
    var valuesBoxStr = '';
    var clocktuneDataJson = jQuery.parseJSON(clocktuneData);
    var selectedGPU = $('#clocktune_amd_msos > select').val();
    jQuery.each(clocktuneDataJson[selectedGPU]['msos'], function (parameter, value) {
        if (parameter != 'Popular client' && parameter != 'Settings') {
            valuesBoxStr += '<div class="row"><label class="parameter">' + parameter + '</label><label class="value">' + value + '</label></div>';
        }
    });
    $('#clocktune_amd_msos_values').html(valuesBoxStr);
});
$('#clocktune_nvidia_windows > select').on('change', function () {
    var valuesBoxStr = '';
    var clocktuneDataJson = jQuery.parseJSON(clocktuneData);
    var selectedGPU = $('#clocktune_nvidia_windows > select').val();
    jQuery.each(clocktuneDataJson[selectedGPU]['windows'], function (parameter, value) {
        if (parameter != 'Popular client' && parameter != 'Settings') {
            valuesBoxStr += '<div class="row"><label class="parameter">' + _mx(parameter) + '</label><label class="value">' + value + '</label></div>';
        }
    });
    $('#clocktune_nvidia_windows_values').html(valuesBoxStr);
});
$('#clocktune_amd_windows > select').on('change', function () {
    var valuesBoxStr = '';
    var clocktuneDataJson = jQuery.parseJSON(clocktuneData);
    var selectedGPU = $('#clocktune_amd_windows > select').val();
    jQuery.each(clocktuneDataJson[selectedGPU]['windows'], function (parameter, value) {
        if (parameter != 'Popular client' && parameter != 'Settings') {
            valuesBoxStr += '<div class="row"><label class="parameter">' + _mx(parameter) + '</label><label class="value">' + value + '</label></div>';
        }
    });
    $('#clocktune_amd_windows_values').html(valuesBoxStr);
});
var spaceChar = ' ';
// if (typeof newProfile != 'undefined' && newProfile == '1') {
//     spaceChar = '';
// }

function loadValues(dropdownType, thisEl) {
    var selectedGPU = $(thisEl).parent().children('select').val();
    var clocktuneDataJson = jQuery.parseJSON(clocktuneData);

    if (dropdownType == 'clocktune_nvidia_windows') {
        var powerlimitwatt = spaceChar + 'skip';
        var powerlimit = spaceChar + 'skip';
        var coreclock = spaceChar + 'skip';
        var lockedcoreclock = spaceChar + 'skip';
        var memoryclock = spaceChar + 'skip';
        var pstate = spaceChar + 'skip';
        let Temperature= spaceChar + 'skip'
        let Corevoltage= spaceChar + 'skip'
        let Memoryvoltage= spaceChar + 'skip'
        let fanx= spaceChar + 'skip'
        jQuery.each(clocktuneDataJson[selectedGPU]['windows'], function (parameter, value) {
            if (parameter == 'Power limit') {
                if (value.indexOf('%') != -1) {
                    powerlimit = spaceChar + parseInt(value.split(' ')[0]);
                } else {
                    powerlimitwatt = spaceChar + parseInt(value.split(' ')[0]);
                }
            }

            if (parameter == 'Core clock') {
                coreclock = spaceChar + parseInt(value.split(' ')[0]);
            }
            if (parameter == 'Core voltage') {
                Corevoltage = spaceChar + parseInt(value.split(' ')[0]);
            }
            if (parameter == 'Memory voltage' || parameter == 'Memory state voltage') {
                Memoryvoltage = spaceChar + parseInt(value.split(' ')[0]);
            }
            if (parameter == 'Locked core clock') {
                lockedcoreclock = spaceChar + parseInt(value.split(' ')[0]);
            }
            if (parameter == 'Memory clock') {
                memoryclock = spaceChar + parseInt(value.split(' ')[0]);
            }
        });

        $('#oc_nvidia').find('.powerlimitwatt').val($('#oc_nvidia').find('.powerlimitwatt').val() + powerlimitwatt);
        $('#oc_nvidia').find('.powerlimit').val($('#oc_nvidia').find('.powerlimit').val() + powerlimit);
        $('#oc_nvidia').find('.coreclock').val($('#oc_nvidia').find('.coreclock').val() + coreclock);
        $('#oc_nvidia').find('.lockedcoreclock').val($('#oc_nvidia').find('.lockedcoreclock').val() + lockedcoreclock);
        $('#oc_nvidia').find('.memoryclock').val($('#oc_nvidia').find('.memoryclock').val() + memoryclock);
        $('#oc_nvidia').find('.pstate').val($('#oc_nvidia').find('.pstate').val() + pstate);
        $('#oc_nvidia').find('.Temperature').val($('#oc_nvidia').find('.Temperature').val() + Temperature);
        $('#oc_nvidia').find('.Memoryvoltage').val($('#oc_nvidia').find('.Memoryvoltage').val() + Memoryvoltage);
        $('#oc_nvidia').find('.Corevoltage').val($('#oc_nvidia').find('.Corevoltage').val() + Corevoltage);
        $('#oc_nvidia').find('.fan').val($('#oc_nvidia').find('.fan').val() + fanx);
        spaceChar = ' '
    }
}

$(document).mousedown(function (e) {
    var container = $(".clocktune_values");
    if (!container.is(e.target) && container.has(e.target).length === 0 && (!$(".button.gray").is(e.target)) && e.target.localName != 'html') {
        container.hide();
    }
});

window.onload=function () {
    if(getQueryP('s')=='copy'||getQueryP('s')=='edit'){
        setFormData()
    }
}
// let dataObj=[
//     {
//         "name": "测试模板",
//         "id": 10036,
//         "used": "1",
//         "type": "amd,window,nvidia",
//         "amd": {
//             "powerlimit": "skip skip skip skip",
//             "fan": 70,
//             "coreclock": "1500 1500 1500 1500",
//             "memoryclock": "2060 2060 2060 2060",
//             "vddc": "900 900 900 900",
//             "corestate": "skip skip skip skip",
//             "mvdd": "1350 1350 1350 1350",
//             "memorystate": "skip skip skip skip"
//         },
//         "nvidia": {
//             "powerlimit": "skip",
//             "powerlimitwatt": "230",
//             "coreclock": "150",
//             "lockedcoreclock": "skip",
//             "fan": 70,
//             "memoryclock": "500",
//             "pstate": "skip"
//         }
//     }
// ]
//数据回填
function setFormData() {
    $.getJSON('/overclockquery?id='+getQueryP('id'),function (res) {
        setDomState(res)
    })
}
//设置界面数据回填
function setDomState(data) {
    let obj = data
    let isAshow=true
    let isNshow=true
    if (obj[0].type.indexOf('amd')!=-1){
        isAshow=true
    }else {
        isAshow=false
    }

    if (obj[0].type.indexOf('nvidia')!=-1){
        isNshow=true
    }else {
        isNshow=false
    }
    if(obj[0].desc!==undefined){
        $('#profileName').val(obj[0].desc);
    }
    if(obj[0].video!==undefined){
        $('#listVideo').val(obj[0].video); 
    }
    if(obj[0].maker!==undefined){
        $('#listMaker').val(obj[0].maker);
    }

    // if (isAshow){
    //     $('#oc_amd').attr('data-tooltip', _('Included in update'));
    //     $('#oc_amd').closest('.selectable').removeClass('disabled');
    //     $('#oc_amd').closest('.selectable').find('.textarea').attr('contenteditable', 'true');
    //     $('#oc_amd').closest('.selectable').find('input').prop('disabled', false);
    //     $('#oc_amd').closest('.selectable').find('select').prop('disabled', false);
    //     $('#oc_amd').removeClass('disabled')
    //     $('#oc_amd .checkbox').addClass('selected')
    //     $('#oc_amd .powerlimit').val(obj[0]['amd']['powerlimit']+' ')
    //     $('#oc_amd .fan').val(obj[0]['amd']['fan'])
    //     $('#oc_amd .coreclock').val(obj[0]['amd']['coreclock']+' ')
    //     $('#oc_amd .memoryclock').val(obj[0]['amd']['memoryclock']+' ')
    //     $('#oc_amd .vddc').val(obj[0]['amd']['vddc']+' ')
    //     $('#oc_amd .corestate').val(obj[0]['amd']['corestate']+' ')
    //     $('#oc_amd .mvdd').val(obj[0]['amd']['mvdd']+' ')
    //     $('#oc_amd .memorystate').val(obj[0]['amd']['memorystate']+' ')
    // }
    if(isNshow){
        // $('#oc_nvidia').attr('data-tooltip', _('Included in update'));
        $('#oc_nvidia').closest('.selectable').removeClass('disabled');
        $('#oc_nvidia').closest('.selectable').find('.textarea').attr('contenteditable', 'true');
        $('#oc_nvidia').closest('.selectable').find('input').prop('disabled', false);
        $('#oc_nvidia').closest('.selectable').find('select').prop('disabled', false);
        $('#oc_nvidia').removeClass('disabled')
        $('#oc_nvidia .checkbox').addClass('selected')
        $('#oc_nvidia .powerlimit').val(obj[0]['nvidia']['power'])
        $('#oc_nvidia .Memoryvoltage').val(obj[0]['nvidia']['mvolt'])
        // $('#oc_nvidia .powerlimitwatt').val(obj[0]['nvidia']['powerlimitwatt']+' ')
        $('#oc_nvidia .coreclock').val(obj[0]['nvidia']['core'])
        // $('#oc_nvidia .lockedcoreclock').val(obj[0]['nvidia']['lockedcoreclock']+' ')
        $('#oc_nvidia .fan').val(obj[0]['nvidia']['fan'])
        $('#oc_nvidia .memoryclock').val(obj[0]['nvidia']['mem'])
        $('#oc_nvidia .Temperature').val(obj[0]['nvidia']['temp'])
        $('#oc_nvidia .Corevoltage').val(obj[0]['nvidia']['cvolt'])
        // $('#oc_nvidia .pstate').val(obj[0]['nvidia']['pstate'])
    }

}
//获取参数
function getQueryP(type) {
  let str=window.location.href
  let a=str.split('#')[1].split('&')
  let obj={}
  $.each(a,function (i,t) {
      obj[t.split('=')[0]]=t.split('=')[1]
  })
  return obj[type]
}
//刷新页面
function disCard() {
    window.location.reload()
}

function clearForm() {
    $('#oc_nvidia .powerlimit').val('')
    $('#oc_nvidia .Memoryvoltage').val('')
    // $('#oc_nvidia .powerlimitwatt').val(obj[0]['nvidia']['powerlimitwatt']+' ')
    $('#oc_nvidia .coreclock').val('')
    // $('#oc_nvidia .lockedcoreclock').val(obj[0]['nvidia']['lockedcoreclock']+' ')
    $('#oc_nvidia .fan').val('')
    $('#oc_nvidia .memoryclock').val('')
    $('#oc_nvidia .Temperature').val('')
    $('#oc_nvidia .Corevoltage').val('')
}
